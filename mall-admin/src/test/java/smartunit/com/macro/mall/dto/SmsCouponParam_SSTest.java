/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.dto;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.macro.mall.dto.SmsCouponParam;
import com.macro.mall.model.SmsCouponProductCategoryRelation;
import com.macro.mall.model.SmsCouponProductRelation;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import org.junit.runner.RunWith;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class SmsCouponParam_SSTest extends SmsCouponParam_SSTest_scaffolding {
// allCoveredLines:[16, 17, 18, 21, 22]

  @Test(timeout = 4000)
  public void test_getProductCategoryRelationList_0()  throws Throwable  {
      //caseID:1971d20b2479867a760b3dfc0d05ef62
      //CoveredLines: [16, 21]
      //Assert: assertTrue(method_result.isEmpty());
      
      SmsCouponParam smsCouponParam0 = new SmsCouponParam();
      ArrayList<SmsCouponProductCategoryRelation> arrayList0 = new ArrayList<SmsCouponProductCategoryRelation>();
      
      PrivateAccess.setVariable((Class<?>) SmsCouponParam.class, smsCouponParam0, "productCategoryRelationList", (Object) arrayList0);
      
      //Call method: getProductCategoryRelationList
      List<SmsCouponProductCategoryRelation> list0 = smsCouponParam0.getProductCategoryRelationList();
      
      //Test Result Assert
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test_getProductRelationList_1()  throws Throwable  {
      //caseID:62260f2fb6a9b0dc80d6149c6fa0a7f8
      //CoveredLines: [16, 17]
      //Assert: assertEquals(0, method_result.size());
      
      SmsCouponParam smsCouponParam0 = new SmsCouponParam();
      ArrayList<SmsCouponProductRelation> arrayList0 = new ArrayList<SmsCouponProductRelation>();
      
      PrivateAccess.setVariable((Class<?>) SmsCouponParam.class, smsCouponParam0, "productRelationList", (Object) arrayList0);
      
      //Call method: getProductRelationList
      List<SmsCouponProductRelation> list0 = smsCouponParam0.getProductRelationList();
      
      //Test Result Assert
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test_setProductCategoryRelationList_2()  throws Throwable  {
      //caseID:25104bbe0c14aec4406687a056df9f7b
      //CoveredLines: [16, 22]
      //Input_0_List<SmsCouponProductCategoryRelation>: linkedList0
      
      SmsCouponParam smsCouponParam0 = new SmsCouponParam();
      LinkedList<SmsCouponProductCategoryRelation> linkedList0 = new LinkedList<SmsCouponProductCategoryRelation>();
      
      //Call method: setProductCategoryRelationList
      smsCouponParam0.setProductCategoryRelationList(linkedList0);
      
      //Test Result Assert
      assertNull(smsCouponParam0.getPerLimit());
  }

  @Test(timeout = 4000)
  public void test_setProductRelationList_3()  throws Throwable  {
      //caseID:cf9103d6c1045fd2aae1ac5c43237178
      //CoveredLines: [16, 18]
      //Input_0_List<SmsCouponProductRelation>: arrayList0
      
      SmsCouponParam smsCouponParam0 = new SmsCouponParam();
      ArrayList<SmsCouponProductRelation> arrayList0 = new ArrayList<SmsCouponProductRelation>();
      
      //Call method: setProductRelationList
      smsCouponParam0.setProductRelationList(arrayList0);
      
      //Test Result Assert
      assertNull(smsCouponParam0.getNote());
  }
}
