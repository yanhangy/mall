/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.service.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.macro.mall.mapper.SmsCouponHistoryMapper;
import com.macro.mall.model.SmsCouponHistory;
import com.macro.mall.service.impl.SmsCouponHistoryServiceImpl;
import java.util.ArrayList;
import java.util.List;
import java.util.Stack;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class SmsCouponHistoryServiceImpl_SSTest extends SmsCouponHistoryServiceImpl_SSTest_scaffolding {
// allCoveredLines:[19, 24, 25, 26, 27, 28, 30, 31, 33, 34, 36]

  @Test(timeout = 4000)
  public void test_list_0()  throws Throwable  {
      //caseID:3711dc82b882b9d2155929129f1fc2a3
      //CoveredLines: [19, 24, 25, 26, 27, 28, 30, 33, 34, 36]
      //Input_0_Long: 2596L
      //Input_1_Integer: null
      //Input_2_String: OS#.H_T'3Zc}
      //Input_3_Integer: 48
      //Input_4_Integer: 48
      //Assert: assertTrue(method_result.isEmpty());
      
      SmsCouponHistoryServiceImpl smsCouponHistoryServiceImpl0 = new SmsCouponHistoryServiceImpl();
      ArrayList<SmsCouponHistory> arrayList0 = new ArrayList<SmsCouponHistory>();
      //mock smsCouponHistoryMapper0
      SmsCouponHistoryMapper smsCouponHistoryMapper0 = mock(SmsCouponHistoryMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(arrayList0).when(smsCouponHistoryMapper0).selectByExample(any(com.macro.mall.model.SmsCouponHistoryExample.class));
      
      PrivateAccess.setVariable((Class<?>) SmsCouponHistoryServiceImpl.class, smsCouponHistoryServiceImpl0, "historyMapper", (Object) smsCouponHistoryMapper0);
      Long long0 = new Long(2596L);
      Integer integer0 = new Integer(48);
      
      //Call method: list
      List<SmsCouponHistory> list0 = smsCouponHistoryServiceImpl0.list(long0, (Integer) null, "OS#.H_T'3Zc}", integer0, integer0);
      
      //Test Result Assert
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test_list_1()  throws Throwable  {
      //caseID:3790375779a1b250116545750bd1e4cb
      //CoveredLines: [19, 24, 25, 26, 27, 30, 31, 33, 34, 36]
      //Input_0_Long: null
      //Input_1_Integer: 0
      //Input_2_String: 1.0
      //Input_3_Integer: 0
      //Input_4_Integer: 0
      //Assert: assertTrue(method_result.isEmpty());
      
      SmsCouponHistoryServiceImpl smsCouponHistoryServiceImpl0 = new SmsCouponHistoryServiceImpl();
      Stack<SmsCouponHistory> stack0 = new Stack<SmsCouponHistory>();
      //mock smsCouponHistoryMapper0
      SmsCouponHistoryMapper smsCouponHistoryMapper0 = mock(SmsCouponHistoryMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(stack0).when(smsCouponHistoryMapper0).selectByExample(any(com.macro.mall.model.SmsCouponHistoryExample.class));
      
      PrivateAccess.setVariable((Class<?>) SmsCouponHistoryServiceImpl.class, smsCouponHistoryServiceImpl0, "historyMapper", (Object) smsCouponHistoryMapper0);
      Integer integer0 = new Integer(0);
      
      //Call method: list
      List<SmsCouponHistory> list0 = smsCouponHistoryServiceImpl0.list((Long) null, integer0, "1.0", integer0, integer0);
      
      //Test Result Assert
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test_list_2()  throws Throwable  {
      //caseID:029c0723824561c1953f1a6c110fd5b1
      //CoveredLines: [19, 24, 25, 26, 27, 28, 30, 31, 33, 36]
      //Input_0_Long: 1L
      //Input_1_Integer: (-1)
      //Input_2_String: 
      //Input_3_Integer: (-1)
      //Input_4_Integer: (-1)
      //Assert: assertNull(method_result);
      
      SmsCouponHistoryServiceImpl smsCouponHistoryServiceImpl0 = new SmsCouponHistoryServiceImpl();
      //mock smsCouponHistoryMapper0
      SmsCouponHistoryMapper smsCouponHistoryMapper0 = mock(SmsCouponHistoryMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      PrivateAccess.setVariable((Class<?>) SmsCouponHistoryServiceImpl.class, smsCouponHistoryServiceImpl0, "historyMapper", (Object) smsCouponHistoryMapper0);
      Long long0 = new Long(1L);
      Integer integer0 = new Integer((-1));
      
      //Call method: list
      List<SmsCouponHistory> list0 = smsCouponHistoryServiceImpl0.list(long0, integer0, "", integer0, integer0);
      
      //Test Result Assert
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test_list_3()  throws Throwable  {
      //caseID:4449335368299a9f4a6ab9373ca753b2
      //CoveredLines: [19, 24, 25, 26, 27, 28, 30, 31, 33, 34, 36]
      //Input_0_Long: (-899L)
      //Input_1_Integer: 0
      //Input_2_String: com.macro.mall.service.impl.SmsCouponHistoryServiceImpl
      //Input_3_Integer: 0
      //Input_4_Integer: 0
      //Assert: assertNull(method_result);
      
      SmsCouponHistoryServiceImpl smsCouponHistoryServiceImpl0 = new SmsCouponHistoryServiceImpl();
      //mock smsCouponHistoryMapper0
      SmsCouponHistoryMapper smsCouponHistoryMapper0 = mock(SmsCouponHistoryMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      PrivateAccess.setVariable((Class<?>) SmsCouponHistoryServiceImpl.class, smsCouponHistoryServiceImpl0, "historyMapper", (Object) smsCouponHistoryMapper0);
      Long long0 = new Long((-899L));
      Integer integer0 = new Integer(0);
      
      //Call method: list
      List<SmsCouponHistory> list0 = smsCouponHistoryServiceImpl0.list(long0, integer0, "com.macro.mall.service.impl.SmsCouponHistoryServiceImpl", integer0, integer0);
      
      //Test Result Assert
      assertNull(list0);
  }
}
