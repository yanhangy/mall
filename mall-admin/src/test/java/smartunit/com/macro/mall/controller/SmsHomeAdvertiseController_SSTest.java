/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.controller;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.macro.mall.common.api.CommonPage;
import com.macro.mall.common.api.CommonResult;
import com.macro.mall.controller.SmsHomeAdvertiseController;
import com.macro.mall.model.SmsHomeAdvertise;
import com.macro.mall.service.SmsHomeAdvertiseService;
import java.util.LinkedList;
import java.util.Stack;
import java.util.Vector;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class SmsHomeAdvertiseController_SSTest extends SmsHomeAdvertiseController_SSTest_scaffolding {
// allCoveredLines:[22, 30, 31, 32, 33, 40, 41, 42, 43, 50, 51, 52, 53, 60, 61, 68, 69, 70, 71, 82, 83]

  @Test(timeout = 4000)
  public void test_create_0()  throws Throwable  {
      //caseID:49e449fd4b6d5cfcc36de1396a5845f7
      //CoveredLines: [22, 30, 31, 32]
      //Input_0_SmsHomeAdvertise: {}
      //Assert: assertEquals("\u64CD\u4F5C\u6210\u529F", method_result.getMessage());
      
      SmsHomeAdvertiseController smsHomeAdvertiseController0 = new SmsHomeAdvertiseController();
      //mock smsHomeAdvertiseService0
      SmsHomeAdvertiseService smsHomeAdvertiseService0 = mock(SmsHomeAdvertiseService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(2578).when(smsHomeAdvertiseService0).create(any(com.macro.mall.model.SmsHomeAdvertise.class));
      PrivateAccess.setVariable((Class<?>) SmsHomeAdvertiseController.class, smsHomeAdvertiseController0, "advertiseService", (Object) smsHomeAdvertiseService0);
      //mock smsHomeAdvertise0
      SmsHomeAdvertise smsHomeAdvertise0 = mock(SmsHomeAdvertise.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: create
      CommonResult commonResult0 = smsHomeAdvertiseController0.create(smsHomeAdvertise0);
      
      //Test Result Assert
      assertEquals("\u64CD\u4F5C\u6210\u529F", commonResult0.getMessage());
  }

  @Test(timeout = 4000)
  public void test_create_1()  throws Throwable  {
      //caseID:e1d6e0235ebeea3eabc7181c2292fa62
      //CoveredLines: [22, 30, 31, 33]
      //Input_0_SmsHomeAdvertise: {}
      //Assert: assertEquals(500L, method_result.getCode());
      
      SmsHomeAdvertiseController smsHomeAdvertiseController0 = new SmsHomeAdvertiseController();
      //mock smsHomeAdvertiseService0
      SmsHomeAdvertiseService smsHomeAdvertiseService0 = mock(SmsHomeAdvertiseService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      PrivateAccess.setVariable((Class<?>) SmsHomeAdvertiseController.class, smsHomeAdvertiseController0, "advertiseService", (Object) smsHomeAdvertiseService0);
      //mock smsHomeAdvertise0
      SmsHomeAdvertise smsHomeAdvertise0 = mock(SmsHomeAdvertise.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: create
      CommonResult commonResult0 = smsHomeAdvertiseController0.create(smsHomeAdvertise0);
      
      //Test Result Assert
      assertEquals(500L, commonResult0.getCode());
  }

  @Test(timeout = 4000)
  public void test_delete_2()  throws Throwable  {
      //caseID:5b741b4da53b043b0ee76e750e6028fa
      //CoveredLines: [22, 40, 41, 42]
      //Input_0_Long>: linkedList0
      //Assert: assertEquals(200L, method_result.getCode());
      
      SmsHomeAdvertiseController smsHomeAdvertiseController0 = new SmsHomeAdvertiseController();
      //mock smsHomeAdvertiseService0
      SmsHomeAdvertiseService smsHomeAdvertiseService0 = mock(SmsHomeAdvertiseService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(411).when(smsHomeAdvertiseService0).delete(ArgumentMatchers.<java.lang.Long>anyList());
      PrivateAccess.setVariable((Class<?>) SmsHomeAdvertiseController.class, smsHomeAdvertiseController0, "advertiseService", (Object) smsHomeAdvertiseService0);
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      
      //Call method: delete
      CommonResult commonResult0 = smsHomeAdvertiseController0.delete(linkedList0);
      
      //Test Result Assert
      assertEquals(200L, commonResult0.getCode());
  }

  @Test(timeout = 4000)
  public void test_delete_3()  throws Throwable  {
      //caseID:8afa7a00605967d6f4157f37b80d5883
      //CoveredLines: [22, 40, 41, 43]
      //Input_0_Long>: stack0
      //Assert: assertEquals(500L, method_result.getCode());
      
      SmsHomeAdvertiseController smsHomeAdvertiseController0 = new SmsHomeAdvertiseController();
      //mock smsHomeAdvertiseService0
      SmsHomeAdvertiseService smsHomeAdvertiseService0 = mock(SmsHomeAdvertiseService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      PrivateAccess.setVariable((Class<?>) SmsHomeAdvertiseController.class, smsHomeAdvertiseController0, "advertiseService", (Object) smsHomeAdvertiseService0);
      Stack<Long> stack0 = new Stack<Long>();
      
      //Call method: delete
      CommonResult commonResult0 = smsHomeAdvertiseController0.delete(stack0);
      
      //Test Result Assert
      assertEquals(500L, commonResult0.getCode());
  }

  @Test(timeout = 4000)
  public void test_getItem_4()  throws Throwable  {
      //caseID:e7948a3691c67af6142a622879bb816c
      //CoveredLines: [22, 60, 61]
      //Input_0_Long: 0L
      //Assert: assertEquals("\u64CD\u4F5C\u6210\u529F", method_result.getMessage());
      
      SmsHomeAdvertiseController smsHomeAdvertiseController0 = new SmsHomeAdvertiseController();
      //mock smsHomeAdvertiseService0
      SmsHomeAdvertiseService smsHomeAdvertiseService0 = mock(SmsHomeAdvertiseService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      PrivateAccess.setVariable((Class<?>) SmsHomeAdvertiseController.class, smsHomeAdvertiseController0, "advertiseService", (Object) smsHomeAdvertiseService0);
      Long long0 = new Long(0L);
      
      //Call method: getItem
      CommonResult<SmsHomeAdvertise> commonResult0 = smsHomeAdvertiseController0.getItem(long0);
      
      //Test Result Assert
      assertEquals("\u64CD\u4F5C\u6210\u529F", commonResult0.getMessage());
  }

  @Test(timeout = 4000)
  public void test_list_5()  throws Throwable  {
      //caseID:172e717772ed154d9a46a18bac4c3cb3
      //CoveredLines: [22, 82, 83]
      //Input_0_String: "2582"
      //Input_1_Integer: 4286
      //Input_2_String: "]X+9$e]F)/X{\""
      //Input_3_Integer: 4286
      //Input_4_Integer: 4286
      //Assert: assertEquals(200L, method_result.getCode());
      
      SmsHomeAdvertiseController smsHomeAdvertiseController0 = new SmsHomeAdvertiseController();
      Vector<SmsHomeAdvertise> vector0 = new Vector<SmsHomeAdvertise>();
      //mock smsHomeAdvertiseService0
      SmsHomeAdvertiseService smsHomeAdvertiseService0 = mock(SmsHomeAdvertiseService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(vector0).when(smsHomeAdvertiseService0).list(anyString() , anyInt() , anyString() , anyInt() , anyInt());
      PrivateAccess.setVariable((Class<?>) SmsHomeAdvertiseController.class, smsHomeAdvertiseController0, "advertiseService", (Object) smsHomeAdvertiseService0);
      Integer integer0 = new Integer(4286);
      
      //Call method: list
      CommonResult<CommonPage<SmsHomeAdvertise>> commonResult0 = smsHomeAdvertiseController0.list("2582", integer0, "]X+9$e]F)/X{\"", integer0, integer0);
      
      //Test Result Assert
      assertEquals(200L, commonResult0.getCode());
  }

  @Test(timeout = 4000)
  public void test_update_6()  throws Throwable  {
      //caseID:da16ea5ba9e136820a76c4bdedf6ea3b
      //CoveredLines: [22, 68, 69, 70]
      //Input_0_Long: 1185147655
      //Input_1_SmsHomeAdvertise: {}
      //Assert: assertEquals(200L, method_result.getCode());
      
      SmsHomeAdvertiseController smsHomeAdvertiseController0 = new SmsHomeAdvertiseController();
      //mock smsHomeAdvertiseService0
      SmsHomeAdvertiseService smsHomeAdvertiseService0 = mock(SmsHomeAdvertiseService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(1185147655).when(smsHomeAdvertiseService0).update(anyLong() , any(com.macro.mall.model.SmsHomeAdvertise.class));
      PrivateAccess.setVariable((Class<?>) SmsHomeAdvertiseController.class, smsHomeAdvertiseController0, "advertiseService", (Object) smsHomeAdvertiseService0);
      Long long0 = new Long(1185147655);
      //mock smsHomeAdvertise0
      SmsHomeAdvertise smsHomeAdvertise0 = mock(SmsHomeAdvertise.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: update
      CommonResult commonResult0 = smsHomeAdvertiseController0.update(long0, smsHomeAdvertise0);
      
      //Test Result Assert
      assertEquals(200L, commonResult0.getCode());
  }

  @Test(timeout = 4000)
  public void test_update_7()  throws Throwable  {
      //caseID:bd2b46239d93dce8e225d3c0aeb32b80
      //CoveredLines: [22, 68, 69, 71]
      //Input_0_Long: 1193L
      //Input_1_SmsHomeAdvertise: {}
      //Assert: assertEquals("\u64CD\u4F5C\u5931\u8D25", method_result.getMessage());
      
      SmsHomeAdvertiseController smsHomeAdvertiseController0 = new SmsHomeAdvertiseController();
      //mock smsHomeAdvertiseService0
      SmsHomeAdvertiseService smsHomeAdvertiseService0 = mock(SmsHomeAdvertiseService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      PrivateAccess.setVariable((Class<?>) SmsHomeAdvertiseController.class, smsHomeAdvertiseController0, "advertiseService", (Object) smsHomeAdvertiseService0);
      Long long0 = new Long(1193L);
      //mock smsHomeAdvertise0
      SmsHomeAdvertise smsHomeAdvertise0 = mock(SmsHomeAdvertise.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: update
      CommonResult commonResult0 = smsHomeAdvertiseController0.update(long0, smsHomeAdvertise0);
      
      //Test Result Assert
      assertEquals("\u64CD\u4F5C\u5931\u8D25", commonResult0.getMessage());
  }

  @Test(timeout = 4000)
  public void test_updateStatus_8()  throws Throwable  {
      //caseID:e759791c1fefd4611a7c4155cf00d756
      //CoveredLines: [22, 50, 51, 53]
      //Input_0_Long: 0
      //Input_1_Integer: 0
      //Assert: assertEquals("\u64CD\u4F5C\u5931\u8D25", method_result.getMessage());
      
      SmsHomeAdvertiseController smsHomeAdvertiseController0 = new SmsHomeAdvertiseController();
      //mock smsHomeAdvertiseService0
      SmsHomeAdvertiseService smsHomeAdvertiseService0 = mock(SmsHomeAdvertiseService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(0).when(smsHomeAdvertiseService0).updateStatus(anyLong() , anyInt());
      PrivateAccess.setVariable((Class<?>) SmsHomeAdvertiseController.class, smsHomeAdvertiseController0, "advertiseService", (Object) smsHomeAdvertiseService0);
      Long long0 = new Long(0);
      Integer integer0 = new Integer(0);
      
      //Call method: updateStatus
      CommonResult commonResult0 = smsHomeAdvertiseController0.updateStatus(long0, integer0);
      
      //Test Result Assert
      assertEquals("\u64CD\u4F5C\u5931\u8D25", commonResult0.getMessage());
  }

  @Test(timeout = 4000)
  public void test_updateStatus_9()  throws Throwable  {
      //caseID:44947281c9aa6a996cba9f66fe197160
      //CoveredLines: [22, 50, 51, 52]
      //Input_0_Long: 1523
      //Input_1_Integer: 1523
      //Assert: assertEquals(200L, method_result.getCode());
      
      SmsHomeAdvertiseController smsHomeAdvertiseController0 = new SmsHomeAdvertiseController();
      //mock smsHomeAdvertiseService0
      SmsHomeAdvertiseService smsHomeAdvertiseService0 = mock(SmsHomeAdvertiseService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(1523).when(smsHomeAdvertiseService0).updateStatus(anyLong() , anyInt());
      PrivateAccess.setVariable((Class<?>) SmsHomeAdvertiseController.class, smsHomeAdvertiseController0, "advertiseService", (Object) smsHomeAdvertiseService0);
      Long long0 = new Long(1523);
      Integer integer0 = new Integer(1523);
      
      //Call method: updateStatus
      CommonResult commonResult0 = smsHomeAdvertiseController0.updateStatus(long0, integer0);
      
      //Test Result Assert
      assertEquals(200L, commonResult0.getCode());
  }
}
