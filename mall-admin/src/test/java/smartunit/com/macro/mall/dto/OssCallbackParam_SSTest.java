/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.dto;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.macro.mall.dto.OssCallbackParam;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class OssCallbackParam_SSTest extends OssCallbackParam_SSTest_scaffolding {
// allCoveredLines:[11, 12, 15, 17, 19]

  @Test(timeout = 4000)
  public void test_equals_0()  throws Throwable  {
      //caseID:0f4401afa19d9656546ad112d4521356
      //CoveredLines: [11, 11, 11, 11, 11, 12, 12, 12]
      //Input_0_Object: 1
      //Assert: assertFalse(method_result);
      
      OssCallbackParam ossCallbackParam0 = new OssCallbackParam();
      
      //Call method: equals
      boolean boolean0 = ossCallbackParam0.equals("1");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_1()  throws Throwable  {
      //caseID:dd080076f2fff3b46a7eabdd9a17058b
      //CoveredLines: [11, 11, 11, 11, 11, 12, 12, 12]
      //Input_0_Object: ossCallbackParam0
      //Assert: assertTrue(method_result);
      
      OssCallbackParam ossCallbackParam0 = new OssCallbackParam();
      
      //Call method: equals
      boolean boolean0 = ossCallbackParam0.equals(ossCallbackParam0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_2()  throws Throwable  {
      //caseID:52e4e99ca3dac3a69015a2e2f05b219d
      //CoveredLines: [11, 11, 11, 11, 11, 12, 12, 12, 15, 17, 19]
      //Input_0_Object: ossCallbackParam0
      //Assert: assertTrue(method_result);
      
      OssCallbackParam ossCallbackParam0 = new OssCallbackParam();
      OssCallbackParam ossCallbackParam1 = new OssCallbackParam();
      
      //Call method: equals
      boolean boolean0 = ossCallbackParam1.equals(ossCallbackParam0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_3()  throws Throwable  {
      //caseID:02f2eac74c4fbec2a32251c7faea9166
      //CoveredLines: [11, 11, 11, 11, 11, 12, 12, 12, 15, 17, 19]
      //Input_0_Object: ossCallbackParam1
      //Assert: assertTrue(method_result);
      
      OssCallbackParam ossCallbackParam0 = new OssCallbackParam();
      OssCallbackParam ossCallbackParam1 = new OssCallbackParam();
      
      //Call method: equals
      boolean boolean0 = ossCallbackParam0.equals(ossCallbackParam1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_hashCode_4()  throws Throwable  {
      //caseID:3feb12c91fa06a343907ae0184cf252d
      //CoveredLines: [11, 11, 11, 11, 11, 12, 12, 12, 15, 17, 19]
      
      OssCallbackParam ossCallbackParam0 = new OssCallbackParam();
      
      //Call method: hashCode
      ossCallbackParam0.hashCode();
  }

  @Test(timeout = 4000)
  public void test_setCallbackBody_5()  throws Throwable  {
      //caseID:8f9877f133cdb3bf69361f15ec9527b5
      //CoveredLines: [11, 11, 11, 11, 11]
      //Input_0_String: 1.0
      
      OssCallbackParam ossCallbackParam0 = new OssCallbackParam();
      
      //Call method: setCallbackBody
      ossCallbackParam0.setCallbackBody("1.0");
      
      //Test Result Assert
      assertEquals("1.0", ossCallbackParam0.getCallbackBody());
  }

  @Test(timeout = 4000)
  public void test_setCallbackBodyType_6()  throws Throwable  {
      //caseID:82a7bc3e6a380bc321273daeaa878226
      //CoveredLines: [11, 11, 11, 11, 11]
      //Input_0_String: 
      
      OssCallbackParam ossCallbackParam0 = new OssCallbackParam();
      
      //Call method: setCallbackBodyType
      ossCallbackParam0.setCallbackBodyType("");
      
      //Test Result Assert
      assertNull(ossCallbackParam0.getCallbackBody());
  }

  @Test(timeout = 4000)
  public void test_setCallbackUrl_7()  throws Throwable  {
      //caseID:bd2cfd3a0f0c108febdee8e20ee14872
      //CoveredLines: [11, 11, 11, 11, 11]
      //Input_0_String: t='7Q]la]Mbg5+['0|*
      
      OssCallbackParam ossCallbackParam0 = new OssCallbackParam();
      
      //Call method: setCallbackUrl
      ossCallbackParam0.setCallbackUrl("t='7Q]la]Mbg5+['0|*");
      
      //Test Result Assert
      assertNull(ossCallbackParam0.getCallbackBodyType());
  }

  @Test(timeout = 4000)
  public void test_toString_8()  throws Throwable  {
      //caseID:c74176746c0ceb7d254f131e70b3059c
      //CoveredLines: [11, 11, 11, 11, 11, 15, 17, 19]
      //Assert: assertEquals("OssCallbackParam(callbackUrl=null, callbackBody=null, callbackBodyType=null)", method_result);
      
      OssCallbackParam ossCallbackParam0 = new OssCallbackParam();
      
      //Call method: toString
      String string0 = ossCallbackParam0.toString();
      
      //Test Result Assert
      assertEquals("OssCallbackParam(callbackUrl=null, callbackBody=null, callbackBodyType=null)", string0);
  }
}
