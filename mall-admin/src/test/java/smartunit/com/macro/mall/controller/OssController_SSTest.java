/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.controller;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.macro.mall.common.api.CommonResult;
import com.macro.mall.controller.OssController;
import com.macro.mall.dto.OssCallbackResult;
import com.macro.mall.dto.OssPolicyResult;
import com.macro.mall.service.OssService;
import javax.servlet.http.HttpServletRequest;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class OssController_SSTest extends OssController_SSTest_scaffolding {
// allCoveredLines:[25, 33, 34, 41, 42]

  @Test(timeout = 4000)
  public void test_callback_0()  throws Throwable  {
      //caseID:164a58bcd545f4a33a3788a974a0e448
      //CoveredLines: [25, 41, 42]
      //Input_0_HttpServletRequest: {}
      //Assert: assertEquals("\u64CD\u4F5C\u6210\u529F", method_result.getMessage());
      
      OssController ossController0 = new OssController();
      //mock ossService0
      OssService ossService0 = mock(OssService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      PrivateAccess.setVariable((Class<?>) OssController.class, ossController0, "ossService", (Object) ossService0);
      //mock httpServletRequest0
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: callback
      CommonResult<OssCallbackResult> commonResult0 = ossController0.callback(httpServletRequest0);
      
      //Test Result Assert
      assertEquals("\u64CD\u4F5C\u6210\u529F", commonResult0.getMessage());
  }

  @Test(timeout = 4000)
  public void test_policy_1()  throws Throwable  {
      //caseID:adda0e086985ea3a95416440e5110b26
      //CoveredLines: [25, 33, 34]
      //Assert: assertEquals(200L, method_result.getCode());
      
      OssController ossController0 = new OssController();
      //mock ossService0
      OssService ossService0 = mock(OssService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      PrivateAccess.setVariable((Class<?>) OssController.class, ossController0, "ossService", (Object) ossService0);
      
      //Call method: policy
      CommonResult<OssPolicyResult> commonResult0 = ossController0.policy();
      
      //Test Result Assert
      assertEquals(200L, commonResult0.getCode());
  }
}
