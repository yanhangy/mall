/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.service.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.macro.mall.mapper.OmsOrderReturnReasonMapper;
import com.macro.mall.model.OmsOrderReturnReason;
import com.macro.mall.service.impl.OmsOrderReturnReasonServiceImpl;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class OmsOrderReturnReasonServiceImpl_SSTest extends OmsOrderReturnReasonServiceImpl_SSTest_scaffolding {
// allCoveredLines:[19, 24, 25, 30, 31, 36, 37, 38, 43, 44, 45, 46, 51, 52, 54, 55, 56, 57, 58, 63]

  @Test(timeout = 4000)
  public void test_create_0()  throws Throwable  {
      //caseID:2f659c5a7b919a3ad32d872c1c32e18a
      //CoveredLines: [19, 24, 25]
      //Input_0_OmsOrderReturnReason: {}
      //Assert: assertEquals(0, method_result);
      
      OmsOrderReturnReasonServiceImpl omsOrderReturnReasonServiceImpl0 = new OmsOrderReturnReasonServiceImpl();
      //mock omsOrderReturnReasonMapper0
      OmsOrderReturnReasonMapper omsOrderReturnReasonMapper0 = mock(OmsOrderReturnReasonMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      PrivateAccess.setVariable((Class<?>) OmsOrderReturnReasonServiceImpl.class, omsOrderReturnReasonServiceImpl0, "returnReasonMapper", (Object) omsOrderReturnReasonMapper0);
      //mock omsOrderReturnReason0
      OmsOrderReturnReason omsOrderReturnReason0 = mock(OmsOrderReturnReason.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: create
      int int0 = omsOrderReturnReasonServiceImpl0.create(omsOrderReturnReason0);
      
      //Test Result Assert
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test_delete_1()  throws Throwable  {
      //caseID:ec433c231d4c51cbbb1c8d854153dc3b
      //CoveredLines: [19, 36, 37, 38]
      //Input_0_List<Long>: stack0
      //Assert: assertEquals(0, method_result);
      
      OmsOrderReturnReasonServiceImpl omsOrderReturnReasonServiceImpl0 = new OmsOrderReturnReasonServiceImpl();
      //mock omsOrderReturnReasonMapper0
      OmsOrderReturnReasonMapper omsOrderReturnReasonMapper0 = mock(OmsOrderReturnReasonMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      PrivateAccess.setVariable((Class<?>) OmsOrderReturnReasonServiceImpl.class, omsOrderReturnReasonServiceImpl0, "returnReasonMapper", (Object) omsOrderReturnReasonMapper0);
      Stack<Long> stack0 = new Stack<Long>();
      
      //Call method: delete
      int int0 = omsOrderReturnReasonServiceImpl0.delete(stack0);
      
      //Test Result Assert
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test_getItem_2()  throws Throwable  {
      //caseID:733b2ea24f9ef75aef47ddc54252320e
      //CoveredLines: [19, 63]
      //Input_0_Long: 1000L
      //Assert: assertNull(method_result);
      
      OmsOrderReturnReasonServiceImpl omsOrderReturnReasonServiceImpl0 = new OmsOrderReturnReasonServiceImpl();
      //mock omsOrderReturnReasonMapper0
      OmsOrderReturnReasonMapper omsOrderReturnReasonMapper0 = mock(OmsOrderReturnReasonMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      PrivateAccess.setVariable((Class<?>) OmsOrderReturnReasonServiceImpl.class, omsOrderReturnReasonServiceImpl0, "returnReasonMapper", (Object) omsOrderReturnReasonMapper0);
      Long long0 = new Long(1000L);
      
      //Call method: getItem
      OmsOrderReturnReason omsOrderReturnReason0 = omsOrderReturnReasonServiceImpl0.getItem(long0);
      
      //Test Result Assert
      assertNull(omsOrderReturnReason0);
  }

  @Test(timeout = 4000)
  public void test_list_3()  throws Throwable  {
      //caseID:c0af3e754c5dc44917a05f4f76e9d465
      //CoveredLines: [19, 43, 44, 45, 46]
      //Input_0_Integer: 1459
      //Input_1_Integer: 1459
      //Assert: assertNull(method_result);
      
      OmsOrderReturnReasonServiceImpl omsOrderReturnReasonServiceImpl0 = new OmsOrderReturnReasonServiceImpl();
      //mock omsOrderReturnReasonMapper0
      OmsOrderReturnReasonMapper omsOrderReturnReasonMapper0 = mock(OmsOrderReturnReasonMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      PrivateAccess.setVariable((Class<?>) OmsOrderReturnReasonServiceImpl.class, omsOrderReturnReasonServiceImpl0, "returnReasonMapper", (Object) omsOrderReturnReasonMapper0);
      Integer integer0 = new Integer(1459);
      
      //Call method: list
      List<OmsOrderReturnReason> list0 = omsOrderReturnReasonServiceImpl0.list(integer0, integer0);
      
      //Test Result Assert
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test_update_4()  throws Throwable  {
      //caseID:2a8a8daf938e60475a89f3dfaf9e0c47
      //CoveredLines: [19, 30, 31]
      //Input_0_Long: (-1L)
      //Input_1_OmsOrderReturnReason: {}
      //Assert: assertEquals(0, method_result);
      
      OmsOrderReturnReasonServiceImpl omsOrderReturnReasonServiceImpl0 = new OmsOrderReturnReasonServiceImpl();
      //mock omsOrderReturnReasonMapper0
      OmsOrderReturnReasonMapper omsOrderReturnReasonMapper0 = mock(OmsOrderReturnReasonMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      PrivateAccess.setVariable((Class<?>) OmsOrderReturnReasonServiceImpl.class, omsOrderReturnReasonServiceImpl0, "returnReasonMapper", (Object) omsOrderReturnReasonMapper0);
      Long long0 = new Long((-1L));
      //mock omsOrderReturnReason0
      OmsOrderReturnReason omsOrderReturnReason0 = mock(OmsOrderReturnReason.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: update
      int int0 = omsOrderReturnReasonServiceImpl0.update(long0, omsOrderReturnReason0);
      
      //Test Result Assert
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test_updateStatus_5()  throws Throwable  {
      //caseID:2f3c36868f7cae9f1dbdbeded607c80f
      //CoveredLines: [19, 51, 52]
      //Input_0_List<Long>: linkedList0
      //Input_1_Integer: 2970
      //Assert: assertEquals(0, method_result);
      
      OmsOrderReturnReasonServiceImpl omsOrderReturnReasonServiceImpl0 = new OmsOrderReturnReasonServiceImpl();
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      Integer integer0 = new Integer(2970);
      
      //Call method: updateStatus
      int int0 = omsOrderReturnReasonServiceImpl0.updateStatus(linkedList0, integer0);
      
      //Test Result Assert
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test_updateStatus_6()  throws Throwable  {
      //caseID:2fbef96400ed91d113cc9bac7bee17ed
      //CoveredLines: [19, 51, 54, 55, 56, 57, 58]
      //Input_0_List<Long>: linkedList0
      //Input_1_Integer: 1
      //Assert: assertEquals(0, method_result);
      
      OmsOrderReturnReasonServiceImpl omsOrderReturnReasonServiceImpl0 = new OmsOrderReturnReasonServiceImpl();
      //mock omsOrderReturnReasonMapper0
      OmsOrderReturnReasonMapper omsOrderReturnReasonMapper0 = mock(OmsOrderReturnReasonMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      PrivateAccess.setVariable((Class<?>) OmsOrderReturnReasonServiceImpl.class, omsOrderReturnReasonServiceImpl0, "returnReasonMapper", (Object) omsOrderReturnReasonMapper0);
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      Integer integer0 = new Integer(1);
      
      //Call method: updateStatus
      int int0 = omsOrderReturnReasonServiceImpl0.updateStatus(linkedList0, integer0);
      
      //Test Result Assert
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test_updateStatus_7()  throws Throwable  {
      //caseID:327fd8dc1556e0aabb84f266b67a6c33
      //CoveredLines: [19, 51, 54, 55, 56, 57, 58]
      //Input_0_List<Long>: stack0
      //Input_1_Integer: 0
      //Assert: assertEquals(0, method_result);
      
      OmsOrderReturnReasonServiceImpl omsOrderReturnReasonServiceImpl0 = new OmsOrderReturnReasonServiceImpl();
      //mock omsOrderReturnReasonMapper0
      OmsOrderReturnReasonMapper omsOrderReturnReasonMapper0 = mock(OmsOrderReturnReasonMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(0).when(omsOrderReturnReasonMapper0).updateByExampleSelective(any(com.macro.mall.model.OmsOrderReturnReason.class) , any(com.macro.mall.model.OmsOrderReturnReasonExample.class));
      
      PrivateAccess.setVariable((Class<?>) OmsOrderReturnReasonServiceImpl.class, omsOrderReturnReasonServiceImpl0, "returnReasonMapper", (Object) omsOrderReturnReasonMapper0);
      Stack<Long> stack0 = new Stack<Long>();
      Integer integer0 = new Integer(0);
      
      //Call method: updateStatus
      int int0 = omsOrderReturnReasonServiceImpl0.updateStatus(stack0, integer0);
      
      //Test Result Assert
      assertEquals(0, int0);
  }
}
