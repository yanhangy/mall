/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.service.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.macro.mall.dao.OmsOrderReturnApplyDao;
import com.macro.mall.dto.OmsOrderReturnApplyResult;
import com.macro.mall.dto.OmsReturnApplyQueryParam;
import com.macro.mall.dto.OmsUpdateStatusParam;
import com.macro.mall.mapper.OmsOrderReturnApplyMapper;
import com.macro.mall.model.OmsOrderReturnApply;
import com.macro.mall.service.impl.OmsOrderReturnApplyServiceImpl;
import java.util.List;
import java.util.Stack;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class OmsOrderReturnApplyServiceImpl_SSTest extends OmsOrderReturnApplyServiceImpl_SSTest_scaffolding {
// allCoveredLines:[23, 30, 31, 36, 37, 38, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 71, 76]

  @Test(timeout = 4000)
  public void test_delete_0()  throws Throwable  {
      //caseID:c346bd03487776b092d8683e0a5a024f
      //CoveredLines: [23, 36, 37, 38]
      //Input_0_List<Long>: stack0
      //Assert: assertEquals(0, method_result);
      
      OmsOrderReturnApplyServiceImpl omsOrderReturnApplyServiceImpl0 = new OmsOrderReturnApplyServiceImpl();
      //mock omsOrderReturnApplyMapper0
      OmsOrderReturnApplyMapper omsOrderReturnApplyMapper0 = mock(OmsOrderReturnApplyMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      PrivateAccess.setVariable((Class<?>) OmsOrderReturnApplyServiceImpl.class, omsOrderReturnApplyServiceImpl0, "returnApplyMapper", (Object) omsOrderReturnApplyMapper0);
      Stack<Long> stack0 = new Stack<Long>();
      
      //Call method: delete
      int int0 = omsOrderReturnApplyServiceImpl0.delete(stack0);
      
      //Test Result Assert
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test_getItem_1()  throws Throwable  {
      //caseID:a473795fb3a3a84640b38fb019e311c0
      //CoveredLines: [23, 76]
      //Input_0_Long: 1662L
      //Assert: assertNull(method_result);
      
      OmsOrderReturnApplyServiceImpl omsOrderReturnApplyServiceImpl0 = new OmsOrderReturnApplyServiceImpl();
      //mock omsOrderReturnApplyDao0
      OmsOrderReturnApplyDao omsOrderReturnApplyDao0 = mock(OmsOrderReturnApplyDao.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      PrivateAccess.setVariable((Class<?>) OmsOrderReturnApplyServiceImpl.class, omsOrderReturnApplyServiceImpl0, "returnApplyDao", (Object) omsOrderReturnApplyDao0);
      Long long0 = new Long(1662L);
      
      //Call method: getItem
      OmsOrderReturnApplyResult omsOrderReturnApplyResult0 = omsOrderReturnApplyServiceImpl0.getItem(long0);
      
      //Test Result Assert
      assertNull(omsOrderReturnApplyResult0);
  }

  @Test(timeout = 4000)
  public void test_list_2()  throws Throwable  {
      //caseID:6968eabb0aa5d00b5917d797453aa8fe
      //CoveredLines: [23, 30, 31]
      //Input_0_OmsReturnApplyQueryParam: {}
      //Input_1_Integer: 785
      //Input_2_Integer: 785
      //Assert: assertNull(method_result);
      
      OmsOrderReturnApplyServiceImpl omsOrderReturnApplyServiceImpl0 = new OmsOrderReturnApplyServiceImpl();
      //mock omsOrderReturnApplyDao0
      OmsOrderReturnApplyDao omsOrderReturnApplyDao0 = mock(OmsOrderReturnApplyDao.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      PrivateAccess.setVariable((Class<?>) OmsOrderReturnApplyServiceImpl.class, omsOrderReturnApplyServiceImpl0, "returnApplyDao", (Object) omsOrderReturnApplyDao0);
      //mock omsReturnApplyQueryParam0
      OmsReturnApplyQueryParam omsReturnApplyQueryParam0 = mock(OmsReturnApplyQueryParam.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      Integer integer0 = new Integer(785);
      
      //Call method: list
      List<OmsOrderReturnApply> list0 = omsOrderReturnApplyServiceImpl0.list(omsReturnApplyQueryParam0, integer0, integer0);
      
      //Test Result Assert
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test_updateStatus_3()  throws Throwable  {
      //caseID:d51a8a57b6f20078f71d6037f3de3f4b
      //CoveredLines: [23, 43, 44, 45, 54, 61, 69]
      //Input_0_Long: 1434L
      //Input_1_OmsUpdateStatusParam: {getStatus=0}
      //Assert: assertEquals(0, method_result);
      
      OmsOrderReturnApplyServiceImpl omsOrderReturnApplyServiceImpl0 = new OmsOrderReturnApplyServiceImpl();
      Long long0 = new Long(1434L);
      Integer integer0 = new Integer(0);
      //mock omsUpdateStatusParam0
      OmsUpdateStatusParam omsUpdateStatusParam0 = mock(OmsUpdateStatusParam.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(integer0).when(omsUpdateStatusParam0).getStatus();
      
      //Call method: updateStatus
      int int0 = omsOrderReturnApplyServiceImpl0.updateStatus(long0, omsUpdateStatusParam0);
      
      //Test Result Assert
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test_updateStatus_4()  throws Throwable  {
      //caseID:cb28ba664a644ff4137cec04ac45c295
      //CoveredLines: [23, 43, 44, 45, 54, 56, 57, 58, 59, 60, 71]
      //Input_0_Long: 523L
      //Input_1_OmsUpdateStatusParam: {getStatus=2}
      //Assert: assertEquals(0, method_result);
      
      OmsOrderReturnApplyServiceImpl omsOrderReturnApplyServiceImpl0 = new OmsOrderReturnApplyServiceImpl();
      //mock omsOrderReturnApplyMapper0
      OmsOrderReturnApplyMapper omsOrderReturnApplyMapper0 = mock(OmsOrderReturnApplyMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      PrivateAccess.setVariable((Class<?>) OmsOrderReturnApplyServiceImpl.class, omsOrderReturnApplyServiceImpl0, "returnApplyMapper", (Object) omsOrderReturnApplyMapper0);
      Long long0 = new Long(523L);
      Integer integer0 = new Integer(2);
      //mock omsUpdateStatusParam0
      OmsUpdateStatusParam omsUpdateStatusParam0 = mock(OmsUpdateStatusParam.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(integer0).when(omsUpdateStatusParam0).getStatus();
      
      //Call method: updateStatus
      int int0 = omsOrderReturnApplyServiceImpl0.updateStatus(long0, omsUpdateStatusParam0);
      
      //Test Result Assert
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test_updateStatus_5()  throws Throwable  {
      //caseID:5acda9d152e18c4022be1edc5f081bd2
      //CoveredLines: [23, 43, 44, 45, 54, 61, 63, 64, 65, 66, 67, 71]
      //Input_0_Long: (-1L)
      //Input_1_OmsUpdateStatusParam: {getStatus=3}
      //Assert: assertEquals(0, method_result);
      
      OmsOrderReturnApplyServiceImpl omsOrderReturnApplyServiceImpl0 = new OmsOrderReturnApplyServiceImpl();
      //mock omsOrderReturnApplyMapper0
      OmsOrderReturnApplyMapper omsOrderReturnApplyMapper0 = mock(OmsOrderReturnApplyMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      PrivateAccess.setVariable((Class<?>) OmsOrderReturnApplyServiceImpl.class, omsOrderReturnApplyServiceImpl0, "returnApplyMapper", (Object) omsOrderReturnApplyMapper0);
      Long long0 = new Long((-1L));
      Integer integer0 = new Integer(3);
      //mock omsUpdateStatusParam0
      OmsUpdateStatusParam omsUpdateStatusParam0 = mock(OmsUpdateStatusParam.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(integer0).when(omsUpdateStatusParam0).getStatus();
      
      //Call method: updateStatus
      int int0 = omsOrderReturnApplyServiceImpl0.updateStatus(long0, omsUpdateStatusParam0);
      
      //Test Result Assert
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test_updateStatus_6()  throws Throwable  {
      //caseID:9136a7620f2c32ca839bc7e5808e7f3f
      //CoveredLines: [23, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 71]
      //Input_0_Long: 250L
      //Input_1_OmsUpdateStatusParam: {getStatus=1}
      //Assert: assertEquals(0, method_result);
      
      OmsOrderReturnApplyServiceImpl omsOrderReturnApplyServiceImpl0 = new OmsOrderReturnApplyServiceImpl();
      //mock omsOrderReturnApplyMapper0
      OmsOrderReturnApplyMapper omsOrderReturnApplyMapper0 = mock(OmsOrderReturnApplyMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      PrivateAccess.setVariable((Class<?>) OmsOrderReturnApplyServiceImpl.class, omsOrderReturnApplyServiceImpl0, "returnApplyMapper", (Object) omsOrderReturnApplyMapper0);
      Long long0 = new Long(250L);
      Integer integer0 = new Integer(1);
      //mock omsUpdateStatusParam0
      OmsUpdateStatusParam omsUpdateStatusParam0 = mock(OmsUpdateStatusParam.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(integer0).when(omsUpdateStatusParam0).getStatus();
      
      //Call method: updateStatus
      int int0 = omsOrderReturnApplyServiceImpl0.updateStatus(long0, omsUpdateStatusParam0);
      
      //Test Result Assert
      assertEquals(0, int0);
  }
}
