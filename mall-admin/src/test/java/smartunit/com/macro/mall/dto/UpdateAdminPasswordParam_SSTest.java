/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.dto;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.macro.mall.dto.UpdateAdminPasswordParam;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class UpdateAdminPasswordParam_SSTest extends UpdateAdminPasswordParam_SSTest_scaffolding {
// allCoveredLines:[14, 15, 18, 21, 24]

  @Test(timeout = 4000)
  public void test_getNewPassword_0()  throws Throwable  {
      //caseID:8af3341b5ee1d4412fd3a048c75a921d
      //CoveredLines: [15, 24]
      //Assert: assertNull(method_result);
      
      UpdateAdminPasswordParam updateAdminPasswordParam0 = new UpdateAdminPasswordParam();
      
      //Call method: getNewPassword
      String string0 = updateAdminPasswordParam0.getNewPassword();
      
      //Test Result Assert
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test_getOldPassword_1()  throws Throwable  {
      //caseID:b4293d49e8af7688c69b485fe9960ab6
      //CoveredLines: [15, 21]
      //Assert: assertNull(method_result);
      
      UpdateAdminPasswordParam updateAdminPasswordParam0 = new UpdateAdminPasswordParam();
      
      //Call method: getOldPassword
      String string0 = updateAdminPasswordParam0.getOldPassword();
      
      //Test Result Assert
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test_getUsername_2()  throws Throwable  {
      //caseID:a229087a5f3abb96e1539c293c0f13e6
      //CoveredLines: [15, 18]
      //Assert: assertNull(method_result);
      
      UpdateAdminPasswordParam updateAdminPasswordParam0 = new UpdateAdminPasswordParam();
      
      //Call method: getUsername
      String string0 = updateAdminPasswordParam0.getUsername();
      
      //Test Result Assert
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test_setNewPassword_3()  throws Throwable  {
      //caseID:b3859ce916c6567d3baca53151f89cba
      //CoveredLines: [14, 14, 14, 15]
      //Input_0_String: 1
      
      UpdateAdminPasswordParam updateAdminPasswordParam0 = new UpdateAdminPasswordParam();
      
      //Call method: setNewPassword
      updateAdminPasswordParam0.setNewPassword("1");
      
      //Test Result Assert
      assertEquals("1", updateAdminPasswordParam0.getNewPassword());
  }

  @Test(timeout = 4000)
  public void test_setOldPassword_4()  throws Throwable  {
      //caseID:328958394e2b1879fd9bcee6e469beeb
      //CoveredLines: [14, 14, 14, 15]
      //Input_0_String: 1.0
      
      UpdateAdminPasswordParam updateAdminPasswordParam0 = new UpdateAdminPasswordParam();
      
      //Call method: setOldPassword
      updateAdminPasswordParam0.setOldPassword("1.0");
      
      //Test Result Assert
      assertNull(updateAdminPasswordParam0.getUsername());
  }

  @Test(timeout = 4000)
  public void test_setUsername_5()  throws Throwable  {
      //caseID:5996500a7138cd9bd0a1801d2494532f
      //CoveredLines: [14, 14, 14, 15]
      //Input_0_String: accrze9
      
      UpdateAdminPasswordParam updateAdminPasswordParam0 = new UpdateAdminPasswordParam();
      
      //Call method: setUsername
      updateAdminPasswordParam0.setUsername("accrze9");
      
      //Test Result Assert
      assertNull(updateAdminPasswordParam0.getNewPassword());
  }
}
