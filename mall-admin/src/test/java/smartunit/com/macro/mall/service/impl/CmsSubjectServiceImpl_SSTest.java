/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.service.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.macro.mall.mapper.CmsSubjectMapper;
import com.macro.mall.model.CmsSubject;
import com.macro.mall.service.impl.CmsSubjectServiceImpl;
import java.util.List;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class CmsSubjectServiceImpl_SSTest extends CmsSubjectServiceImpl_SSTest_scaffolding {
// allCoveredLines:[19, 25, 30, 31, 32, 33, 34, 36]

  @Test(timeout = 4000)
  public void test_list_0()  throws Throwable  {
      //caseID:dc3135fa58f93e7f5fad67af017e3480
      //CoveredLines: [19, 30, 31, 32, 33, 36]
      //Input_0_String: 
      //Input_1_Integer: 308
      //Input_2_Integer: 308
      //Assert: assertNull(method_result);
      
      CmsSubjectServiceImpl cmsSubjectServiceImpl0 = new CmsSubjectServiceImpl();
      //mock cmsSubjectMapper0
      CmsSubjectMapper cmsSubjectMapper0 = mock(CmsSubjectMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      PrivateAccess.setVariable((Class<?>) CmsSubjectServiceImpl.class, cmsSubjectServiceImpl0, "subjectMapper", (Object) cmsSubjectMapper0);
      Integer integer0 = new Integer(308);
      
      //Call method: list
      List<CmsSubject> list0 = cmsSubjectServiceImpl0.list("", integer0, integer0);
      
      //Test Result Assert
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test_list_1()  throws Throwable  {
      //caseID:51f4a2bb4a417c7bd7f1faf21b4d49c2
      //CoveredLines: [19, 30, 31, 32, 33, 34, 36]
      //Input_0_String: org.springframework.boot.convert.PeriodStyle
      //Input_1_Integer: 1
      //Input_2_Integer: 1
      //Assert: assertNull(method_result);
      
      CmsSubjectServiceImpl cmsSubjectServiceImpl0 = new CmsSubjectServiceImpl();
      //mock cmsSubjectMapper0
      CmsSubjectMapper cmsSubjectMapper0 = mock(CmsSubjectMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      PrivateAccess.setVariable((Class<?>) CmsSubjectServiceImpl.class, cmsSubjectServiceImpl0, "subjectMapper", (Object) cmsSubjectMapper0);
      Integer integer0 = new Integer(1);
      
      //Call method: list
      List<CmsSubject> list0 = cmsSubjectServiceImpl0.list("org.springframework.boot.convert.PeriodStyle", integer0, integer0);
      
      //Test Result Assert
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test_listAll_2()  throws Throwable  {
      //caseID:553580dc15cf585554d84fddc26723e5
      //CoveredLines: [19, 25]
      //Assert: assertNull(method_result);
      
      CmsSubjectServiceImpl cmsSubjectServiceImpl0 = new CmsSubjectServiceImpl();
      //mock cmsSubjectMapper0
      CmsSubjectMapper cmsSubjectMapper0 = mock(CmsSubjectMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      PrivateAccess.setVariable((Class<?>) CmsSubjectServiceImpl.class, cmsSubjectServiceImpl0, "subjectMapper", (Object) cmsSubjectMapper0);
      
      //Call method: listAll
      List<CmsSubject> list0 = cmsSubjectServiceImpl0.listAll();
      
      //Test Result Assert
      assertNull(list0);
  }
}
