/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.dto;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.macro.mall.dto.OssPolicyResult;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class OssPolicyResult_SSTest extends OssPolicyResult_SSTest_scaffolding {
// allCoveredLines:[11, 12, 15, 17, 19, 21, 23, 25]

  @Test(timeout = 4000)
  public void test_equals_00()  throws Throwable  {
      //caseID:9d220b7ad519bf3a71763f94c9239937
      //CoveredLines: [11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12]
      //Input_0_Object: CFw<,]Tp9g9`I;b
      //Assert: assertFalse(method_result);
      
      OssPolicyResult ossPolicyResult0 = new OssPolicyResult();
      
      //Call method: equals
      boolean boolean0 = ossPolicyResult0.equals("CFw<,]Tp9g9`I;b");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_01()  throws Throwable  {
      //caseID:935592482eaae1965de45c84b6112383
      //CoveredLines: [11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12]
      //Input_0_Object: ossPolicyResult0
      //Assert: assertTrue(method_result);
      
      OssPolicyResult ossPolicyResult0 = new OssPolicyResult();
      
      //Call method: equals
      boolean boolean0 = ossPolicyResult0.equals(ossPolicyResult0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_02()  throws Throwable  {
      //caseID:18cae47e679215ce95ffaca8f9d8b066
      //CoveredLines: [11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 15, 17, 19, 21, 23, 25]
      //Input_0_Object: ossPolicyResult0
      //Assert: assertTrue(method_result);
      
      OssPolicyResult ossPolicyResult0 = new OssPolicyResult();
      OssPolicyResult ossPolicyResult1 = new OssPolicyResult();
      
      //Call method: equals
      boolean boolean0 = ossPolicyResult1.equals(ossPolicyResult0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_03()  throws Throwable  {
      //caseID:cab970d0d0410076b14c6f0e33e498ad
      //CoveredLines: [11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 15, 17, 19, 21, 23, 25]
      //Input_0_Object: ossPolicyResult1
      //Assert: assertTrue(method_result);
      
      OssPolicyResult ossPolicyResult0 = new OssPolicyResult();
      OssPolicyResult ossPolicyResult1 = new OssPolicyResult();
      
      //Call method: equals
      boolean boolean0 = ossPolicyResult0.equals(ossPolicyResult1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_hashCode_04()  throws Throwable  {
      //caseID:60ae52d2e2e5df2faf57179cac2beb7a
      //CoveredLines: [11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 15, 17, 19, 21, 23, 25]
      
      OssPolicyResult ossPolicyResult0 = new OssPolicyResult();
      
      //Call method: hashCode
      ossPolicyResult0.hashCode();
  }

  @Test(timeout = 4000)
  public void test_setAccessKeyId_05()  throws Throwable  {
      //caseID:b6c5016452abc5451beac8cbad3015e1
      //CoveredLines: [11, 11, 11, 11, 11, 11, 11, 11]
      //Input_0_String: 1
      
      OssPolicyResult ossPolicyResult0 = new OssPolicyResult();
      
      //Call method: setAccessKeyId
      ossPolicyResult0.setAccessKeyId("1");
      
      //Test Result Assert
      assertNull(ossPolicyResult0.getPolicy());
  }

  @Test(timeout = 4000)
  public void test_setCallback_06()  throws Throwable  {
      //caseID:312089917b17bc6d5dabab82c283b446
      //CoveredLines: [11, 11, 11, 11, 11, 11, 11, 11]
      //Input_0_String: READ_WRITE
      
      OssPolicyResult ossPolicyResult0 = new OssPolicyResult();
      
      //Call method: setCallback
      ossPolicyResult0.setCallback("READ_WRITE");
      
      //Test Result Assert
      assertNull(ossPolicyResult0.getDir());
  }

  @Test(timeout = 4000)
  public void test_setDir_07()  throws Throwable  {
      //caseID:39dc4a82dd6ae796c538fc0d0aeafeaf
      //CoveredLines: [11, 11, 11, 11, 11, 11, 11, 11]
      //Input_0_String: 0
      
      OssPolicyResult ossPolicyResult0 = new OssPolicyResult();
      
      //Call method: setDir
      ossPolicyResult0.setDir("0");
      
      //Test Result Assert
      assertEquals("0", ossPolicyResult0.getDir());
  }

  @Test(timeout = 4000)
  public void test_setHost_08()  throws Throwable  {
      //caseID:897a43d00e3a499e05b5fdcc51c1f702
      //CoveredLines: [11, 11, 11, 11, 11, 11, 11, 11]
      //Input_0_String: 1.0
      
      OssPolicyResult ossPolicyResult0 = new OssPolicyResult();
      
      //Call method: setHost
      ossPolicyResult0.setHost("1.0");
      
      //Test Result Assert
      assertNull(ossPolicyResult0.getAccessKeyId());
  }

  @Test(timeout = 4000)
  public void test_setPolicy_09()  throws Throwable  {
      //caseID:b0588813a31cbad9968fbd0a4c843242
      //CoveredLines: [11, 11, 11, 11, 11, 11, 11, 11]
      //Input_0_String: 1
      
      OssPolicyResult ossPolicyResult0 = new OssPolicyResult();
      
      //Call method: setPolicy
      ossPolicyResult0.setPolicy("1");
      
      //Test Result Assert
      assertNull(ossPolicyResult0.getDir());
  }

  @Test(timeout = 4000)
  public void test_setSignature_10()  throws Throwable  {
      //caseID:cddb6cb29b73a4f87e12a12dae4008bf
      //CoveredLines: [11, 11, 11, 11, 11, 11, 11, 11]
      //Input_0_String: 1.0
      
      OssPolicyResult ossPolicyResult0 = new OssPolicyResult();
      
      //Call method: setSignature
      ossPolicyResult0.setSignature("1.0");
      
      //Test Result Assert
      assertNull(ossPolicyResult0.getDir());
  }

  @Test(timeout = 4000)
  public void test_toString_11()  throws Throwable  {
      //caseID:adf17b18569a9c68c8f58c5ce247d2ff
      //CoveredLines: [11, 11, 11, 11, 11, 11, 11, 11, 15, 17, 19, 21, 23, 25]
      //Assert: assertEquals("OssPolicyResult(accessKeyId=null, policy=null, signature=null, dir=null, host=null, callback=null)", method_result);
      
      OssPolicyResult ossPolicyResult0 = new OssPolicyResult();
      
      //Call method: toString
      String string0 = ossPolicyResult0.toString();
      
      //Test Result Assert
      assertEquals("OssPolicyResult(accessKeyId=null, policy=null, signature=null, dir=null, host=null, callback=null)", string0);
  }
}
