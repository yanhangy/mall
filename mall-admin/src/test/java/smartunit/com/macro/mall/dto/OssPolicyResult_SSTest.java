/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.dto;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.macro.mall.dto.OssPolicyResult;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class OssPolicyResult_SSTest extends OssPolicyResult_SSTest_scaffolding {
// allCoveredLines:[11, 12, 15, 17, 19, 21, 23, 25]

  @Test(timeout = 4000)
  public void test_equals_00()  throws Throwable  {
      //caseID:177eb94b352c5e31847e0300faccc357
      //CoveredLines: [11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12]
      //Input_0_Object: 1.0
      //Assert: assertFalse(method_result);
      
      OssPolicyResult ossPolicyResult0 = new OssPolicyResult();
      
      //Call method: equals
      boolean boolean0 = ossPolicyResult0.equals("1.0");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_01()  throws Throwable  {
      //caseID:19fd20373bee28441354d65a358e2848
      //CoveredLines: [11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12]
      //Input_0_Object: ossPolicyResult0
      //Assert: assertTrue(method_result);
      
      OssPolicyResult ossPolicyResult0 = new OssPolicyResult();
      
      //Call method: equals
      boolean boolean0 = ossPolicyResult0.equals(ossPolicyResult0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_02()  throws Throwable  {
      //caseID:e167d87f9f8c480cb0b0edab0f84dd69
      //CoveredLines: [11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 15, 17, 19, 21, 23, 25]
      //Input_0_Object: ossPolicyResult0
      //Assert: assertTrue(method_result);
      
      OssPolicyResult ossPolicyResult0 = new OssPolicyResult();
      OssPolicyResult ossPolicyResult1 = new OssPolicyResult();
      
      //Call method: equals
      boolean boolean0 = ossPolicyResult1.equals(ossPolicyResult0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_03()  throws Throwable  {
      //caseID:acd40e4dfbad7f25b52461880793030f
      //CoveredLines: [11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 15, 17, 19, 21, 23, 25]
      //Input_0_Object: ossPolicyResult1
      //Assert: assertTrue(method_result);
      
      OssPolicyResult ossPolicyResult0 = new OssPolicyResult();
      OssPolicyResult ossPolicyResult1 = new OssPolicyResult();
      
      //Call method: equals
      boolean boolean0 = ossPolicyResult0.equals(ossPolicyResult1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_hashCode_04()  throws Throwable  {
      //caseID:f398b6b4f9855c211d3f0ca6dae5e735
      //CoveredLines: [11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 15, 17, 19, 21, 23, 25]
      
      OssPolicyResult ossPolicyResult0 = new OssPolicyResult();
      
      //Call method: hashCode
      ossPolicyResult0.hashCode();
  }

  @Test(timeout = 4000)
  public void test_setAccessKeyId_05()  throws Throwable  {
      //caseID:8aa76f876dfe8656622d743f8c8ef698
      //CoveredLines: [11, 11, 11, 11, 11, 11, 11, 11]
      //Input_0_String: 
      
      OssPolicyResult ossPolicyResult0 = new OssPolicyResult();
      
      //Call method: setAccessKeyId
      ossPolicyResult0.setAccessKeyId("");
      
      //Test Result Assert
      assertNull(ossPolicyResult0.getCallback());
  }

  @Test(timeout = 4000)
  public void test_setCallback_06()  throws Throwable  {
      //caseID:881812b11187cc1cc62a451dc4ad76ba
      //CoveredLines: [11, 11, 11, 11, 11, 11, 11, 11]
      //Input_0_String: 0
      
      OssPolicyResult ossPolicyResult0 = new OssPolicyResult();
      
      //Call method: setCallback
      ossPolicyResult0.setCallback("0");
      
      //Test Result Assert
      assertNull(ossPolicyResult0.getHost());
  }

  @Test(timeout = 4000)
  public void test_setDir_07()  throws Throwable  {
      //caseID:9e4554deefdf17f1227731c0af667abd
      //CoveredLines: [11, 11, 11, 11, 11, 11, 11, 11]
      //Input_0_String: READ_WRITE
      
      OssPolicyResult ossPolicyResult0 = new OssPolicyResult();
      
      //Call method: setDir
      ossPolicyResult0.setDir("READ_WRITE");
      
      //Test Result Assert
      assertNull(ossPolicyResult0.getSignature());
  }

  @Test(timeout = 4000)
  public void test_setHost_08()  throws Throwable  {
      //caseID:2646c39861e4dcafde65329854fc95c9
      //CoveredLines: [11, 11, 11, 11, 11, 11, 11, 11]
      //Input_0_String: DM
      
      OssPolicyResult ossPolicyResult0 = new OssPolicyResult();
      
      //Call method: setHost
      ossPolicyResult0.setHost("DM");
      
      //Test Result Assert
      assertNull(ossPolicyResult0.getDir());
  }

  @Test(timeout = 4000)
  public void test_setPolicy_09()  throws Throwable  {
      //caseID:cc1053ec43871ff7b06fb0014f0eab73
      //CoveredLines: [11, 11, 11, 11, 11, 11, 11, 11]
      //Input_0_String: 1
      
      OssPolicyResult ossPolicyResult0 = new OssPolicyResult();
      
      //Call method: setPolicy
      ossPolicyResult0.setPolicy("1");
      
      //Test Result Assert
      assertNull(ossPolicyResult0.getHost());
  }

  @Test(timeout = 4000)
  public void test_setSignature_10()  throws Throwable  {
      //caseID:1da668e96ee47e2381bedb536989a4b5
      //CoveredLines: [11, 11, 11, 11, 11, 11, 11, 11]
      //Input_0_String: com.macro.mall.dto.OssPolicyResult
      
      OssPolicyResult ossPolicyResult0 = new OssPolicyResult();
      
      //Call method: setSignature
      ossPolicyResult0.setSignature("com.macro.mall.dto.OssPolicyResult");
      
      //Test Result Assert
      assertNull(ossPolicyResult0.getHost());
  }

  @Test(timeout = 4000)
  public void test_toString_11()  throws Throwable  {
      //caseID:c0caecc6535ce652ebd1505d7d3b83e1
      //CoveredLines: [11, 11, 11, 11, 11, 11, 11, 11, 15, 17, 19, 21, 23, 25]
      //Assert: assertEquals("OssPolicyResult(accessKeyId=null, policy=null, signature=null, dir=null, host=null, callback=null)", method_result);
      
      OssPolicyResult ossPolicyResult0 = new OssPolicyResult();
      
      //Call method: toString
      String string0 = ossPolicyResult0.toString();
      
      //Test Result Assert
      assertEquals("OssPolicyResult(accessKeyId=null, policy=null, signature=null, dir=null, host=null, callback=null)", string0);
  }
}
