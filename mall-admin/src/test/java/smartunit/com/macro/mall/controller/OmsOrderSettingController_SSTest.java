/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.controller;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.macro.mall.common.api.CommonResult;
import com.macro.mall.controller.OmsOrderSettingController;
import com.macro.mall.model.OmsOrderSetting;
import com.macro.mall.service.OmsOrderSettingService;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class OmsOrderSettingController_SSTest extends OmsOrderSettingController_SSTest_scaffolding {
// allCoveredLines:[19, 27, 28, 35, 36, 37, 39]

  @Test(timeout = 4000)
  public void test_getItem_0()  throws Throwable  {
      //caseID:1bd6e487caf594f2fac1a98d2c8df005
      //CoveredLines: [19, 27, 28]
      //Input_0_Long: 2314L
      //Assert: assertEquals(200L, method_result.getCode());
      
      OmsOrderSettingController omsOrderSettingController0 = new OmsOrderSettingController();
      //mock omsOrderSettingService0
      OmsOrderSettingService omsOrderSettingService0 = mock(OmsOrderSettingService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      PrivateAccess.setVariable((Class<?>) OmsOrderSettingController.class, omsOrderSettingController0, "orderSettingService", (Object) omsOrderSettingService0);
      Long long0 = new Long(2314L);
      
      //Call method: getItem
      CommonResult<OmsOrderSetting> commonResult0 = omsOrderSettingController0.getItem(long0);
      
      //Test Result Assert
      assertEquals(200L, commonResult0.getCode());
  }

  @Test(timeout = 4000)
  public void test_update_1()  throws Throwable  {
      //caseID:3ec146b58e2259f7bbdf1e564194ca21
      //CoveredLines: [19, 35, 36, 37]
      //Input_0_Long: 1577
      //Input_1_OmsOrderSetting: {}
      //Assert: assertEquals("\u64CD\u4F5C\u6210\u529F", method_result.getMessage());
      
      OmsOrderSettingController omsOrderSettingController0 = new OmsOrderSettingController();
      //mock omsOrderSettingService0
      OmsOrderSettingService omsOrderSettingService0 = mock(OmsOrderSettingService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(1577).when(omsOrderSettingService0).update(anyLong() , any(com.macro.mall.model.OmsOrderSetting.class));
      PrivateAccess.setVariable((Class<?>) OmsOrderSettingController.class, omsOrderSettingController0, "orderSettingService", (Object) omsOrderSettingService0);
      Long long0 = new Long(1577);
      //mock omsOrderSetting0
      OmsOrderSetting omsOrderSetting0 = mock(OmsOrderSetting.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: update
      CommonResult commonResult0 = omsOrderSettingController0.update(long0, omsOrderSetting0);
      
      //Test Result Assert
      assertEquals("\u64CD\u4F5C\u6210\u529F", commonResult0.getMessage());
  }

  @Test(timeout = 4000)
  public void test_update_2()  throws Throwable  {
      //caseID:52cdef9fc3dfea337e43975d69b92db0
      //CoveredLines: [19, 35, 36, 39]
      //Input_0_Long: 998L
      //Input_1_OmsOrderSetting: {}
      //Assert: assertEquals("\u64CD\u4F5C\u5931\u8D25", method_result.getMessage());
      
      OmsOrderSettingController omsOrderSettingController0 = new OmsOrderSettingController();
      //mock omsOrderSettingService0
      OmsOrderSettingService omsOrderSettingService0 = mock(OmsOrderSettingService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      PrivateAccess.setVariable((Class<?>) OmsOrderSettingController.class, omsOrderSettingController0, "orderSettingService", (Object) omsOrderSettingService0);
      Long long0 = new Long(998L);
      //mock omsOrderSetting0
      OmsOrderSetting omsOrderSetting0 = mock(OmsOrderSetting.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: update
      CommonResult commonResult0 = omsOrderSettingController0.update(long0, omsOrderSetting0);
      
      //Test Result Assert
      assertEquals("\u64CD\u4F5C\u5931\u8D25", commonResult0.getMessage());
  }
}
