/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.service.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.macro.mall.dao.PmsProductAttributeDao;
import com.macro.mall.dto.PmsProductAttributeParam;
import com.macro.mall.dto.ProductAttrInfo;
import com.macro.mall.mapper.PmsProductAttributeCategoryMapper;
import com.macro.mall.mapper.PmsProductAttributeMapper;
import com.macro.mall.model.PmsProductAttribute;
import com.macro.mall.model.PmsProductAttributeCategory;
import com.macro.mall.service.impl.PmsProductAttributeServiceImpl;
import java.util.ArrayList;
import java.util.List;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class PmsProductAttributeServiceImpl_SSTest extends PmsProductAttributeServiceImpl_SSTest_scaffolding {
// allCoveredLines:[24, 34, 35, 36, 37, 38, 43, 44, 45, 47, 48, 49, 50, 51, 53, 54, 59, 60, 61, 62, 67, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 86, 87, 88, 90, 93, 94, 99]

  @Test(timeout = 4000)
  public void test_create_00()  throws Throwable  {
      //caseID:e1bc1ddf0ca639eb19ffa08f80afcb90
      //CoveredLines: [24, 43, 44, 45, 47, 48, 50, 53, 54]
      //Input_0_PmsProductAttributeParam: {getSearchType=(-1), getSelectType=(-1), getSort=(-1), getName=\"cA^,81v$[5Ek \", getInputList=\"cA^,81v$[5Ek \", getInputType=(-1), getType=(-1), getFilterType=(-1), getHandAddStatus=(-1), getProductAttributeCategoryId=(-1), getRelatedStatus=(-1)}
      //Assert: assertEquals((-1), method_result);
      
      PmsProductAttributeServiceImpl pmsProductAttributeServiceImpl0 = new PmsProductAttributeServiceImpl();
      Integer integer0 = new Integer((-1));
      //mock pmsProductAttributeCategory0
      PmsProductAttributeCategory pmsProductAttributeCategory0 = mock(PmsProductAttributeCategory.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      //mock pmsProductAttributeCategoryMapper0
      PmsProductAttributeCategoryMapper pmsProductAttributeCategoryMapper0 = mock(PmsProductAttributeCategoryMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(pmsProductAttributeCategory0).when(pmsProductAttributeCategoryMapper0).selectByPrimaryKey(anyLong());
      doReturn((-1)).when(pmsProductAttributeCategoryMapper0).updateByPrimaryKey(any(com.macro.mall.model.PmsProductAttributeCategory.class));
      //mock pmsProductAttributeMapper0
      PmsProductAttributeMapper pmsProductAttributeMapper0 = mock(PmsProductAttributeMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn((-1)).when(pmsProductAttributeMapper0).insertSelective(any(com.macro.mall.model.PmsProductAttribute.class));
      
      PrivateAccess.setVariable((Class<?>) PmsProductAttributeServiceImpl.class, pmsProductAttributeServiceImpl0, "productAttributeMapper", (Object) pmsProductAttributeMapper0);
      
      PrivateAccess.setVariable((Class<?>) PmsProductAttributeServiceImpl.class, pmsProductAttributeServiceImpl0, "productAttributeCategoryMapper", (Object) pmsProductAttributeCategoryMapper0);
      Long long0 = new Long((-1));
      //mock pmsProductAttributeParam0
      PmsProductAttributeParam pmsProductAttributeParam0 = mock(PmsProductAttributeParam.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(integer0).when(pmsProductAttributeParam0).getFilterType();
      doReturn(integer0).when(pmsProductAttributeParam0).getHandAddStatus();
      doReturn("cA^,81v$[5Ek ").when(pmsProductAttributeParam0).getInputList();
      doReturn(integer0).when(pmsProductAttributeParam0).getInputType();
      doReturn("cA^,81v$[5Ek ").when(pmsProductAttributeParam0).getName();
      doReturn(long0).when(pmsProductAttributeParam0).getProductAttributeCategoryId();
      doReturn(integer0).when(pmsProductAttributeParam0).getRelatedStatus();
      doReturn(integer0).when(pmsProductAttributeParam0).getSearchType();
      doReturn(integer0).when(pmsProductAttributeParam0).getSelectType();
      doReturn(integer0).when(pmsProductAttributeParam0).getSort();
      doReturn(integer0).when(pmsProductAttributeParam0).getType();
      
      //Call method: create
      int int0 = pmsProductAttributeServiceImpl0.create(pmsProductAttributeParam0);
      
      //Test Result Assert
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test_create_01()  throws Throwable  {
      //caseID:d51be511d07011d027cb97f6fea4d62e
      //CoveredLines: [24, 43, 44, 45, 47, 48, 49, 53, 54]
      //Input_0_PmsProductAttributeParam: {getSearchType=0, getSelectType=0, getSort=0, getName=\"cA^,81v$[5Ek \", getInputList=\"cA^,81v$[5Ek \", getInputType=0, getType=0, getFilterType=0, getHandAddStatus=0, getProductAttributeCategoryId=0, getRelatedStatus=0}
      //Assert: assertEquals(0, method_result);
      
      PmsProductAttributeServiceImpl pmsProductAttributeServiceImpl0 = new PmsProductAttributeServiceImpl();
      Integer integer0 = new Integer(0);
      //mock pmsProductAttributeCategory0
      PmsProductAttributeCategory pmsProductAttributeCategory0 = mock(PmsProductAttributeCategory.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(integer0).when(pmsProductAttributeCategory0).getAttributeCount();
      //mock pmsProductAttributeCategoryMapper0
      PmsProductAttributeCategoryMapper pmsProductAttributeCategoryMapper0 = mock(PmsProductAttributeCategoryMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(pmsProductAttributeCategory0).when(pmsProductAttributeCategoryMapper0).selectByPrimaryKey(anyLong());
      doReturn(2957).when(pmsProductAttributeCategoryMapper0).updateByPrimaryKey(any(com.macro.mall.model.PmsProductAttributeCategory.class));
      //mock pmsProductAttributeMapper0
      PmsProductAttributeMapper pmsProductAttributeMapper0 = mock(PmsProductAttributeMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(0).when(pmsProductAttributeMapper0).insertSelective(any(com.macro.mall.model.PmsProductAttribute.class));
      
      PrivateAccess.setVariable((Class<?>) PmsProductAttributeServiceImpl.class, pmsProductAttributeServiceImpl0, "productAttributeMapper", (Object) pmsProductAttributeMapper0);
      
      PrivateAccess.setVariable((Class<?>) PmsProductAttributeServiceImpl.class, pmsProductAttributeServiceImpl0, "productAttributeCategoryMapper", (Object) pmsProductAttributeCategoryMapper0);
      Long long0 = new Long(0);
      //mock pmsProductAttributeParam0
      PmsProductAttributeParam pmsProductAttributeParam0 = mock(PmsProductAttributeParam.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(integer0).when(pmsProductAttributeParam0).getFilterType();
      doReturn(integer0).when(pmsProductAttributeParam0).getHandAddStatus();
      doReturn("cA^,81v$[5Ek ").when(pmsProductAttributeParam0).getInputList();
      doReturn(integer0).when(pmsProductAttributeParam0).getInputType();
      doReturn("cA^,81v$[5Ek ").when(pmsProductAttributeParam0).getName();
      doReturn(long0).when(pmsProductAttributeParam0).getProductAttributeCategoryId();
      doReturn(integer0).when(pmsProductAttributeParam0).getRelatedStatus();
      doReturn(integer0).when(pmsProductAttributeParam0).getSearchType();
      doReturn(integer0).when(pmsProductAttributeParam0).getSelectType();
      doReturn(integer0).when(pmsProductAttributeParam0).getSort();
      doReturn(integer0).when(pmsProductAttributeParam0).getType();
      
      //Call method: create
      int int0 = pmsProductAttributeServiceImpl0.create(pmsProductAttributeParam0);
      
      //Test Result Assert
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test_create_02()  throws Throwable  {
      //caseID:07d2e448dde971ab51d50103c8ef152d
      //CoveredLines: [24, 43, 44, 45, 47, 48, 50, 51, 53, 54]
      //Input_0_PmsProductAttributeParam: {getSearchType=1, getSelectType=1, getSort=1, getName=\"cA^,81v$[5Ek \", getInputList=\"cA^,81v$[5Ek \", getInputType=1, getType=1, getFilterType=1, getHandAddStatus=1, getProductAttributeCategoryId=1, getRelatedStatus=1}
      //Assert: assertEquals(1, method_result);
      
      PmsProductAttributeServiceImpl pmsProductAttributeServiceImpl0 = new PmsProductAttributeServiceImpl();
      Integer integer0 = new Integer(1);
      //mock pmsProductAttributeCategory0
      PmsProductAttributeCategory pmsProductAttributeCategory0 = mock(PmsProductAttributeCategory.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(integer0).when(pmsProductAttributeCategory0).getParamCount();
      //mock pmsProductAttributeCategoryMapper0
      PmsProductAttributeCategoryMapper pmsProductAttributeCategoryMapper0 = mock(PmsProductAttributeCategoryMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(pmsProductAttributeCategory0).when(pmsProductAttributeCategoryMapper0).selectByPrimaryKey(anyLong());
      doReturn((-1)).when(pmsProductAttributeCategoryMapper0).updateByPrimaryKey(any(com.macro.mall.model.PmsProductAttributeCategory.class));
      //mock pmsProductAttributeMapper0
      PmsProductAttributeMapper pmsProductAttributeMapper0 = mock(PmsProductAttributeMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(1).when(pmsProductAttributeMapper0).insertSelective(any(com.macro.mall.model.PmsProductAttribute.class));
      
      PrivateAccess.setVariable((Class<?>) PmsProductAttributeServiceImpl.class, pmsProductAttributeServiceImpl0, "productAttributeMapper", (Object) pmsProductAttributeMapper0);
      
      PrivateAccess.setVariable((Class<?>) PmsProductAttributeServiceImpl.class, pmsProductAttributeServiceImpl0, "productAttributeCategoryMapper", (Object) pmsProductAttributeCategoryMapper0);
      Long long0 = new Long(1);
      //mock pmsProductAttributeParam0
      PmsProductAttributeParam pmsProductAttributeParam0 = mock(PmsProductAttributeParam.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(integer0).when(pmsProductAttributeParam0).getFilterType();
      doReturn(integer0).when(pmsProductAttributeParam0).getHandAddStatus();
      doReturn("cA^,81v$[5Ek ").when(pmsProductAttributeParam0).getInputList();
      doReturn(integer0).when(pmsProductAttributeParam0).getInputType();
      doReturn("cA^,81v$[5Ek ").when(pmsProductAttributeParam0).getName();
      doReturn(long0).when(pmsProductAttributeParam0).getProductAttributeCategoryId();
      doReturn(integer0).when(pmsProductAttributeParam0).getRelatedStatus();
      doReturn(integer0).when(pmsProductAttributeParam0).getSearchType();
      doReturn(integer0).when(pmsProductAttributeParam0).getSelectType();
      doReturn(integer0).when(pmsProductAttributeParam0).getSort();
      doReturn(integer0).when(pmsProductAttributeParam0).getType();
      
      //Call method: create
      int int0 = pmsProductAttributeServiceImpl0.create(pmsProductAttributeParam0);
      
      //Test Result Assert
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test_delete_03()  throws Throwable  {
      //caseID:6c6c872b85bda17870d54d168e7c983e
      //CoveredLines: [24, 73, 74, 75, 76, 77, 78, 80, 86, 93, 94]
      //Input_0_List<Long>: arrayList0
      //Assert: assertEquals((-1394), method_result);
      
      PmsProductAttributeServiceImpl pmsProductAttributeServiceImpl0 = new PmsProductAttributeServiceImpl();
      Integer integer0 = new Integer((-1394));
      //mock pmsProductAttributeCategory0
      PmsProductAttributeCategory pmsProductAttributeCategory0 = mock(PmsProductAttributeCategory.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      //mock pmsProductAttributeCategoryMapper0
      PmsProductAttributeCategoryMapper pmsProductAttributeCategoryMapper0 = mock(PmsProductAttributeCategoryMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(pmsProductAttributeCategory0).when(pmsProductAttributeCategoryMapper0).selectByPrimaryKey(anyLong());
      doReturn((-1394)).when(pmsProductAttributeCategoryMapper0).updateByPrimaryKey(any(com.macro.mall.model.PmsProductAttributeCategory.class));
      Long long0 = new Long((-1394));
      //mock pmsProductAttribute0
      PmsProductAttribute pmsProductAttribute0 = mock(PmsProductAttribute.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(long0).when(pmsProductAttribute0).getProductAttributeCategoryId();
      doReturn(integer0).when(pmsProductAttribute0).getType();
      //mock pmsProductAttributeMapper0
      PmsProductAttributeMapper pmsProductAttributeMapper0 = mock(PmsProductAttributeMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn((-1394)).when(pmsProductAttributeMapper0).deleteByExample(any(com.macro.mall.model.PmsProductAttributeExample.class));
      doReturn(pmsProductAttribute0).when(pmsProductAttributeMapper0).selectByPrimaryKey(anyLong());
      
      PrivateAccess.setVariable((Class<?>) PmsProductAttributeServiceImpl.class, pmsProductAttributeServiceImpl0, "productAttributeMapper", (Object) pmsProductAttributeMapper0);
      
      PrivateAccess.setVariable((Class<?>) PmsProductAttributeServiceImpl.class, pmsProductAttributeServiceImpl0, "productAttributeCategoryMapper", (Object) pmsProductAttributeCategoryMapper0);
      ArrayList<Long> arrayList0 = new ArrayList<Long>();
      
      arrayList0.add(long0);
      
      //Call method: delete
      int int0 = pmsProductAttributeServiceImpl0.delete(arrayList0);
      
      //Test Result Assert
      assertEquals((-1394), int0);
  }

  @Test(timeout = 4000)
  public void test_delete_04()  throws Throwable  {
      //caseID:1cb6cccb9f80134fc9b7fafe8cb35f8a
      //CoveredLines: [24, 73, 74, 75, 76, 77, 78, 80, 81, 84, 93, 94]
      //Input_0_List<Long>: arrayList0
      //Assert: assertEquals(0, method_result);
      
      PmsProductAttributeServiceImpl pmsProductAttributeServiceImpl0 = new PmsProductAttributeServiceImpl();
      Integer integer0 = new Integer((-257));
      //mock pmsProductAttributeCategory0
      PmsProductAttributeCategory pmsProductAttributeCategory0 = mock(PmsProductAttributeCategory.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(integer0).when(pmsProductAttributeCategory0).getAttributeCount();
      //mock pmsProductAttributeCategoryMapper0
      PmsProductAttributeCategoryMapper pmsProductAttributeCategoryMapper0 = mock(PmsProductAttributeCategoryMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(pmsProductAttributeCategory0).when(pmsProductAttributeCategoryMapper0).selectByPrimaryKey(anyLong());
      Integer integer1 = new Integer(0);
      Long long0 = new Long(0);
      //mock pmsProductAttribute0
      PmsProductAttribute pmsProductAttribute0 = mock(PmsProductAttribute.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(long0).when(pmsProductAttribute0).getProductAttributeCategoryId();
      doReturn(integer1).when(pmsProductAttribute0).getType();
      //mock pmsProductAttributeMapper0
      PmsProductAttributeMapper pmsProductAttributeMapper0 = mock(PmsProductAttributeMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(0).when(pmsProductAttributeMapper0).deleteByExample(any(com.macro.mall.model.PmsProductAttributeExample.class));
      doReturn(pmsProductAttribute0).when(pmsProductAttributeMapper0).selectByPrimaryKey(anyLong());
      
      PrivateAccess.setVariable((Class<?>) PmsProductAttributeServiceImpl.class, pmsProductAttributeServiceImpl0, "productAttributeMapper", (Object) pmsProductAttributeMapper0);
      
      PrivateAccess.setVariable((Class<?>) PmsProductAttributeServiceImpl.class, pmsProductAttributeServiceImpl0, "productAttributeCategoryMapper", (Object) pmsProductAttributeCategoryMapper0);
      ArrayList<Long> arrayList0 = new ArrayList<Long>();
      
      arrayList0.add(long0);
      
      //Call method: delete
      int int0 = pmsProductAttributeServiceImpl0.delete(arrayList0);
      
      //Test Result Assert
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test_delete_05()  throws Throwable  {
      //caseID:54ed0ece95bf7ef4f484cf4f135d3fa5
      //CoveredLines: [24, 73, 74, 75, 76, 77, 78, 80, 81, 82, 93, 94]
      //Input_0_List<Long>: arrayList0
      //Assert: assertEquals(0, method_result);
      
      PmsProductAttributeServiceImpl pmsProductAttributeServiceImpl0 = new PmsProductAttributeServiceImpl();
      Integer integer0 = new Integer(0);
      //mock pmsProductAttributeCategory0
      PmsProductAttributeCategory pmsProductAttributeCategory0 = mock(PmsProductAttributeCategory.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(integer0, integer0).when(pmsProductAttributeCategory0).getAttributeCount();
      //mock pmsProductAttributeCategoryMapper0
      PmsProductAttributeCategoryMapper pmsProductAttributeCategoryMapper0 = mock(PmsProductAttributeCategoryMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(pmsProductAttributeCategory0).when(pmsProductAttributeCategoryMapper0).selectByPrimaryKey(anyLong());
      doReturn(0).when(pmsProductAttributeCategoryMapper0).updateByPrimaryKey(any(com.macro.mall.model.PmsProductAttributeCategory.class));
      Long long0 = new Long(0);
      //mock pmsProductAttribute0
      PmsProductAttribute pmsProductAttribute0 = mock(PmsProductAttribute.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(long0).when(pmsProductAttribute0).getProductAttributeCategoryId();
      doReturn(integer0).when(pmsProductAttribute0).getType();
      //mock pmsProductAttributeMapper0
      PmsProductAttributeMapper pmsProductAttributeMapper0 = mock(PmsProductAttributeMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(0).when(pmsProductAttributeMapper0).deleteByExample(any(com.macro.mall.model.PmsProductAttributeExample.class));
      doReturn(pmsProductAttribute0).when(pmsProductAttributeMapper0).selectByPrimaryKey(anyLong());
      
      PrivateAccess.setVariable((Class<?>) PmsProductAttributeServiceImpl.class, pmsProductAttributeServiceImpl0, "productAttributeMapper", (Object) pmsProductAttributeMapper0);
      
      PrivateAccess.setVariable((Class<?>) PmsProductAttributeServiceImpl.class, pmsProductAttributeServiceImpl0, "productAttributeCategoryMapper", (Object) pmsProductAttributeCategoryMapper0);
      ArrayList<Long> arrayList0 = new ArrayList<Long>();
      
      arrayList0.add(long0);
      
      //Call method: delete
      int int0 = pmsProductAttributeServiceImpl0.delete(arrayList0);
      
      //Test Result Assert
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test_delete_06()  throws Throwable  {
      //caseID:928eb7fc993cc9f7a435dd51e333c21f
      //CoveredLines: [24, 73, 74, 75, 76, 77, 78, 80, 86, 87, 90, 93, 94]
      //Input_0_List<Long>: arrayList0
      //Assert: assertEquals(1, method_result);
      
      PmsProductAttributeServiceImpl pmsProductAttributeServiceImpl0 = new PmsProductAttributeServiceImpl();
      Integer integer0 = new Integer((-1));
      //mock pmsProductAttributeCategory0
      PmsProductAttributeCategory pmsProductAttributeCategory0 = mock(PmsProductAttributeCategory.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(integer0).when(pmsProductAttributeCategory0).getParamCount();
      //mock pmsProductAttributeCategoryMapper0
      PmsProductAttributeCategoryMapper pmsProductAttributeCategoryMapper0 = mock(PmsProductAttributeCategoryMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(pmsProductAttributeCategory0).when(pmsProductAttributeCategoryMapper0).selectByPrimaryKey(anyLong());
      doReturn((-1)).when(pmsProductAttributeCategoryMapper0).updateByPrimaryKey(any(com.macro.mall.model.PmsProductAttributeCategory.class));
      Integer integer1 = new Integer(1);
      Long long0 = new Long(1);
      //mock pmsProductAttribute0
      PmsProductAttribute pmsProductAttribute0 = mock(PmsProductAttribute.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(long0).when(pmsProductAttribute0).getProductAttributeCategoryId();
      doReturn(integer1).when(pmsProductAttribute0).getType();
      //mock pmsProductAttributeMapper0
      PmsProductAttributeMapper pmsProductAttributeMapper0 = mock(PmsProductAttributeMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(1).when(pmsProductAttributeMapper0).deleteByExample(any(com.macro.mall.model.PmsProductAttributeExample.class));
      doReturn(pmsProductAttribute0).when(pmsProductAttributeMapper0).selectByPrimaryKey(anyLong());
      
      PrivateAccess.setVariable((Class<?>) PmsProductAttributeServiceImpl.class, pmsProductAttributeServiceImpl0, "productAttributeMapper", (Object) pmsProductAttributeMapper0);
      
      PrivateAccess.setVariable((Class<?>) PmsProductAttributeServiceImpl.class, pmsProductAttributeServiceImpl0, "productAttributeCategoryMapper", (Object) pmsProductAttributeCategoryMapper0);
      ArrayList<Long> arrayList0 = new ArrayList<Long>();
      
      arrayList0.add(long0);
      
      //Call method: delete
      int int0 = pmsProductAttributeServiceImpl0.delete(arrayList0);
      
      //Test Result Assert
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test_delete_07()  throws Throwable  {
      //caseID:4e0864d83f2a656267c972ff62de4330
      //CoveredLines: [24, 73, 74, 75, 76, 77, 78, 80, 86, 87, 88, 93, 94]
      //Input_0_List<Long>: arrayList0
      //Assert: assertEquals(1, method_result);
      
      PmsProductAttributeServiceImpl pmsProductAttributeServiceImpl0 = new PmsProductAttributeServiceImpl();
      Integer integer0 = new Integer(1);
      //mock pmsProductAttributeCategory0
      PmsProductAttributeCategory pmsProductAttributeCategory0 = mock(PmsProductAttributeCategory.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(integer0, integer0).when(pmsProductAttributeCategory0).getParamCount();
      //mock pmsProductAttributeCategoryMapper0
      PmsProductAttributeCategoryMapper pmsProductAttributeCategoryMapper0 = mock(PmsProductAttributeCategoryMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(pmsProductAttributeCategory0).when(pmsProductAttributeCategoryMapper0).selectByPrimaryKey(anyLong());
      doReturn((-1)).when(pmsProductAttributeCategoryMapper0).updateByPrimaryKey(any(com.macro.mall.model.PmsProductAttributeCategory.class));
      Long long0 = new Long(1);
      //mock pmsProductAttribute0
      PmsProductAttribute pmsProductAttribute0 = mock(PmsProductAttribute.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(long0).when(pmsProductAttribute0).getProductAttributeCategoryId();
      doReturn(integer0).when(pmsProductAttribute0).getType();
      //mock pmsProductAttributeMapper0
      PmsProductAttributeMapper pmsProductAttributeMapper0 = mock(PmsProductAttributeMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(1).when(pmsProductAttributeMapper0).deleteByExample(any(com.macro.mall.model.PmsProductAttributeExample.class));
      doReturn(pmsProductAttribute0).when(pmsProductAttributeMapper0).selectByPrimaryKey(anyLong());
      
      PrivateAccess.setVariable((Class<?>) PmsProductAttributeServiceImpl.class, pmsProductAttributeServiceImpl0, "productAttributeMapper", (Object) pmsProductAttributeMapper0);
      
      PrivateAccess.setVariable((Class<?>) PmsProductAttributeServiceImpl.class, pmsProductAttributeServiceImpl0, "productAttributeCategoryMapper", (Object) pmsProductAttributeCategoryMapper0);
      ArrayList<Long> arrayList0 = new ArrayList<Long>();
      
      arrayList0.add(long0);
      
      //Call method: delete
      int int0 = pmsProductAttributeServiceImpl0.delete(arrayList0);
      
      //Test Result Assert
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test_getItem_08()  throws Throwable  {
      //caseID:0d59335bdf38f8388695096245b6e368
      //CoveredLines: [24, 67]
      //Input_0_Long: 0L
      //Assert: assertNull(method_result);
      
      PmsProductAttributeServiceImpl pmsProductAttributeServiceImpl0 = new PmsProductAttributeServiceImpl();
      //mock pmsProductAttributeMapper0
      PmsProductAttributeMapper pmsProductAttributeMapper0 = mock(PmsProductAttributeMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      PrivateAccess.setVariable((Class<?>) PmsProductAttributeServiceImpl.class, pmsProductAttributeServiceImpl0, "productAttributeMapper", (Object) pmsProductAttributeMapper0);
      Long long0 = new Long(0L);
      
      //Call method: getItem
      PmsProductAttribute pmsProductAttribute0 = pmsProductAttributeServiceImpl0.getItem(long0);
      
      //Test Result Assert
      assertNull(pmsProductAttribute0);
  }

  @Test(timeout = 4000)
  public void test_getList_09()  throws Throwable  {
      //caseID:a23b608cc3a30509728993657f48b16d
      //CoveredLines: [24, 34, 35, 36, 37, 38]
      //Input_0_Long: (-1L)
      //Input_1_Integer: 133
      //Input_2_Integer: 133
      //Input_3_Integer: 133
      //Assert: assertNull(method_result);
      
      PmsProductAttributeServiceImpl pmsProductAttributeServiceImpl0 = new PmsProductAttributeServiceImpl();
      //mock pmsProductAttributeMapper0
      PmsProductAttributeMapper pmsProductAttributeMapper0 = mock(PmsProductAttributeMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      PrivateAccess.setVariable((Class<?>) PmsProductAttributeServiceImpl.class, pmsProductAttributeServiceImpl0, "productAttributeMapper", (Object) pmsProductAttributeMapper0);
      Long long0 = new Long((-1L));
      Integer integer0 = new Integer(133);
      
      //Call method: getList
      List<PmsProductAttribute> list0 = pmsProductAttributeServiceImpl0.getList(long0, integer0, integer0, integer0);
      
      //Test Result Assert
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test_getProductAttrInfo_10()  throws Throwable  {
      //caseID:b8521f9bda755bf3f8aff8c6bcb402ce
      //CoveredLines: [24, 99]
      //Input_0_Long: 498L
      //Assert: assertNull(method_result);
      
      PmsProductAttributeServiceImpl pmsProductAttributeServiceImpl0 = new PmsProductAttributeServiceImpl();
      //mock pmsProductAttributeDao0
      PmsProductAttributeDao pmsProductAttributeDao0 = mock(PmsProductAttributeDao.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      PrivateAccess.setVariable((Class<?>) PmsProductAttributeServiceImpl.class, pmsProductAttributeServiceImpl0, "productAttributeDao", (Object) pmsProductAttributeDao0);
      Long long0 = new Long(498L);
      
      //Call method: getProductAttrInfo
      List<ProductAttrInfo> list0 = pmsProductAttributeServiceImpl0.getProductAttrInfo(long0);
      
      //Test Result Assert
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test_update_11()  throws Throwable  {
      //caseID:b1d6702f0e86a58fd243b990b95bde8f
      //CoveredLines: [24, 59, 60, 61, 62]
      //Input_0_Long: 0L
      //Input_1_PmsProductAttributeParam: {}
      //Assert: assertEquals(0, method_result);
      
      PmsProductAttributeServiceImpl pmsProductAttributeServiceImpl0 = new PmsProductAttributeServiceImpl();
      //mock pmsProductAttributeMapper0
      PmsProductAttributeMapper pmsProductAttributeMapper0 = mock(PmsProductAttributeMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      PrivateAccess.setVariable((Class<?>) PmsProductAttributeServiceImpl.class, pmsProductAttributeServiceImpl0, "productAttributeMapper", (Object) pmsProductAttributeMapper0);
      Long long0 = new Long(0L);
      //mock pmsProductAttributeParam0
      PmsProductAttributeParam pmsProductAttributeParam0 = mock(PmsProductAttributeParam.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: update
      int int0 = pmsProductAttributeServiceImpl0.update(long0, pmsProductAttributeParam0);
      
      //Test Result Assert
      assertEquals(0, int0);
  }
}
