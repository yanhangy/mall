/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.dto;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.macro.mall.dto.OmsMoneyInfoParam;
import java.math.BigDecimal;
import org.junit.runner.RunWith;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class OmsMoneyInfoParam_SSTest extends OmsMoneyInfoParam_SSTest_scaffolding {
// allCoveredLines:[14, 15, 17, 19, 21, 23]

  @Test(timeout = 4000)
  public void test_getDiscountAmount_0()  throws Throwable  {
      //caseID:edc65de10153c60e577022960c7f9138
      //CoveredLines: [15, 21]
      //Assert: assertEquals((byte)1, method_result.byteValue());
      
      OmsMoneyInfoParam omsMoneyInfoParam0 = new OmsMoneyInfoParam();
      BigDecimal bigDecimal0 = new BigDecimal(1.0);
      
      PrivateAccess.setVariable((Class<?>) OmsMoneyInfoParam.class, omsMoneyInfoParam0, "discountAmount", (Object) bigDecimal0);
      
      //Call method: getDiscountAmount
      BigDecimal bigDecimal1 = omsMoneyInfoParam0.getDiscountAmount();
      
      //Test Result Assert
      assertEquals((byte)1, bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test_getFreightAmount_1()  throws Throwable  {
      //caseID:8dfde29c70cd4441f732adda8d1598fb
      //CoveredLines: [15, 19]
      //Assert: assertEquals((short)10, method_result.shortValue());
      
      OmsMoneyInfoParam omsMoneyInfoParam0 = new OmsMoneyInfoParam();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      
      PrivateAccess.setVariable((Class<?>) OmsMoneyInfoParam.class, omsMoneyInfoParam0, "freightAmount", (Object) bigDecimal0);
      
      //Call method: getFreightAmount
      BigDecimal bigDecimal1 = omsMoneyInfoParam0.getFreightAmount();
      
      //Test Result Assert
      assertEquals((short)10, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test_getOrderId_2()  throws Throwable  {
      //caseID:b45b6ec0cc32eab80d93abc889b94cca
      //CoveredLines: [15, 17]
      //Assert: assertNull(method_result);
      
      OmsMoneyInfoParam omsMoneyInfoParam0 = new OmsMoneyInfoParam();
      
      //Call method: getOrderId
      Long long0 = omsMoneyInfoParam0.getOrderId();
      
      //Test Result Assert
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test_getStatus_3()  throws Throwable  {
      //caseID:e713ccbbdb11d9879f883154d6817f06
      //CoveredLines: [15, 23]
      //Assert: assertNull(method_result);
      
      OmsMoneyInfoParam omsMoneyInfoParam0 = new OmsMoneyInfoParam();
      
      //Call method: getStatus
      Integer integer0 = omsMoneyInfoParam0.getStatus();
      
      //Test Result Assert
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test_setDiscountAmount_4()  throws Throwable  {
      //caseID:8a70419e48422c9c9847c4ca320afe9b
      //CoveredLines: [14, 14, 14, 14, 15]
      //Input_0_BigDecimal: BigDecimal.TEN
      
      OmsMoneyInfoParam omsMoneyInfoParam0 = new OmsMoneyInfoParam();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      
      //Call method: setDiscountAmount
      omsMoneyInfoParam0.setDiscountAmount(bigDecimal0);
      
      //Test Result Assert
      assertEquals((short)10, bigDecimal0.shortValue());
  }

  @Test(timeout = 4000)
  public void test_setFreightAmount_5()  throws Throwable  {
      //caseID:69b154c9a6edce38b74aff137eb2b8a7
      //CoveredLines: [14, 14, 14, 14, 15]
      //Input_0_BigDecimal: BigDecimal.TEN
      
      OmsMoneyInfoParam omsMoneyInfoParam0 = new OmsMoneyInfoParam();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      
      //Call method: setFreightAmount
      omsMoneyInfoParam0.setFreightAmount(bigDecimal0);
      
      //Test Result Assert
      assertNull(omsMoneyInfoParam0.getOrderId());
  }

  @Test(timeout = 4000)
  public void test_setOrderId_6()  throws Throwable  {
      //caseID:dfac1b15dbfd5b0f1a86146e96906cb8
      //CoveredLines: [14, 14, 14, 14, 15]
      //Input_0_Long: 1509L
      
      OmsMoneyInfoParam omsMoneyInfoParam0 = new OmsMoneyInfoParam();
      Long long0 = new Long(1509L);
      
      //Call method: setOrderId
      omsMoneyInfoParam0.setOrderId(long0);
      
      //Test Result Assert
      assertEquals(1509L, (long)omsMoneyInfoParam0.getOrderId());
  }

  @Test(timeout = 4000)
  public void test_setStatus_7()  throws Throwable  {
      //caseID:4d80dade6ed6902e9c0f4051c6a474be
      //CoveredLines: [14, 14, 14, 14, 15]
      //Input_0_Integer: 0
      
      OmsMoneyInfoParam omsMoneyInfoParam0 = new OmsMoneyInfoParam();
      Integer integer0 = new Integer(0);
      
      //Call method: setStatus
      omsMoneyInfoParam0.setStatus(integer0);
      
      //Test Result Assert
      assertEquals(0, (int)omsMoneyInfoParam0.getStatus());
  }
}
