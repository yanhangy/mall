/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.dto;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.macro.mall.dto.BucketPolicyConfigDto;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class BucketPolicyConfigDto_SSTest extends BucketPolicyConfigDto_SSTest_scaffolding {
// allCoveredLines:[13, 14, 15, 18, 19, 21, 22, 23, 25, 26, 27, 28]

  @Test(timeout = 4000)
  public void test_equals_00()  throws Throwable  {
      //caseID:58275833477e214dbd0976698e40c10a
      //CoveredLines: [14, 14, 14, 15, 15, 15, 15, 15, 15, 15]
      //Input_0_Object: bucketPolicyConfigDto0
      //Assert: assertTrue(method_result);
      
      
      BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0 = BucketPolicyConfigDto.builder();
      
      BucketPolicyConfigDto bucketPolicyConfigDto0 = bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0.build();
      
      //Call method: equals
      boolean boolean0 = bucketPolicyConfigDto0.equals(bucketPolicyConfigDto0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_01()  throws Throwable  {
      //caseID:f74024f36763f04124015ac83afa0972
      //CoveredLines: [14, 14, 14, 15, 15, 15, 15, 15, 15, 15]
      //Input_0_Object: linkedList0
      //Assert: assertFalse(method_result);
      
      
      BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0 = BucketPolicyConfigDto.builder();
      
      BucketPolicyConfigDto bucketPolicyConfigDto0 = bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0.build();
      LinkedList<BucketPolicyConfigDto.Statement> linkedList0 = new LinkedList<BucketPolicyConfigDto.Statement>();
      
      //Call method: equals
      boolean boolean0 = bucketPolicyConfigDto0.equals(linkedList0);
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_02()  throws Throwable  {
      //caseID:0f903ac7fa9a895d36b30845311fb8ad
      //CoveredLines: [14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 18, 19]
      //Input_0_Object: bucketPolicyConfigDto1
      //Assert: assertTrue(method_result);
      
      
      BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0 = BucketPolicyConfigDto.builder();
      
      BucketPolicyConfigDto bucketPolicyConfigDto0 = bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0.build();
      
      BucketPolicyConfigDto bucketPolicyConfigDto1 = bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0.build();
      
      //Call method: equals
      boolean boolean0 = bucketPolicyConfigDto0.equals(bucketPolicyConfigDto1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_03()  throws Throwable  {
      //caseID:b3ed2645fa24966edb70eda0b557e3e9
      //CoveredLines: [14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 18, 19]
      //Input_0_Object: bucketPolicyConfigDto0
      //Assert: assertTrue(method_result);
      
      
      BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0 = BucketPolicyConfigDto.builder();
      
      BucketPolicyConfigDto bucketPolicyConfigDto0 = bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0.build();
      
      BucketPolicyConfigDto bucketPolicyConfigDto1 = bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0.build();
      
      //Call method: equals
      boolean boolean0 = bucketPolicyConfigDto1.equals(bucketPolicyConfigDto0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_04()  throws Throwable  {
      //caseID:fac808fb425b1e1be8c000b794f51d25
      //CoveredLines: [14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 18, 19]
      //Input_0_Object: bucketPolicyConfigDto0
      //Assert: assertTrue(method_result);
      
      
      BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0 = BucketPolicyConfigDto.builder();
      
      BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder1 = bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0.Version("");
      
      BucketPolicyConfigDto bucketPolicyConfigDto0 = bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder1.build();
      
      BucketPolicyConfigDto bucketPolicyConfigDto1 = bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder1.build();
      
      //Call method: equals
      boolean boolean0 = bucketPolicyConfigDto1.equals(bucketPolicyConfigDto0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_05()  throws Throwable  {
      //caseID:142d51d956bd308f5d7e198bfcc3a60b
      //CoveredLines: [14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 18, 19]
      //Input_0_Object: bucketPolicyConfigDto1
      //Assert: assertTrue(method_result);
      
      
      BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0 = BucketPolicyConfigDto.builder();
      
      BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder1 = bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0.Version("1.0");
      
      BucketPolicyConfigDto bucketPolicyConfigDto0 = bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder1.build();
      
      BucketPolicyConfigDto bucketPolicyConfigDto1 = bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder1.build();
      
      //Call method: equals
      boolean boolean0 = bucketPolicyConfigDto0.equals(bucketPolicyConfigDto1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_06()  throws Throwable  {
      //caseID:0eb76c424b600488cabd4603a4a93969
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23]
      //Input_0_Object: bucketPolicyConfigDto_Statement0
      //Assert: assertTrue(method_result);
      
      
      BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0 = BucketPolicyConfigDto.builder();
      Stack<BucketPolicyConfigDto.Statement> stack0 = new Stack<BucketPolicyConfigDto.Statement>();
      
      BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder1 = bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0.Statement(stack0);
      
      BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder2 = bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder1.Version("b8GP]kF44vr");
      
      bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder2.build();
      
      BucketPolicyConfigDto.Statement.StatementBuilder bucketPolicyConfigDto_Statement_StatementBuilder0 = BucketPolicyConfigDto.Statement.builder();
      
      BucketPolicyConfigDto.Statement bucketPolicyConfigDto_Statement0 = bucketPolicyConfigDto_Statement_StatementBuilder0.build();
      
      bucketPolicyConfigDto_Statement_StatementBuilder0.Resource(" J??#");
      
      //Call method: equals
      boolean boolean0 = bucketPolicyConfigDto_Statement0.equals(bucketPolicyConfigDto_Statement0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_07()  throws Throwable  {
      //caseID:5e14db43c19343b565eb9b31cd741b1a
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23]
      //Input_0_Object: bucketPolicyConfigDto0
      //Assert: assertFalse(method_result);
      
      
      BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0 = BucketPolicyConfigDto.builder();
      
      BucketPolicyConfigDto bucketPolicyConfigDto0 = bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0.build();
      
      BucketPolicyConfigDto.Statement.StatementBuilder bucketPolicyConfigDto_Statement_StatementBuilder0 = BucketPolicyConfigDto.Statement.builder();
      
      BucketPolicyConfigDto.Statement bucketPolicyConfigDto_Statement0 = bucketPolicyConfigDto_Statement_StatementBuilder0.build();
      
      //Call method: equals
      boolean boolean0 = bucketPolicyConfigDto_Statement0.equals(bucketPolicyConfigDto0);
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_08()  throws Throwable  {
      //caseID:687b10189e03929e7ea36490e849060c
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 25, 26, 27, 28]
      //Input_0_Object: bucketPolicyConfigDto_Statement0
      //Assert: assertFalse(method_result);
      
      
      BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0 = BucketPolicyConfigDto.builder();
      Stack<BucketPolicyConfigDto.Statement> stack0 = new Stack<BucketPolicyConfigDto.Statement>();
      
      BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder1 = bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0.Statement(stack0);
      
      bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder1.Version("reactor.malormed.source");
      
      bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder1.build();
      
      BucketPolicyConfigDto.Statement.StatementBuilder bucketPolicyConfigDto_Statement_StatementBuilder0 = BucketPolicyConfigDto.Statement.builder();
      
      BucketPolicyConfigDto.Statement bucketPolicyConfigDto_Statement0 = bucketPolicyConfigDto_Statement_StatementBuilder0.build();
      
      BucketPolicyConfigDto.Statement.StatementBuilder bucketPolicyConfigDto_Statement_StatementBuilder1 = bucketPolicyConfigDto_Statement_StatementBuilder0.Resource("reactor.malormed.source");
      
      BucketPolicyConfigDto.Statement bucketPolicyConfigDto_Statement1 = bucketPolicyConfigDto_Statement_StatementBuilder1.build();
      
      //Call method: equals
      boolean boolean0 = bucketPolicyConfigDto_Statement1.equals(bucketPolicyConfigDto_Statement0);
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_09()  throws Throwable  {
      //caseID:edc1d7f905a92c8c4f5bf37cc5bb9258
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 25, 26, 27, 28]
      //Input_0_Object: bucketPolicyConfigDto_Statement1
      //Assert: assertTrue(method_result);
      //Assert: assertEquals("<r*>nQ", bucketPolicyConfigDto_Statement1.getPrincipal());
      //Assert: assertEquals("parallelism = ", bucketPolicyConfigDto_Statement1.getEffect());
      
      
      BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0 = BucketPolicyConfigDto.builder();
      ArrayList<BucketPolicyConfigDto.Statement> arrayList0 = new ArrayList<BucketPolicyConfigDto.Statement>();
      
      BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder1 = bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0.Statement(arrayList0);
      
      bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder1.build();
      
      BucketPolicyConfigDto.Statement.StatementBuilder bucketPolicyConfigDto_Statement_StatementBuilder0 = BucketPolicyConfigDto.Statement.builder();
      
      BucketPolicyConfigDto.Statement.StatementBuilder bucketPolicyConfigDto_Statement_StatementBuilder1 = bucketPolicyConfigDto_Statement_StatementBuilder0.Principal("<r*>nQ");
      
      BucketPolicyConfigDto.Statement.StatementBuilder bucketPolicyConfigDto_Statement_StatementBuilder2 = bucketPolicyConfigDto_Statement_StatementBuilder1.Effect("parallelism = ");
      
      BucketPolicyConfigDto.Statement bucketPolicyConfigDto_Statement0 = bucketPolicyConfigDto_Statement_StatementBuilder2.build();
      
      BucketPolicyConfigDto.Statement bucketPolicyConfigDto_Statement1 = bucketPolicyConfigDto_Statement_StatementBuilder0.build();
      
      //Call method: equals
      boolean boolean0 = bucketPolicyConfigDto_Statement0.equals(bucketPolicyConfigDto_Statement1);
      
      //Test Result Assert
      assertTrue(boolean0);
      
      //Test Result Assert
      assertEquals("<r*>nQ", bucketPolicyConfigDto_Statement1.getPrincipal());
      
      //Test Result Assert
      assertEquals("parallelism = ", bucketPolicyConfigDto_Statement1.getEffect());
  }

  @Test(timeout = 4000)
  public void test_equals_10()  throws Throwable  {
      //caseID:f47a0e4085c1975eadebc9e75147fc41
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 25, 26, 27, 28]
      //Input_0_Object: bucketPolicyConfigDto_Statement1
      //Assert: assertTrue(method_result);
      
      
      BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0 = BucketPolicyConfigDto.builder();
      
      BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder1 = bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0.Version("Payment Required");
      
      bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder1.build();
      
      BucketPolicyConfigDto.Statement.StatementBuilder bucketPolicyConfigDto_Statement_StatementBuilder0 = BucketPolicyConfigDto.Statement.builder();
      
      bucketPolicyConfigDto_Statement_StatementBuilder0.Action("Payment Required");
      
      BucketPolicyConfigDto.Statement.StatementBuilder bucketPolicyConfigDto_Statement_StatementBuilder1 = bucketPolicyConfigDto_Statement_StatementBuilder0.Effect("Payment Required");
      
      BucketPolicyConfigDto.Statement bucketPolicyConfigDto_Statement0 = bucketPolicyConfigDto_Statement_StatementBuilder1.build();
      
      BucketPolicyConfigDto.Statement bucketPolicyConfigDto_Statement1 = bucketPolicyConfigDto_Statement_StatementBuilder0.build();
      
      //Call method: equals
      boolean boolean0 = bucketPolicyConfigDto_Statement0.equals(bucketPolicyConfigDto_Statement1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_11()  throws Throwable  {
      //caseID:5e629b1e81a41ff12fc659acbd3a8f73
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 25, 26, 27, 28]
      //Input_0_Object: bucketPolicyConfigDto_Statement1
      //Assert: assertFalse(method_result);
      
      
      BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0 = BucketPolicyConfigDto.builder();
      Stack<BucketPolicyConfigDto.Statement> stack0 = new Stack<BucketPolicyConfigDto.Statement>();
      
      BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder1 = bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0.Statement(stack0);
      
      BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder2 = bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder1.Version("reactor.core.publisher.FluxUsingWhen$RollbackInner");
      
      bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder2.build();
      
      BucketPolicyConfigDto.Statement.StatementBuilder bucketPolicyConfigDto_Statement_StatementBuilder0 = BucketPolicyConfigDto.Statement.builder();
      
      BucketPolicyConfigDto.Statement bucketPolicyConfigDto_Statement0 = bucketPolicyConfigDto_Statement_StatementBuilder0.build();
      
      BucketPolicyConfigDto.Statement.StatementBuilder bucketPolicyConfigDto_Statement_StatementBuilder1 = bucketPolicyConfigDto_Statement_StatementBuilder0.Resource("reactor.core.publisher.FluxUsingWhen$RollbackInner");
      
      BucketPolicyConfigDto.Statement bucketPolicyConfigDto_Statement1 = bucketPolicyConfigDto_Statement_StatementBuilder1.build();
      
      //Test Result Assert
      assertFalse(bucketPolicyConfigDto_Statement1.equals((Object)bucketPolicyConfigDto_Statement0));
      
      
      //Call method: equals
      boolean boolean0 = bucketPolicyConfigDto_Statement0.equals(bucketPolicyConfigDto_Statement1);
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test_hashCode_12()  throws Throwable  {
      //caseID:fc48c3af7f9e28a86e6ad6bc6e7f5893
      //CoveredLines: [14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 18, 19]
      
      
      BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0 = BucketPolicyConfigDto.builder();
      
      BucketPolicyConfigDto bucketPolicyConfigDto0 = bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0.build();
      
      //Call method: hashCode
      bucketPolicyConfigDto0.hashCode();
  }

  @Test(timeout = 4000)
  public void test_setAction_13()  throws Throwable  {
      //caseID:17d1e6fa6ec2eb2ac9a4e66c66d8a2d0
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 21, 21, 21, 21, 21, 23, 23, 23, 23, 23, 23, 23, 23, 23]
      //Input_0_String: 0
      
      
      BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0 = BucketPolicyConfigDto.builder();
      Stack<BucketPolicyConfigDto.Statement> stack0 = new Stack<BucketPolicyConfigDto.Statement>();
      
      BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder1 = bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0.Statement(stack0);
      
      BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder2 = bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder1.Version("0");
      
      bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder2.build();
      
      BucketPolicyConfigDto.Statement.StatementBuilder bucketPolicyConfigDto_Statement_StatementBuilder0 = BucketPolicyConfigDto.Statement.builder();
      
      bucketPolicyConfigDto_Statement_StatementBuilder0.Resource("0");
      
      BucketPolicyConfigDto.Statement bucketPolicyConfigDto_Statement0 = bucketPolicyConfigDto_Statement_StatementBuilder0.build();
      
      //Test Result Assert
      assertEquals("0", bucketPolicyConfigDto_Statement0.getResource());
      
      
      //Call method: setAction
      bucketPolicyConfigDto_Statement0.setAction("0");
      
      //Test Result Assert
      assertEquals("0", bucketPolicyConfigDto_Statement0.getResource());
  }

  @Test(timeout = 4000)
  public void test_setEffect_14()  throws Throwable  {
      //caseID:0a2da94543f4f95d09fa7d5ad56f0a34
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 21, 21, 21, 21, 21, 23, 23, 23, 23, 23, 23, 23, 23, 23]
      //Input_0_String: 1
      
      
      BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0 = BucketPolicyConfigDto.builder();
      LinkedList<BucketPolicyConfigDto.Statement> linkedList0 = new LinkedList<BucketPolicyConfigDto.Statement>();
      
      BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder1 = bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0.Statement(linkedList0);
      
      bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder1.build();
      
      BucketPolicyConfigDto.Statement.StatementBuilder bucketPolicyConfigDto_Statement_StatementBuilder0 = BucketPolicyConfigDto.Statement.builder();
      
      BucketPolicyConfigDto.Statement.StatementBuilder bucketPolicyConfigDto_Statement_StatementBuilder1 = bucketPolicyConfigDto_Statement_StatementBuilder0.Principal("0");
      
      BucketPolicyConfigDto.Statement.StatementBuilder bucketPolicyConfigDto_Statement_StatementBuilder2 = bucketPolicyConfigDto_Statement_StatementBuilder1.Effect(")M*<(_~beje}");
      
      BucketPolicyConfigDto.Statement bucketPolicyConfigDto_Statement0 = bucketPolicyConfigDto_Statement_StatementBuilder2.build();
      
      //Test Result Assert
      assertEquals(")M*<(_~beje}", bucketPolicyConfigDto_Statement0.getEffect());
      
      
      //Call method: setEffect
      bucketPolicyConfigDto_Statement0.setEffect("1");
      
      //Test Result Assert
      assertEquals("0", bucketPolicyConfigDto_Statement0.getPrincipal());
  }

  @Test(timeout = 4000)
  public void test_setPrincipal_15()  throws Throwable  {
      //caseID:567c5755256c6675696a8e8c809fcfb1
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 21, 21, 21, 21, 21, 23, 23, 23, 23, 23, 23, 23, 23, 23]
      //Input_0_String: 1
      
      
      BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0 = BucketPolicyConfigDto.builder();
      Stack<BucketPolicyConfigDto.Statement> stack0 = new Stack<BucketPolicyConfigDto.Statement>();
      
      BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder1 = bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0.Statement(stack0);
      
      bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder1.build();
      
      BucketPolicyConfigDto.Statement.StatementBuilder bucketPolicyConfigDto_Statement_StatementBuilder0 = BucketPolicyConfigDto.Statement.builder();
      
      BucketPolicyConfigDto.Statement.StatementBuilder bucketPolicyConfigDto_Statement_StatementBuilder1 = bucketPolicyConfigDto_Statement_StatementBuilder0.Principal("BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder(Version=");
      
      BucketPolicyConfigDto.Statement.StatementBuilder bucketPolicyConfigDto_Statement_StatementBuilder2 = bucketPolicyConfigDto_Statement_StatementBuilder1.Action("lower bound for wildcard");
      
      BucketPolicyConfigDto.Statement.StatementBuilder bucketPolicyConfigDto_Statement_StatementBuilder3 = bucketPolicyConfigDto_Statement_StatementBuilder2.Resource(")");
      
      BucketPolicyConfigDto.Statement.StatementBuilder bucketPolicyConfigDto_Statement_StatementBuilder4 = bucketPolicyConfigDto_Statement_StatementBuilder3.Effect("reactor.core.publisher.FluxConcatMap$ConcatMapDelayed");
      
      BucketPolicyConfigDto.Statement bucketPolicyConfigDto_Statement0 = bucketPolicyConfigDto_Statement_StatementBuilder4.build();
      
      //Test Result Assert
      assertEquals("BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder(Version=", bucketPolicyConfigDto_Statement0.getPrincipal());
      
      
      //Call method: setPrincipal
      bucketPolicyConfigDto_Statement0.setPrincipal("1");
      
      //Test Result Assert
      assertEquals("lower bound for wildcard", bucketPolicyConfigDto_Statement0.getAction());
      
      //Test Result Assert
      assertEquals("reactor.core.publisher.FluxConcatMap$ConcatMapDelayed", bucketPolicyConfigDto_Statement0.getEffect());
      
      //Test Result Assert
      assertEquals(")", bucketPolicyConfigDto_Statement0.getResource());
  }

  @Test(timeout = 4000)
  public void test_setResource_16()  throws Throwable  {
      //caseID:5e07a69f4a99e229582ebbf4825f0d5f
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 21, 21, 21, 21, 21, 23, 23, 23, 23, 23, 23, 23, 23, 23]
      //Input_0_String: 59
      
      
      BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0 = BucketPolicyConfigDto.builder();
      Stack<BucketPolicyConfigDto.Statement> stack0 = new Stack<BucketPolicyConfigDto.Statement>();
      
      BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder1 = bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0.Statement(stack0);
      
      BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder2 = bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder1.Version(".u3");
      
      bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder2.build();
      
      BucketPolicyConfigDto.Statement.StatementBuilder bucketPolicyConfigDto_Statement_StatementBuilder0 = BucketPolicyConfigDto.Statement.builder();
      
      BucketPolicyConfigDto.Statement.StatementBuilder bucketPolicyConfigDto_Statement_StatementBuilder1 = bucketPolicyConfigDto_Statement_StatementBuilder0.Effect("BucketPolicyConfigDto(Version=");
      
      BucketPolicyConfigDto.Statement.StatementBuilder bucketPolicyConfigDto_Statement_StatementBuilder2 = bucketPolicyConfigDto_Statement_StatementBuilder1.Action("426");
      
      BucketPolicyConfigDto.Statement.StatementBuilder bucketPolicyConfigDto_Statement_StatementBuilder3 = bucketPolicyConfigDto_Statement_StatementBuilder2.Resource("HttpHandler must not be null");
      
      BucketPolicyConfigDto.Statement.StatementBuilder bucketPolicyConfigDto_Statement_StatementBuilder4 = bucketPolicyConfigDto_Statement_StatementBuilder3.Principal("1");
      
      BucketPolicyConfigDto.Statement bucketPolicyConfigDto_Statement0 = bucketPolicyConfigDto_Statement_StatementBuilder4.build();
      
      //Test Result Assert
      assertEquals("HttpHandler must not be null", bucketPolicyConfigDto_Statement0.getResource());
      
      
      //Call method: setResource
      bucketPolicyConfigDto_Statement0.setResource("59");
      
      //Test Result Assert
      assertEquals("BucketPolicyConfigDto(Version=", bucketPolicyConfigDto_Statement0.getEffect());
      
      //Test Result Assert
      assertEquals("1", bucketPolicyConfigDto_Statement0.getPrincipal());
      
      //Test Result Assert
      assertEquals("426", bucketPolicyConfigDto_Statement0.getAction());
  }

  @Test(timeout = 4000)
  public void test_setStatement_17()  throws Throwable  {
      //caseID:c4ef2c4e70256569e34caab5ef805d8c
      //CoveredLines: [13, 13, 13, 15, 15, 15, 15, 15, 15, 15]
      //Input_0_List<BucketPolicyConfigDto.Statement>: linkedList0
      
      
      BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0 = BucketPolicyConfigDto.builder();
      
      BucketPolicyConfigDto bucketPolicyConfigDto0 = bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0.build();
      LinkedList<BucketPolicyConfigDto.Statement> linkedList0 = new LinkedList<BucketPolicyConfigDto.Statement>();
      
      //Call method: setStatement
      bucketPolicyConfigDto0.setStatement(linkedList0);
      
      //Test Result Assert
      assertEquals(0, linkedList0.size());
  }

  @Test(timeout = 4000)
  public void test_setVersion_18()  throws Throwable  {
      //caseID:164ad049451bfcde194a3b60016a4f2e
      //CoveredLines: [13, 13, 13, 15, 15, 15, 15, 15, 15, 15]
      //Input_0_String: 
      
      
      BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0 = BucketPolicyConfigDto.builder();
      
      BucketPolicyConfigDto bucketPolicyConfigDto0 = bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0.build();
      
      //Call method: setVersion
      bucketPolicyConfigDto0.setVersion("");
      
      //Test Result Assert
      assertEquals("", bucketPolicyConfigDto0.getVersion());
  }

  @Test(timeout = 4000)
  public void test_toString_19()  throws Throwable  {
      //caseID:0c925a247aadd6886b03459d8b5f660f
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15]
      //Assert: assertEquals("BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder(Version=null, Statement=null)", method_result);
      
      
      BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0 = BucketPolicyConfigDto.builder();
      
      bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0.build();
      
      //Call method: toString
      String string0 = bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0.toString();
      
      //Test Result Assert
      assertEquals("BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder(Version=null, Statement=null)", string0);
  }

  @Test(timeout = 4000)
  public void test_toString_20()  throws Throwable  {
      //caseID:ef8f590c47fb94c1204f857c8fa801b3
      //CoveredLines: [13, 13, 13, 15, 15, 15, 15, 15, 15, 15, 18, 19]
      //Assert: assertEquals("BucketPolicyConfigDto(Version=null, Statement=null)", method_result);
      
      
      BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0 = BucketPolicyConfigDto.builder();
      
      BucketPolicyConfigDto bucketPolicyConfigDto0 = bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0.build();
      
      //Call method: toString
      String string0 = bucketPolicyConfigDto0.toString();
      
      //Test Result Assert
      assertEquals("BucketPolicyConfigDto(Version=null, Statement=null)", string0);
  }

  @Test(timeout = 4000)
  public void test_toString_21()  throws Throwable  {
      //caseID:40ceb12c9da36199485fef39cbfdc6ae
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 23, 23, 23, 23, 23, 23, 23, 23, 23]
      //Assert: assertEquals("BucketPolicyConfigDto.Statement.StatementBuilder(Effect=null, Principal=null, Action=null, Resource=null)", method_result);
      
      
      BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0 = BucketPolicyConfigDto.builder();
      
      bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0.build();
      
      BucketPolicyConfigDto.Statement.StatementBuilder bucketPolicyConfigDto_Statement_StatementBuilder0 = BucketPolicyConfigDto.Statement.builder();
      
      //Call method: toString
      String string0 = bucketPolicyConfigDto_Statement_StatementBuilder0.toString();
      
      //Test Result Assert
      assertEquals("BucketPolicyConfigDto.Statement.StatementBuilder(Effect=null, Principal=null, Action=null, Resource=null)", string0);
  }

  @Test(timeout = 4000)
  public void test_toString_22()  throws Throwable  {
      //caseID:9e666b9e45ce266d127e4da5e42cfc78
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 21, 21, 21, 21, 21, 23, 23, 23, 23, 23, 23, 23, 23, 23, 25, 26, 27, 28]
      //Assert: assertEquals("BucketPolicyConfigDto.Statement(Effect=, Resource=, Principal=)`xPC#, Action=59, Resource=)", method_result);
      
      
      BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0 = BucketPolicyConfigDto.builder();
      
      BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder1 = bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0.Version("1");
      
      bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder1.build();
      
      BucketPolicyConfigDto.Statement.StatementBuilder bucketPolicyConfigDto_Statement_StatementBuilder0 = BucketPolicyConfigDto.Statement.builder();
      
      BucketPolicyConfigDto.Statement.StatementBuilder bucketPolicyConfigDto_Statement_StatementBuilder1 = bucketPolicyConfigDto_Statement_StatementBuilder0.Action("59");
      
      BucketPolicyConfigDto.Statement.StatementBuilder bucketPolicyConfigDto_Statement_StatementBuilder2 = bucketPolicyConfigDto_Statement_StatementBuilder1.Resource("");
      
      BucketPolicyConfigDto.Statement.StatementBuilder bucketPolicyConfigDto_Statement_StatementBuilder3 = bucketPolicyConfigDto_Statement_StatementBuilder2.Effect(", Resource=");
      
      BucketPolicyConfigDto.Statement.StatementBuilder bucketPolicyConfigDto_Statement_StatementBuilder4 = bucketPolicyConfigDto_Statement_StatementBuilder3.Principal(")`xPC#");
      
      BucketPolicyConfigDto.Statement bucketPolicyConfigDto_Statement0 = bucketPolicyConfigDto_Statement_StatementBuilder4.build();
      
      //Call method: toString
      String string0 = bucketPolicyConfigDto_Statement0.toString();
      
      //Test Result Assert
      assertEquals("BucketPolicyConfigDto.Statement(Effect=, Resource=, Principal=)`xPC#, Action=59, Resource=)", string0);
  }

  @Test(timeout = 4000)
  public void test_toString_23()  throws Throwable  {
      //caseID:18baa571175358e18c55be554e43f611
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 21, 21, 21, 21, 21, 23, 23, 23, 23, 23, 23, 23, 23, 23, 25, 26, 27, 28]
      //Assert: assertEquals("BucketPolicyConfigDto.Statement(Effect=null, Principal=com.macro.mall.dto.BucketPolicyConfigDto$BucketPolicyConfigDtoBuilder, Action=BucketPolicyConfigDto(Version=, Resource=null)", method_result);
      
      
      BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0 = BucketPolicyConfigDto.builder();
      Stack<BucketPolicyConfigDto.Statement> stack0 = new Stack<BucketPolicyConfigDto.Statement>();
      
      BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder1 = bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0.Statement(stack0);
      
      bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder1.build();
      
      BucketPolicyConfigDto.Statement.StatementBuilder bucketPolicyConfigDto_Statement_StatementBuilder0 = BucketPolicyConfigDto.Statement.builder();
      
      BucketPolicyConfigDto.Statement.StatementBuilder bucketPolicyConfigDto_Statement_StatementBuilder1 = bucketPolicyConfigDto_Statement_StatementBuilder0.Principal("com.macro.mall.dto.BucketPolicyConfigDto$BucketPolicyConfigDtoBuilder");
      
      BucketPolicyConfigDto.Statement.StatementBuilder bucketPolicyConfigDto_Statement_StatementBuilder2 = bucketPolicyConfigDto_Statement_StatementBuilder1.Action("BucketPolicyConfigDto(Version=");
      
      BucketPolicyConfigDto.Statement bucketPolicyConfigDto_Statement0 = bucketPolicyConfigDto_Statement_StatementBuilder2.build();
      
      //Call method: toString
      String string0 = bucketPolicyConfigDto_Statement0.toString();
      
      //Test Result Assert
      assertEquals("BucketPolicyConfigDto.Statement(Effect=null, Principal=com.macro.mall.dto.BucketPolicyConfigDto$BucketPolicyConfigDtoBuilder, Action=BucketPolicyConfigDto(Version=, Resource=null)", string0);
  }

  @Test(timeout = 4000)
  public void test_toString_24()  throws Throwable  {
      //caseID:5a6d834af218aef99aafb22e6314b700
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 21, 21, 21, 21, 21, 23, 23, 23, 23, 23, 23, 23, 23, 23, 25, 26, 27, 28]
      //Assert: assertEquals("BucketPolicyConfigDto.Statement(Effect=null, Principal=null, Action=springfox.documentation.service.Tag, Resource=springfox.documentation.service.Tag)", method_result);
      
      
      BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0 = BucketPolicyConfigDto.builder();
      
      bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0.build();
      
      BucketPolicyConfigDto.Statement.StatementBuilder bucketPolicyConfigDto_Statement_StatementBuilder0 = BucketPolicyConfigDto.Statement.builder();
      
      bucketPolicyConfigDto_Statement_StatementBuilder0.Action("springfox.documentation.service.Tag");
      
      BucketPolicyConfigDto.Statement.StatementBuilder bucketPolicyConfigDto_Statement_StatementBuilder1 = bucketPolicyConfigDto_Statement_StatementBuilder0.Resource("springfox.documentation.service.Tag");
      
      BucketPolicyConfigDto.Statement bucketPolicyConfigDto_Statement0 = bucketPolicyConfigDto_Statement_StatementBuilder1.build();
      
      //Call method: toString
      String string0 = bucketPolicyConfigDto_Statement0.toString();
      
      //Test Result Assert
      assertEquals("BucketPolicyConfigDto.Statement(Effect=null, Principal=null, Action=springfox.documentation.service.Tag, Resource=springfox.documentation.service.Tag)", string0);
  }

  @Test(timeout = 4000)
  public void test_toString_25()  throws Throwable  {
      //caseID:bec085fb3b4f758af1065dda3f6af740
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 21, 21, 21, 21, 21, 23, 23, 23, 23, 23, 23, 23, 23, 23, 25, 26, 27, 28]
      //Assert: assertEquals("BucketPolicyConfigDto.Statement(Effect=null, Principal=null, Action=null, Resource=null)", method_result);
      
      
      BucketPolicyConfigDto.BucketPolicyConfigDtoBuilder bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0 = BucketPolicyConfigDto.builder();
      
      bucketPolicyConfigDto_BucketPolicyConfigDtoBuilder0.build();
      
      BucketPolicyConfigDto.Statement.StatementBuilder bucketPolicyConfigDto_Statement_StatementBuilder0 = BucketPolicyConfigDto.Statement.builder();
      
      BucketPolicyConfigDto.Statement bucketPolicyConfigDto_Statement0 = bucketPolicyConfigDto_Statement_StatementBuilder0.build();
      
      //Call method: toString
      String string0 = bucketPolicyConfigDto_Statement0.toString();
      
      //Test Result Assert
      assertEquals("BucketPolicyConfigDto.Statement(Effect=null, Principal=null, Action=null, Resource=null)", string0);
  }
}
