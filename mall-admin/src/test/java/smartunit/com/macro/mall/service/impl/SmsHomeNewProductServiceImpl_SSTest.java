/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.service.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.macro.mall.mapper.SmsHomeNewProductMapper;
import com.macro.mall.model.SmsHomeNewProduct;
import com.macro.mall.service.impl.SmsHomeNewProductServiceImpl;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class SmsHomeNewProductServiceImpl_SSTest extends SmsHomeNewProductServiceImpl_SSTest_scaffolding {
// allCoveredLines:[19, 24, 25, 26, 27, 28, 29, 34, 35, 36, 37, 42, 43, 44, 49, 50, 51, 52, 53, 58, 59, 60, 61, 62, 64, 65, 67, 68]

  @Test(timeout = 4000)
  public void test_create_0()  throws Throwable  {
      //caseID:35fce4fef3e1eb2a1dcc9621c0365be1
      //CoveredLines: [19, 24, 25, 26, 27, 28, 29]
      //Input_0_SmsHomeNewProduct>: linkedList0
      //Assert: assertEquals(1, method_result);
      
      SmsHomeNewProductServiceImpl smsHomeNewProductServiceImpl0 = new SmsHomeNewProductServiceImpl();
      //mock smsHomeNewProductMapper0
      SmsHomeNewProductMapper smsHomeNewProductMapper0 = mock(SmsHomeNewProductMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      PrivateAccess.setVariable((Class<?>) SmsHomeNewProductServiceImpl.class, smsHomeNewProductServiceImpl0, "homeNewProductMapper", (Object) smsHomeNewProductMapper0);
      LinkedList<SmsHomeNewProduct> linkedList0 = new LinkedList<SmsHomeNewProduct>();
      //mock smsHomeNewProduct0
      SmsHomeNewProduct smsHomeNewProduct0 = mock(SmsHomeNewProduct.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      linkedList0.add(smsHomeNewProduct0);
      
      //Call method: create
      int int0 = smsHomeNewProductServiceImpl0.create(linkedList0);
      
      //Test Result Assert
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test_delete_1()  throws Throwable  {
      //caseID:c45f10bd759ef29c76dff15e2ff8fe87
      //CoveredLines: [19, 42, 43, 44]
      //Input_0_Long>: arrayList0
      //Assert: assertEquals(0, method_result);
      
      SmsHomeNewProductServiceImpl smsHomeNewProductServiceImpl0 = new SmsHomeNewProductServiceImpl();
      //mock smsHomeNewProductMapper0
      SmsHomeNewProductMapper smsHomeNewProductMapper0 = mock(SmsHomeNewProductMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      PrivateAccess.setVariable((Class<?>) SmsHomeNewProductServiceImpl.class, smsHomeNewProductServiceImpl0, "homeNewProductMapper", (Object) smsHomeNewProductMapper0);
      ArrayList<Long> arrayList0 = new ArrayList<Long>();
      
      //Call method: delete
      int int0 = smsHomeNewProductServiceImpl0.delete(arrayList0);
      
      //Test Result Assert
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test_list_2()  throws Throwable  {
      //caseID:f5d98aa243be8a5637064b671ce547eb
      //CoveredLines: [19, 58, 59, 60, 61, 62, 64, 67, 68]
      //Input_0_String: "com.macro.mall.service.impl.SmsHomeNewProductServiceImpl"
      //Input_1_Integer: null
      //Input_2_Integer: 0
      //Input_3_Integer: 0
      //Assert: assertTrue(method_result.isEmpty());
      
      SmsHomeNewProductServiceImpl smsHomeNewProductServiceImpl0 = new SmsHomeNewProductServiceImpl();
      LinkedList<SmsHomeNewProduct> linkedList0 = new LinkedList<SmsHomeNewProduct>();
      //mock smsHomeNewProductMapper0
      SmsHomeNewProductMapper smsHomeNewProductMapper0 = mock(SmsHomeNewProductMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(linkedList0).when(smsHomeNewProductMapper0).selectByExample(any(com.macro.mall.model.SmsHomeNewProductExample.class));
      PrivateAccess.setVariable((Class<?>) SmsHomeNewProductServiceImpl.class, smsHomeNewProductServiceImpl0, "homeNewProductMapper", (Object) smsHomeNewProductMapper0);
      Integer integer0 = new Integer(0);
      
      //Call method: list
      List<SmsHomeNewProduct> list0 = smsHomeNewProductServiceImpl0.list("com.macro.mall.service.impl.SmsHomeNewProductServiceImpl", (Integer) null, integer0, integer0);
      
      //Test Result Assert
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test_list_3()  throws Throwable  {
      //caseID:e4c491c1971569917bdfacf8a76acf1b
      //CoveredLines: [19, 58, 59, 60, 61, 64, 65, 67, 68]
      //Input_0_String: ""
      //Input_1_Integer: (-1)
      //Input_2_Integer: (-1)
      //Input_3_Integer: (-1)
      //Assert: assertNull(method_result);
      
      SmsHomeNewProductServiceImpl smsHomeNewProductServiceImpl0 = new SmsHomeNewProductServiceImpl();
      //mock smsHomeNewProductMapper0
      SmsHomeNewProductMapper smsHomeNewProductMapper0 = mock(SmsHomeNewProductMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      PrivateAccess.setVariable((Class<?>) SmsHomeNewProductServiceImpl.class, smsHomeNewProductServiceImpl0, "homeNewProductMapper", (Object) smsHomeNewProductMapper0);
      Integer integer0 = new Integer((-1));
      
      //Call method: list
      List<SmsHomeNewProduct> list0 = smsHomeNewProductServiceImpl0.list("", integer0, integer0, integer0);
      
      //Test Result Assert
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test_list_4()  throws Throwable  {
      //caseID:90952f3cff94a1b035c303f2413719a2
      //CoveredLines: [19, 58, 59, 60, 61, 62, 64, 65, 67, 68]
      //Input_0_String: "1.0"
      //Input_1_Integer: (-1)
      //Input_2_Integer: (-1)
      //Input_3_Integer: (-1)
      //Assert: assertNull(method_result);
      
      SmsHomeNewProductServiceImpl smsHomeNewProductServiceImpl0 = new SmsHomeNewProductServiceImpl();
      //mock smsHomeNewProductMapper0
      SmsHomeNewProductMapper smsHomeNewProductMapper0 = mock(SmsHomeNewProductMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      PrivateAccess.setVariable((Class<?>) SmsHomeNewProductServiceImpl.class, smsHomeNewProductServiceImpl0, "homeNewProductMapper", (Object) smsHomeNewProductMapper0);
      Integer integer0 = new Integer((-1));
      
      //Call method: list
      List<SmsHomeNewProduct> list0 = smsHomeNewProductServiceImpl0.list("1.0", integer0, integer0, integer0);
      
      //Test Result Assert
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test_updateRecommendStatus_5()  throws Throwable  {
      //caseID:8fc40c204fc444b2bbcba0ea6e38ac81
      //CoveredLines: [19, 49, 50, 51, 52, 53]
      //Input_0_Long>: linkedList0
      //Input_1_Integer: 226
      //Assert: assertEquals(0, method_result);
      
      SmsHomeNewProductServiceImpl smsHomeNewProductServiceImpl0 = new SmsHomeNewProductServiceImpl();
      //mock smsHomeNewProductMapper0
      SmsHomeNewProductMapper smsHomeNewProductMapper0 = mock(SmsHomeNewProductMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      PrivateAccess.setVariable((Class<?>) SmsHomeNewProductServiceImpl.class, smsHomeNewProductServiceImpl0, "homeNewProductMapper", (Object) smsHomeNewProductMapper0);
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      Integer integer0 = new Integer(226);
      
      //Call method: updateRecommendStatus
      int int0 = smsHomeNewProductServiceImpl0.updateRecommendStatus(linkedList0, integer0);
      
      //Test Result Assert
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test_updateSort_6()  throws Throwable  {
      //caseID:2df9998250cc205a1738e48c7b3815b4
      //CoveredLines: [19, 34, 35, 36, 37]
      //Input_0_Long: 2881L
      //Input_1_Integer: (-1)
      //Assert: assertEquals(0, method_result);
      
      SmsHomeNewProductServiceImpl smsHomeNewProductServiceImpl0 = new SmsHomeNewProductServiceImpl();
      //mock smsHomeNewProductMapper0
      SmsHomeNewProductMapper smsHomeNewProductMapper0 = mock(SmsHomeNewProductMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      PrivateAccess.setVariable((Class<?>) SmsHomeNewProductServiceImpl.class, smsHomeNewProductServiceImpl0, "homeNewProductMapper", (Object) smsHomeNewProductMapper0);
      Long long0 = new Long(2881L);
      Integer integer0 = new Integer((-1));
      
      //Call method: updateSort
      int int0 = smsHomeNewProductServiceImpl0.updateSort(long0, integer0);
      
      //Test Result Assert
      assertEquals(0, int0);
  }
}
