/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.dto;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.macro.mall.dto.MinioUploadDto;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class MinioUploadDto_SSTest extends MinioUploadDto_SSTest_scaffolding {
// allCoveredLines:[11, 12, 15, 17]

  @Test(timeout = 4000)
  public void test_equals_0()  throws Throwable  {
      //caseID:f5d8b8697552f2aa43551dd7f873138d
      //CoveredLines: [11, 11, 11, 11, 12, 12, 12]
      //Input_0_Object: "1"
      //Assert: assertFalse(method_result);
      
      MinioUploadDto minioUploadDto0 = new MinioUploadDto();
      
      //Call method: equals
      boolean boolean0 = minioUploadDto0.equals("1");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_1()  throws Throwable  {
      //caseID:105ed6832e02619cdefaab11fcea8756
      //CoveredLines: [11, 11, 11, 11, 12, 12, 12]
      //Input_0_Object: minioUploadDto0
      //Assert: assertTrue(method_result);
      
      MinioUploadDto minioUploadDto0 = new MinioUploadDto();
      
      //Call method: equals
      boolean boolean0 = minioUploadDto0.equals(minioUploadDto0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_2()  throws Throwable  {
      //caseID:217678d78aab9d7745d0db2d59125fad
      //CoveredLines: [11, 11, 11, 11, 12, 12, 12, 15, 17]
      //Input_0_Object: minioUploadDto0
      //Assert: assertTrue(method_result);
      
      MinioUploadDto minioUploadDto0 = new MinioUploadDto();
      MinioUploadDto minioUploadDto1 = new MinioUploadDto();
      
      //Call method: equals
      boolean boolean0 = minioUploadDto1.equals(minioUploadDto0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_3()  throws Throwable  {
      //caseID:0001e5241a68495e4094c7a5550bda2d
      //CoveredLines: [11, 11, 11, 11, 12, 12, 12, 15, 17]
      //Input_0_Object: minioUploadDto1
      //Assert: assertTrue(method_result);
      
      MinioUploadDto minioUploadDto0 = new MinioUploadDto();
      MinioUploadDto minioUploadDto1 = new MinioUploadDto();
      
      //Call method: equals
      boolean boolean0 = minioUploadDto0.equals(minioUploadDto1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_hashCode_4()  throws Throwable  {
      //caseID:21d879fc136f0ba8e8b0dc681df3d0ee
      //CoveredLines: [11, 11, 11, 11, 12, 12, 12, 15, 17]
      
      MinioUploadDto minioUploadDto0 = new MinioUploadDto();
      
      //Call method: hashCode
      minioUploadDto0.hashCode();
  }

  @Test(timeout = 4000)
  public void test_setName_5()  throws Throwable  {
      //caseID:2e7dddf35a1be3263c8f6fd6b252a69e
      //CoveredLines: [11, 11, 11, 11]
      //Input_0_String: "43"
      
      MinioUploadDto minioUploadDto0 = new MinioUploadDto();
      
      //Call method: setName
      minioUploadDto0.setName("43");
      
      //Test Result Assert
      assertEquals("43", minioUploadDto0.getName());
  }

  @Test(timeout = 4000)
  public void test_setUrl_6()  throws Throwable  {
      //caseID:a00aa15ecd13f0ba116bd51362aa2336
      //CoveredLines: [11, 11, 11, 11]
      //Input_0_String: "com.macro.mall.dto.MinioUploadDto"
      
      MinioUploadDto minioUploadDto0 = new MinioUploadDto();
      
      //Call method: setUrl
      minioUploadDto0.setUrl("com.macro.mall.dto.MinioUploadDto");
      
      //Test Result Assert
      assertNull(minioUploadDto0.getName());
  }

  @Test(timeout = 4000)
  public void test_toString_7()  throws Throwable  {
      //caseID:95a43d331ae2d86812abed81354e94c2
      //CoveredLines: [11, 11, 11, 11, 15, 17]
      //Assert: assertEquals("MinioUploadDto(url=null, name=null)", method_result);
      
      MinioUploadDto minioUploadDto0 = new MinioUploadDto();
      
      //Call method: toString
      String string0 = minioUploadDto0.toString();
      
      //Test Result Assert
      assertEquals("MinioUploadDto(url=null, name=null)", string0);
  }
}
