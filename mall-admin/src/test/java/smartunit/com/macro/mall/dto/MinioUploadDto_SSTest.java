/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.dto;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.macro.mall.dto.MinioUploadDto;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class MinioUploadDto_SSTest extends MinioUploadDto_SSTest_scaffolding {
// allCoveredLines:[11, 12, 15, 17]

  @Test(timeout = 4000)
  public void test_equals_0()  throws Throwable  {
      //caseID:34076fea246f45699a612037cced6787
      //CoveredLines: [11, 11, 11, 11, 12, 12, 12]
      //Input_0_Object: )
      //Assert: assertFalse(method_result);
      
      MinioUploadDto minioUploadDto0 = new MinioUploadDto();
      
      //Call method: equals
      boolean boolean0 = minioUploadDto0.equals(")");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_1()  throws Throwable  {
      //caseID:7163530989456ab186e4244fb13d2cdb
      //CoveredLines: [11, 11, 11, 11, 12, 12, 12]
      //Input_0_Object: minioUploadDto0
      //Assert: assertTrue(method_result);
      
      MinioUploadDto minioUploadDto0 = new MinioUploadDto();
      
      //Call method: equals
      boolean boolean0 = minioUploadDto0.equals(minioUploadDto0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_2()  throws Throwable  {
      //caseID:5cb8b1681c0e3af1ef865222b8511ed4
      //CoveredLines: [11, 11, 11, 11, 12, 12, 12, 15, 17]
      //Input_0_Object: minioUploadDto0
      //Assert: assertTrue(method_result);
      
      MinioUploadDto minioUploadDto0 = new MinioUploadDto();
      MinioUploadDto minioUploadDto1 = new MinioUploadDto();
      
      //Call method: equals
      boolean boolean0 = minioUploadDto1.equals(minioUploadDto0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_3()  throws Throwable  {
      //caseID:a19ea6ad9e7b0e861af7d0958f9cc411
      //CoveredLines: [11, 11, 11, 11, 12, 12, 12, 15, 17]
      //Input_0_Object: minioUploadDto1
      //Assert: assertTrue(method_result);
      
      MinioUploadDto minioUploadDto0 = new MinioUploadDto();
      MinioUploadDto minioUploadDto1 = new MinioUploadDto();
      
      //Call method: equals
      boolean boolean0 = minioUploadDto0.equals(minioUploadDto1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_hashCode_4()  throws Throwable  {
      //caseID:97c01e5cd07116efe0c9da71a71b627a
      //CoveredLines: [11, 11, 11, 11, 12, 12, 12, 15, 17]
      
      MinioUploadDto minioUploadDto0 = new MinioUploadDto();
      
      //Call method: hashCode
      minioUploadDto0.hashCode();
  }

  @Test(timeout = 4000)
  public void test_setName_5()  throws Throwable  {
      //caseID:8756cfc69a9d887d57d5872765928894
      //CoveredLines: [11, 11, 11, 11]
      //Input_0_String: MinioUploadDto(url=
      
      MinioUploadDto minioUploadDto0 = new MinioUploadDto();
      
      //Call method: setName
      minioUploadDto0.setName("MinioUploadDto(url=");
      
      //Test Result Assert
      assertEquals("MinioUploadDto(url=", minioUploadDto0.getName());
  }

  @Test(timeout = 4000)
  public void test_setUrl_6()  throws Throwable  {
      //caseID:ea7ddcf39967207e2cea2843d84a7b39
      //CoveredLines: [11, 11, 11, 11]
      //Input_0_String: 
      
      MinioUploadDto minioUploadDto0 = new MinioUploadDto();
      
      //Call method: setUrl
      minioUploadDto0.setUrl("");
      
      //Test Result Assert
      assertEquals("", minioUploadDto0.getUrl());
  }

  @Test(timeout = 4000)
  public void test_toString_7()  throws Throwable  {
      //caseID:09a17305f1767b8ad9715c2c721ffea2
      //CoveredLines: [11, 11, 11, 11, 15, 17]
      //Assert: assertEquals("MinioUploadDto(url=null, name=null)", method_result);
      
      MinioUploadDto minioUploadDto0 = new MinioUploadDto();
      
      //Call method: toString
      String string0 = minioUploadDto0.toString();
      
      //Test Result Assert
      assertEquals("MinioUploadDto(url=null, name=null)", string0);
  }
}
