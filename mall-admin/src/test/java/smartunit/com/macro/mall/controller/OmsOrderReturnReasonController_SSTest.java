/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.controller;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.macro.mall.common.api.CommonPage;
import com.macro.mall.common.api.CommonResult;
import com.macro.mall.controller.OmsOrderReturnReasonController;
import com.macro.mall.model.OmsOrderReturnReason;
import com.macro.mall.service.OmsOrderReturnReasonService;
import java.util.LinkedList;
import java.util.Stack;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class OmsOrderReturnReasonController_SSTest extends OmsOrderReturnReasonController_SSTest_scaffolding {
// allCoveredLines:[22, 30, 31, 32, 34, 41, 42, 43, 45, 52, 53, 54, 56, 64, 65, 72, 73, 81, 82, 83, 85]

  @Test(timeout = 4000)
  public void test_create_0()  throws Throwable  {
      //caseID:386d4bbb88cecc6cffaddaeb3a960c71
      //CoveredLines: [22, 30, 31, 32]
      //Input_0_OmsOrderReturnReason: {}
      //Assert: assertEquals("\u64CD\u4F5C\u6210\u529F", method_result.getMessage());
      
      OmsOrderReturnReasonController omsOrderReturnReasonController0 = new OmsOrderReturnReasonController();
      //mock omsOrderReturnReasonService0
      OmsOrderReturnReasonService omsOrderReturnReasonService0 = mock(OmsOrderReturnReasonService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(612).when(omsOrderReturnReasonService0).create(any(com.macro.mall.model.OmsOrderReturnReason.class));
      PrivateAccess.setVariable((Class<?>) OmsOrderReturnReasonController.class, omsOrderReturnReasonController0, "orderReturnReasonService", (Object) omsOrderReturnReasonService0);
      //mock omsOrderReturnReason0
      OmsOrderReturnReason omsOrderReturnReason0 = mock(OmsOrderReturnReason.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: create
      CommonResult commonResult0 = omsOrderReturnReasonController0.create(omsOrderReturnReason0);
      
      //Test Result Assert
      assertEquals("\u64CD\u4F5C\u6210\u529F", commonResult0.getMessage());
  }

  @Test(timeout = 4000)
  public void test_create_1()  throws Throwable  {
      //caseID:85f460d68021e69c60cfe6cabad45846
      //CoveredLines: [22, 30, 31, 34]
      //Input_0_OmsOrderReturnReason: {}
      //Assert: assertEquals(500L, method_result.getCode());
      
      OmsOrderReturnReasonController omsOrderReturnReasonController0 = new OmsOrderReturnReasonController();
      //mock omsOrderReturnReasonService0
      OmsOrderReturnReasonService omsOrderReturnReasonService0 = mock(OmsOrderReturnReasonService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      PrivateAccess.setVariable((Class<?>) OmsOrderReturnReasonController.class, omsOrderReturnReasonController0, "orderReturnReasonService", (Object) omsOrderReturnReasonService0);
      //mock omsOrderReturnReason0
      OmsOrderReturnReason omsOrderReturnReason0 = mock(OmsOrderReturnReason.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: create
      CommonResult commonResult0 = omsOrderReturnReasonController0.create(omsOrderReturnReason0);
      
      //Test Result Assert
      assertEquals(500L, commonResult0.getCode());
  }

  @Test(timeout = 4000)
  public void test_delete_2()  throws Throwable  {
      //caseID:d8e0fbe4018c52ac76f0274813fcc81e
      //CoveredLines: [22, 52, 53, 56]
      //Input_0_Long>: linkedList0
      //Assert: assertEquals(500L, method_result.getCode());
      
      OmsOrderReturnReasonController omsOrderReturnReasonController0 = new OmsOrderReturnReasonController();
      //mock omsOrderReturnReasonService0
      OmsOrderReturnReasonService omsOrderReturnReasonService0 = mock(OmsOrderReturnReasonService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn((-1)).when(omsOrderReturnReasonService0).delete(ArgumentMatchers.<java.lang.Long>anyList());
      PrivateAccess.setVariable((Class<?>) OmsOrderReturnReasonController.class, omsOrderReturnReasonController0, "orderReturnReasonService", (Object) omsOrderReturnReasonService0);
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      
      //Call method: delete
      CommonResult commonResult0 = omsOrderReturnReasonController0.delete(linkedList0);
      
      //Test Result Assert
      assertEquals(500L, commonResult0.getCode());
  }

  @Test(timeout = 4000)
  public void test_delete_3()  throws Throwable  {
      //caseID:ef5192180aedb485d9ddb91b03c932ea
      //CoveredLines: [22, 52, 53, 54]
      //Input_0_Long>: linkedList0
      //Assert: assertEquals(200L, method_result.getCode());
      
      OmsOrderReturnReasonController omsOrderReturnReasonController0 = new OmsOrderReturnReasonController();
      //mock omsOrderReturnReasonService0
      OmsOrderReturnReasonService omsOrderReturnReasonService0 = mock(OmsOrderReturnReasonService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(409).when(omsOrderReturnReasonService0).delete(ArgumentMatchers.<java.lang.Long>anyList());
      PrivateAccess.setVariable((Class<?>) OmsOrderReturnReasonController.class, omsOrderReturnReasonController0, "orderReturnReasonService", (Object) omsOrderReturnReasonService0);
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      
      //Call method: delete
      CommonResult commonResult0 = omsOrderReturnReasonController0.delete(linkedList0);
      
      //Test Result Assert
      assertEquals(200L, commonResult0.getCode());
  }

  @Test(timeout = 4000)
  public void test_getItem_4()  throws Throwable  {
      //caseID:d04dab027b0748cca96769f2bb2c25bd
      //CoveredLines: [22, 72, 73]
      //Input_0_Long: (-1L)
      //Assert: assertEquals("\u64CD\u4F5C\u6210\u529F", method_result.getMessage());
      
      OmsOrderReturnReasonController omsOrderReturnReasonController0 = new OmsOrderReturnReasonController();
      //mock omsOrderReturnReasonService0
      OmsOrderReturnReasonService omsOrderReturnReasonService0 = mock(OmsOrderReturnReasonService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      PrivateAccess.setVariable((Class<?>) OmsOrderReturnReasonController.class, omsOrderReturnReasonController0, "orderReturnReasonService", (Object) omsOrderReturnReasonService0);
      Long long0 = new Long((-1L));
      
      //Call method: getItem
      CommonResult<OmsOrderReturnReason> commonResult0 = omsOrderReturnReasonController0.getItem(long0);
      
      //Test Result Assert
      assertEquals("\u64CD\u4F5C\u6210\u529F", commonResult0.getMessage());
  }

  @Test(timeout = 4000)
  public void test_list_5()  throws Throwable  {
      //caseID:581a9b863c7bc962cc69777a2f32c306
      //CoveredLines: [22, 64, 65]
      //Input_0_Integer: 55296
      //Input_1_Integer: 55296
      //Assert: assertEquals("\u64CD\u4F5C\u6210\u529F", method_result.getMessage());
      
      OmsOrderReturnReasonController omsOrderReturnReasonController0 = new OmsOrderReturnReasonController();
      LinkedList<OmsOrderReturnReason> linkedList0 = new LinkedList<OmsOrderReturnReason>();
      //mock omsOrderReturnReasonService0
      OmsOrderReturnReasonService omsOrderReturnReasonService0 = mock(OmsOrderReturnReasonService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(linkedList0).when(omsOrderReturnReasonService0).list(anyInt() , anyInt());
      PrivateAccess.setVariable((Class<?>) OmsOrderReturnReasonController.class, omsOrderReturnReasonController0, "orderReturnReasonService", (Object) omsOrderReturnReasonService0);
      Integer integer0 = new Integer(55296);
      
      //Call method: list
      CommonResult<CommonPage<OmsOrderReturnReason>> commonResult0 = omsOrderReturnReasonController0.list(integer0, integer0);
      
      //Test Result Assert
      assertEquals("\u64CD\u4F5C\u6210\u529F", commonResult0.getMessage());
  }

  @Test(timeout = 4000)
  public void test_update_6()  throws Throwable  {
      //caseID:27b45ea59dcd1bf3e20532cfc371bfae
      //CoveredLines: [22, 41, 42, 43]
      //Input_0_Long: 117
      //Input_1_OmsOrderReturnReason: {}
      //Assert: assertEquals("\u64CD\u4F5C\u6210\u529F", method_result.getMessage());
      
      OmsOrderReturnReasonController omsOrderReturnReasonController0 = new OmsOrderReturnReasonController();
      //mock omsOrderReturnReasonService0
      OmsOrderReturnReasonService omsOrderReturnReasonService0 = mock(OmsOrderReturnReasonService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(117).when(omsOrderReturnReasonService0).update(anyLong() , any(com.macro.mall.model.OmsOrderReturnReason.class));
      PrivateAccess.setVariable((Class<?>) OmsOrderReturnReasonController.class, omsOrderReturnReasonController0, "orderReturnReasonService", (Object) omsOrderReturnReasonService0);
      Long long0 = new Long(117);
      //mock omsOrderReturnReason0
      OmsOrderReturnReason omsOrderReturnReason0 = mock(OmsOrderReturnReason.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: update
      CommonResult commonResult0 = omsOrderReturnReasonController0.update(long0, omsOrderReturnReason0);
      
      //Test Result Assert
      assertEquals("\u64CD\u4F5C\u6210\u529F", commonResult0.getMessage());
  }

  @Test(timeout = 4000)
  public void test_update_7()  throws Throwable  {
      //caseID:0260c6756db0ffeabf67d17e94aa7594
      //CoveredLines: [22, 41, 42, 45]
      //Input_0_Long: 1L
      //Input_1_OmsOrderReturnReason: {}
      //Assert: assertEquals("\u64CD\u4F5C\u5931\u8D25", method_result.getMessage());
      
      OmsOrderReturnReasonController omsOrderReturnReasonController0 = new OmsOrderReturnReasonController();
      //mock omsOrderReturnReasonService0
      OmsOrderReturnReasonService omsOrderReturnReasonService0 = mock(OmsOrderReturnReasonService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      PrivateAccess.setVariable((Class<?>) OmsOrderReturnReasonController.class, omsOrderReturnReasonController0, "orderReturnReasonService", (Object) omsOrderReturnReasonService0);
      Long long0 = new Long(1L);
      //mock omsOrderReturnReason0
      OmsOrderReturnReason omsOrderReturnReason0 = mock(OmsOrderReturnReason.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: update
      CommonResult commonResult0 = omsOrderReturnReasonController0.update(long0, omsOrderReturnReason0);
      
      //Test Result Assert
      assertEquals("\u64CD\u4F5C\u5931\u8D25", commonResult0.getMessage());
  }

  @Test(timeout = 4000)
  public void test_updateStatus_8()  throws Throwable  {
      //caseID:157917a6a33f2b36922d936a630d4a85
      //CoveredLines: [22, 81, 82, 85]
      //Input_0_Integer: (-1)
      //Input_1_Long>: stack0
      //Assert: assertEquals(500L, method_result.getCode());
      
      OmsOrderReturnReasonController omsOrderReturnReasonController0 = new OmsOrderReturnReasonController();
      //mock omsOrderReturnReasonService0
      OmsOrderReturnReasonService omsOrderReturnReasonService0 = mock(OmsOrderReturnReasonService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn((-1)).when(omsOrderReturnReasonService0).updateStatus(ArgumentMatchers.<java.lang.Long>anyList() , anyInt());
      PrivateAccess.setVariable((Class<?>) OmsOrderReturnReasonController.class, omsOrderReturnReasonController0, "orderReturnReasonService", (Object) omsOrderReturnReasonService0);
      Integer integer0 = new Integer((-1));
      Stack<Long> stack0 = new Stack<Long>();
      
      //Call method: updateStatus
      CommonResult commonResult0 = omsOrderReturnReasonController0.updateStatus(integer0, stack0);
      
      //Test Result Assert
      assertEquals(500L, commonResult0.getCode());
  }

  @Test(timeout = 4000)
  public void test_updateStatus_9()  throws Throwable  {
      //caseID:7989734a2864ab88a3ada3d7e7e1b973
      //CoveredLines: [22, 81, 82, 83]
      //Input_0_Integer: 609
      //Input_1_Long>: stack0
      //Assert: assertEquals(200L, method_result.getCode());
      
      OmsOrderReturnReasonController omsOrderReturnReasonController0 = new OmsOrderReturnReasonController();
      //mock omsOrderReturnReasonService0
      OmsOrderReturnReasonService omsOrderReturnReasonService0 = mock(OmsOrderReturnReasonService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(609).when(omsOrderReturnReasonService0).updateStatus(ArgumentMatchers.<java.lang.Long>anyList() , anyInt());
      PrivateAccess.setVariable((Class<?>) OmsOrderReturnReasonController.class, omsOrderReturnReasonController0, "orderReturnReasonService", (Object) omsOrderReturnReasonService0);
      Integer integer0 = new Integer(609);
      Stack<Long> stack0 = new Stack<Long>();
      
      //Call method: updateStatus
      CommonResult commonResult0 = omsOrderReturnReasonController0.updateStatus(integer0, stack0);
      
      //Test Result Assert
      assertEquals(200L, commonResult0.getCode());
  }
}
