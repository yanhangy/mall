/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.controller;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.macro.mall.common.api.CommonPage;
import com.macro.mall.common.api.CommonResult;
import com.macro.mall.controller.OmsOrderReturnReasonController;
import com.macro.mall.model.OmsOrderReturnReason;
import com.macro.mall.service.OmsOrderReturnReasonService;
import java.util.LinkedList;
import java.util.List;
import java.util.Vector;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class OmsOrderReturnReasonController_SSTest extends OmsOrderReturnReasonController_SSTest_scaffolding {
// allCoveredLines:[22, 30, 31, 32, 34, 41, 42, 43, 45, 52, 53, 54, 56, 64, 65, 72, 73, 81, 82, 83, 85]

  @Test(timeout = 4000)
  public void test_create_0()  throws Throwable  {
      //caseID:cf3bc9242cae254c2d4a2d3b93ee81f9
      //CoveredLines: [22, 30, 31, 32]
      //Input_0_OmsOrderReturnReason: {}
      //Assert: assertEquals("\u64CD\u4F5C\u6210\u529F", method_result.getMessage());
      
      OmsOrderReturnReasonController omsOrderReturnReasonController0 = new OmsOrderReturnReasonController();
      //mock omsOrderReturnReasonService0
      OmsOrderReturnReasonService omsOrderReturnReasonService0 = mock(OmsOrderReturnReasonService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(1).when(omsOrderReturnReasonService0).create(any(com.macro.mall.model.OmsOrderReturnReason.class));
      
      PrivateAccess.setVariable((Class<?>) OmsOrderReturnReasonController.class, omsOrderReturnReasonController0, "orderReturnReasonService", (Object) omsOrderReturnReasonService0);
      //mock omsOrderReturnReason0
      OmsOrderReturnReason omsOrderReturnReason0 = mock(OmsOrderReturnReason.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: create
      CommonResult commonResult0 = omsOrderReturnReasonController0.create(omsOrderReturnReason0);
      
      //Test Result Assert
      assertEquals("\u64CD\u4F5C\u6210\u529F", commonResult0.getMessage());
  }

  @Test(timeout = 4000)
  public void test_create_1()  throws Throwable  {
      //caseID:485c2289b2090c3bac846e6d8f6613b0
      //CoveredLines: [22, 30, 31, 34]
      //Input_0_OmsOrderReturnReason: {}
      //Assert: assertEquals("\u64CD\u4F5C\u5931\u8D25", method_result.getMessage());
      
      OmsOrderReturnReasonController omsOrderReturnReasonController0 = new OmsOrderReturnReasonController();
      //mock omsOrderReturnReasonService0
      OmsOrderReturnReasonService omsOrderReturnReasonService0 = mock(OmsOrderReturnReasonService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      PrivateAccess.setVariable((Class<?>) OmsOrderReturnReasonController.class, omsOrderReturnReasonController0, "orderReturnReasonService", (Object) omsOrderReturnReasonService0);
      //mock omsOrderReturnReason0
      OmsOrderReturnReason omsOrderReturnReason0 = mock(OmsOrderReturnReason.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: create
      CommonResult commonResult0 = omsOrderReturnReasonController0.create(omsOrderReturnReason0);
      
      //Test Result Assert
      assertEquals("\u64CD\u4F5C\u5931\u8D25", commonResult0.getMessage());
  }

  @Test(timeout = 4000)
  public void test_delete_2()  throws Throwable  {
      //caseID:aca1832f6327a7450c572fc8cb721bdd
      //CoveredLines: [22, 52, 53, 54]
      //Input_0_List<Long>: vector0
      //Assert: assertEquals(200L, method_result.getCode());
      
      OmsOrderReturnReasonController omsOrderReturnReasonController0 = new OmsOrderReturnReasonController();
      //mock omsOrderReturnReasonService0
      OmsOrderReturnReasonService omsOrderReturnReasonService0 = mock(OmsOrderReturnReasonService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(507).when(omsOrderReturnReasonService0).delete(ArgumentMatchers.<java.lang.Long>anyList());
      
      PrivateAccess.setVariable((Class<?>) OmsOrderReturnReasonController.class, omsOrderReturnReasonController0, "orderReturnReasonService", (Object) omsOrderReturnReasonService0);
      Vector<Long> vector0 = new Vector<Long>();
      
      //Call method: delete
      CommonResult commonResult0 = omsOrderReturnReasonController0.delete(vector0);
      
      //Test Result Assert
      assertEquals(200L, commonResult0.getCode());
  }

  @Test(timeout = 4000)
  public void test_delete_3()  throws Throwable  {
      //caseID:8cdd61a18768c87ff91527b2511374cb
      //CoveredLines: [22, 52, 53, 56]
      //Input_0_List<Long>: vector0
      //Assert: assertEquals(500L, method_result.getCode());
      
      OmsOrderReturnReasonController omsOrderReturnReasonController0 = new OmsOrderReturnReasonController();
      //mock omsOrderReturnReasonService0
      OmsOrderReturnReasonService omsOrderReturnReasonService0 = mock(OmsOrderReturnReasonService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      PrivateAccess.setVariable((Class<?>) OmsOrderReturnReasonController.class, omsOrderReturnReasonController0, "orderReturnReasonService", (Object) omsOrderReturnReasonService0);
      Vector<Long> vector0 = new Vector<Long>();
      
      //Call method: delete
      CommonResult commonResult0 = omsOrderReturnReasonController0.delete(vector0);
      
      //Test Result Assert
      assertEquals(500L, commonResult0.getCode());
  }

  @Test(timeout = 4000)
  public void test_getItem_4()  throws Throwable  {
      //caseID:8ee393c96ac86e5d2e91e0a2a4a3875d
      //CoveredLines: [22, 72, 73]
      //Input_0_Long: 1L
      //Assert: assertEquals(200L, method_result.getCode());
      
      OmsOrderReturnReasonController omsOrderReturnReasonController0 = new OmsOrderReturnReasonController();
      //mock omsOrderReturnReasonService0
      OmsOrderReturnReasonService omsOrderReturnReasonService0 = mock(OmsOrderReturnReasonService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      PrivateAccess.setVariable((Class<?>) OmsOrderReturnReasonController.class, omsOrderReturnReasonController0, "orderReturnReasonService", (Object) omsOrderReturnReasonService0);
      Long long0 = new Long(1L);
      
      //Call method: getItem
      CommonResult<OmsOrderReturnReason> commonResult0 = omsOrderReturnReasonController0.getItem(long0);
      
      //Test Result Assert
      assertEquals(200L, commonResult0.getCode());
  }

  @Test(timeout = 4000)
  public void test_list_5()  throws Throwable  {
      //caseID:f45c88f8be142f35f1e79be3d95c68bc
      //CoveredLines: [22, 64, 65]
      //Input_0_Integer: 306654252
      //Input_1_Integer: 306654252
      //Assert: assertEquals(200L, method_result.getCode());
      
      OmsOrderReturnReasonController omsOrderReturnReasonController0 = new OmsOrderReturnReasonController();
      LinkedList<OmsOrderReturnReason> linkedList0 = new LinkedList<OmsOrderReturnReason>();
      //mock omsOrderReturnReasonService0
      OmsOrderReturnReasonService omsOrderReturnReasonService0 = mock(OmsOrderReturnReasonService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(linkedList0).when(omsOrderReturnReasonService0).list(anyInt() , anyInt());
      
      PrivateAccess.setVariable((Class<?>) OmsOrderReturnReasonController.class, omsOrderReturnReasonController0, "orderReturnReasonService", (Object) omsOrderReturnReasonService0);
      Integer integer0 = new Integer(306654252);
      
      //Call method: list
      CommonResult<CommonPage<OmsOrderReturnReason>> commonResult0 = omsOrderReturnReasonController0.list(integer0, integer0);
      
      //Test Result Assert
      assertEquals(200L, commonResult0.getCode());
  }

  @Test(timeout = 4000)
  public void test_update_6()  throws Throwable  {
      //caseID:67fba73a9f98d3df1211db927a18f9fc
      //CoveredLines: [22, 41, 42, 43]
      //Input_0_Long: 407
      //Input_1_OmsOrderReturnReason: {}
      //Assert: assertEquals("\u64CD\u4F5C\u6210\u529F", method_result.getMessage());
      
      OmsOrderReturnReasonController omsOrderReturnReasonController0 = new OmsOrderReturnReasonController();
      //mock omsOrderReturnReasonService0
      OmsOrderReturnReasonService omsOrderReturnReasonService0 = mock(OmsOrderReturnReasonService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(407).when(omsOrderReturnReasonService0).update(anyLong() , any(com.macro.mall.model.OmsOrderReturnReason.class));
      
      PrivateAccess.setVariable((Class<?>) OmsOrderReturnReasonController.class, omsOrderReturnReasonController0, "orderReturnReasonService", (Object) omsOrderReturnReasonService0);
      Long long0 = new Long(407);
      //mock omsOrderReturnReason0
      OmsOrderReturnReason omsOrderReturnReason0 = mock(OmsOrderReturnReason.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: update
      CommonResult commonResult0 = omsOrderReturnReasonController0.update(long0, omsOrderReturnReason0);
      
      //Test Result Assert
      assertEquals("\u64CD\u4F5C\u6210\u529F", commonResult0.getMessage());
  }

  @Test(timeout = 4000)
  public void test_update_7()  throws Throwable  {
      //caseID:c80200c8aee2ee167fe8f9779755fd78
      //CoveredLines: [22, 41, 42, 45]
      //Input_0_Long: 4477L
      //Input_1_OmsOrderReturnReason: {}
      //Assert: assertEquals(500L, method_result.getCode());
      
      OmsOrderReturnReasonController omsOrderReturnReasonController0 = new OmsOrderReturnReasonController();
      //mock omsOrderReturnReasonService0
      OmsOrderReturnReasonService omsOrderReturnReasonService0 = mock(OmsOrderReturnReasonService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      PrivateAccess.setVariable((Class<?>) OmsOrderReturnReasonController.class, omsOrderReturnReasonController0, "orderReturnReasonService", (Object) omsOrderReturnReasonService0);
      Long long0 = new Long(4477L);
      //mock omsOrderReturnReason0
      OmsOrderReturnReason omsOrderReturnReason0 = mock(OmsOrderReturnReason.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: update
      CommonResult commonResult0 = omsOrderReturnReasonController0.update(long0, omsOrderReturnReason0);
      
      //Test Result Assert
      assertEquals(500L, commonResult0.getCode());
  }

  @Test(timeout = 4000)
  public void test_updateStatus_8()  throws Throwable  {
      //caseID:aff4321718de8acb24b73db36e9981d2
      //CoveredLines: [22, 81, 82, 85]
      //Input_0_Integer: 0
      //Input_1_List<Long>: linkedList0
      //Assert: assertEquals(500L, method_result.getCode());
      
      OmsOrderReturnReasonController omsOrderReturnReasonController0 = new OmsOrderReturnReasonController();
      //mock omsOrderReturnReasonService0
      OmsOrderReturnReasonService omsOrderReturnReasonService0 = mock(OmsOrderReturnReasonService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(0).when(omsOrderReturnReasonService0).updateStatus(ArgumentMatchers.<java.lang.Long>anyList() , anyInt());
      
      PrivateAccess.setVariable((Class<?>) OmsOrderReturnReasonController.class, omsOrderReturnReasonController0, "orderReturnReasonService", (Object) omsOrderReturnReasonService0);
      Integer integer0 = new Integer(0);
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      
      //Call method: updateStatus
      CommonResult commonResult0 = omsOrderReturnReasonController0.updateStatus(integer0, linkedList0);
      
      //Test Result Assert
      assertEquals(500L, commonResult0.getCode());
  }

  @Test(timeout = 4000)
  public void test_updateStatus_9()  throws Throwable  {
      //caseID:3da67bc4f790b3752b1edb0421cd89e9
      //CoveredLines: [22, 81, 82, 83]
      //Input_0_Integer: 2165
      //Input_1_List<Long>: linkedList0
      //Assert: assertEquals("\u64CD\u4F5C\u6210\u529F", method_result.getMessage());
      
      OmsOrderReturnReasonController omsOrderReturnReasonController0 = new OmsOrderReturnReasonController();
      //mock omsOrderReturnReasonService0
      OmsOrderReturnReasonService omsOrderReturnReasonService0 = mock(OmsOrderReturnReasonService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(2165).when(omsOrderReturnReasonService0).updateStatus(ArgumentMatchers.<java.lang.Long>anyList() , anyInt());
      
      PrivateAccess.setVariable((Class<?>) OmsOrderReturnReasonController.class, omsOrderReturnReasonController0, "orderReturnReasonService", (Object) omsOrderReturnReasonService0);
      Integer integer0 = new Integer(2165);
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      
      //Call method: updateStatus
      CommonResult commonResult0 = omsOrderReturnReasonController0.updateStatus(integer0, linkedList0);
      
      //Test Result Assert
      assertEquals("\u64CD\u4F5C\u6210\u529F", commonResult0.getMessage());
  }
}
