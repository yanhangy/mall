/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.common.domain;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.macro.mall.common.domain.WebLog;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class WebLog_SSTest extends WebLog_SSTest_scaffolding {
// allCoveredLines:[10, 11, 16, 21, 26, 31, 36, 41, 46, 51, 56, 61, 66]

  @Test(timeout = 4000)
  public void test_equals_00()  throws Throwable  {
      //caseID:447925930437835dade19b77fb658d23
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11]
      //Input_0_Object: , basePath=
      //Assert: assertFalse(method_result);
      
      WebLog webLog0 = new WebLog();
      
      //Call method: equals
      boolean boolean0 = webLog0.equals(", basePath=");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_01()  throws Throwable  {
      //caseID:a449ffcfba118348d386afface6d7049
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11]
      //Input_0_Object: webLog0
      //Assert: assertTrue(method_result);
      
      WebLog webLog0 = new WebLog();
      
      //Call method: equals
      boolean boolean0 = webLog0.equals(webLog0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_02()  throws Throwable  {
      //caseID:f7b089682910f29f7c086af7aa6796f2
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 16, 21, 26, 31, 36, 41, 46, 51, 56, 61, 66]
      //Input_0_Object: webLog1
      //Assert: assertTrue(method_result);
      
      WebLog webLog0 = new WebLog();
      WebLog webLog1 = new WebLog();
      
      //Call method: equals
      boolean boolean0 = webLog0.equals(webLog1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_hashCode_03()  throws Throwable  {
      //caseID:33b4867b62af39df7edaa01f331e8773
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 16, 21, 26, 31, 36, 41, 46, 51, 56, 61, 66]
      
      WebLog webLog0 = new WebLog();
      
      //Call method: hashCode
      webLog0.hashCode();
  }

  @Test(timeout = 4000)
  public void test_setBasePath_04()  throws Throwable  {
      //caseID:a3f7d4330b303cf3ffd74bd0227e64ef
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_String: , username=
      
      WebLog webLog0 = new WebLog();
      
      //Call method: setBasePath
      webLog0.setBasePath(", username=");
      
      //Test Result Assert
      assertNull(webLog0.getUrl());
  }

  @Test(timeout = 4000)
  public void test_setDescription_05()  throws Throwable  {
      //caseID:a62bbe4a63e8908b1e74601bc045d30b
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_String: )
      
      WebLog webLog0 = new WebLog();
      
      //Call method: setDescription
      webLog0.setDescription(")");
      
      //Test Result Assert
      assertNull(webLog0.getUsername());
  }

  @Test(timeout = 4000)
  public void test_setIp_06()  throws Throwable  {
      //caseID:e52ca867d63830b3e5f8ed143e8098ef
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_String: 43
      
      WebLog webLog0 = new WebLog();
      
      //Call method: setIp
      webLog0.setIp("43");
      
      //Test Result Assert
      assertNull(webLog0.getUrl());
  }

  @Test(timeout = 4000)
  public void test_setMethod_07()  throws Throwable  {
      //caseID:ba5f101593a1d4c12f89715a7236c6d7
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_String: 0
      
      WebLog webLog0 = new WebLog();
      
      //Call method: setMethod
      webLog0.setMethod("0");
      
      //Test Result Assert
      assertNull(webLog0.getSpendTime());
  }

  @Test(timeout = 4000)
  public void test_setParameter_08()  throws Throwable  {
      //caseID:ae03630df262ec1b9eac080a3aa261cb
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_Object: webLog0
      
      WebLog webLog0 = new WebLog();
      
      //Call method: setParameter
      webLog0.setParameter(webLog0);
      
      //Test Result Assert
      assertNull(webLog0.getDescription());
  }

  @Test(timeout = 4000)
  public void test_setResult_09()  throws Throwable  {
      //caseID:b03452b725bb33bbfcebdad324e7e8a6
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_Object: 163L
      
      WebLog webLog0 = new WebLog();
      Long long0 = new Long(163L);
      
      //Call method: setResult
      webLog0.setResult(long0);
      
      //Test Result Assert
      assertNull(webLog0.getUsername());
  }

  @Test(timeout = 4000)
  public void test_setSpendTime_10()  throws Throwable  {
      //caseID:c08a1812bd0fe1f3e89241d6478ceda9
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_Integer: 59
      
      WebLog webLog0 = new WebLog();
      Integer integer0 = new Integer(59);
      
      //Call method: setSpendTime
      webLog0.setSpendTime(integer0);
      
      //Test Result Assert
      assertNull(webLog0.getUri());
  }

  @Test(timeout = 4000)
  public void test_setStartTime_11()  throws Throwable  {
      //caseID:ae71f1d9b64157272b5cd25ee0042af2
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_Long: 900L
      
      WebLog webLog0 = new WebLog();
      Long long0 = new Long(900L);
      
      //Call method: setStartTime
      webLog0.setStartTime(long0);
      
      //Test Result Assert
      assertNull(webLog0.getUsername());
  }

  @Test(timeout = 4000)
  public void test_setUri_12()  throws Throwable  {
      //caseID:ae1f12a6b446dea96632aebba55a0ef8
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_String: 1.0
      
      WebLog webLog0 = new WebLog();
      
      //Call method: setUri
      webLog0.setUri("1.0");
      
      //Test Result Assert
      assertNull(webLog0.getBasePath());
  }

  @Test(timeout = 4000)
  public void test_setUrl_13()  throws Throwable  {
      //caseID:75ccbf0e1ab7eaeb64b70aa66149efd1
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_String: , spendTime=
      
      WebLog webLog0 = new WebLog();
      
      //Call method: setUrl
      webLog0.setUrl(", spendTime=");
      
      //Test Result Assert
      assertEquals(", spendTime=", webLog0.getUrl());
  }

  @Test(timeout = 4000)
  public void test_setUsername_14()  throws Throwable  {
      //caseID:5a43d0940d0aba316a17ed919abf5b14
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_String: com.macro.mall.common.domain.WebLog
      
      WebLog webLog0 = new WebLog();
      
      //Call method: setUsername
      webLog0.setUsername("com.macro.mall.common.domain.WebLog");
      
      //Test Result Assert
      assertNull(webLog0.getUri());
  }

  @Test(timeout = 4000)
  public void test_toString_15()  throws Throwable  {
      //caseID:9f01f3da617512b5f259fc1834d47328
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 16, 21, 26, 31, 36, 41, 46, 51, 56, 61, 66]
      //Assert: assertEquals("WebLog(description=null, username=null, startTime=null, spendTime=null, basePath=null, uri=null, url=null, method=null, ip=null, parameter=null, result=null)", method_result);
      
      WebLog webLog0 = new WebLog();
      
      //Call method: toString
      String string0 = webLog0.toString();
      
      //Test Result Assert
      assertEquals("WebLog(description=null, username=null, startTime=null, spendTime=null, basePath=null, uri=null, url=null, method=null, ip=null, parameter=null, result=null)", string0);
  }
}
