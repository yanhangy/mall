/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.common.domain;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.macro.mall.common.domain.WebLog;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class WebLog_SSTest extends WebLog_SSTest_scaffolding {
// allCoveredLines:[10, 11, 16, 21, 26, 31, 36, 41, 46, 51, 56, 61, 66]

  @Test(timeout = 4000)
  public void test_equals_00()  throws Throwable  {
      //caseID:ce1cb73ebfffe3b8f3d3b528b77b780f
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11]
      //Input_0_Object: 43
      //Assert: assertFalse(method_result);
      
      WebLog webLog0 = new WebLog();
      Integer integer0 = new Integer(43);
      
      //Call method: equals
      boolean boolean0 = webLog0.equals(integer0);
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_01()  throws Throwable  {
      //caseID:f69584374ba14dcecb35df7718b8adee
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11]
      //Input_0_Object: webLog0
      //Assert: assertTrue(method_result);
      
      WebLog webLog0 = new WebLog();
      
      //Call method: equals
      boolean boolean0 = webLog0.equals(webLog0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_02()  throws Throwable  {
      //caseID:69f956000354d90391edd01abe8aa219
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 16, 21, 26, 31, 36, 41, 46, 51, 56, 61, 66]
      //Input_0_Object: webLog1
      //Assert: assertTrue(method_result);
      
      WebLog webLog0 = new WebLog();
      WebLog webLog1 = new WebLog();
      
      //Call method: equals
      boolean boolean0 = webLog0.equals(webLog1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_03()  throws Throwable  {
      //caseID:ad55ee5c170c4e6e04bdd4f5f05c852a
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 16, 21, 26, 31, 36, 41, 46, 51, 56, 61, 66]
      //Input_0_Object: webLog0
      //Assert: assertTrue(method_result);
      
      WebLog webLog0 = new WebLog();
      WebLog webLog1 = new WebLog();
      
      //Call method: equals
      boolean boolean0 = webLog1.equals(webLog0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_hashCode_04()  throws Throwable  {
      //caseID:9d1222e82bbb6ae8960d9a7f83707a55
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 16, 21, 26, 31, 36, 41, 46, 51, 56, 61, 66]
      
      WebLog webLog0 = new WebLog();
      
      //Call method: hashCode
      webLog0.hashCode();
  }

  @Test(timeout = 4000)
  public void test_setBasePath_05()  throws Throwable  {
      //caseID:4db08bc358b465a5176786556f19e7a3
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_String: 1
      
      WebLog webLog0 = new WebLog();
      
      //Call method: setBasePath
      webLog0.setBasePath("1");
      
      //Test Result Assert
      assertNull(webLog0.getUri());
  }

  @Test(timeout = 4000)
  public void test_setDescription_06()  throws Throwable  {
      //caseID:f6c04f949bf5f0a5e527b392f53ca696
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_String: , startTime=
      
      WebLog webLog0 = new WebLog();
      
      //Call method: setDescription
      webLog0.setDescription(", startTime=");
      
      //Test Result Assert
      assertNull(webLog0.getBasePath());
  }

  @Test(timeout = 4000)
  public void test_setIp_07()  throws Throwable  {
      //caseID:0fb007ef4e5202bb5904c09549efee71
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_String: , url=
      
      WebLog webLog0 = new WebLog();
      
      //Call method: setIp
      webLog0.setIp(", url=");
      
      //Test Result Assert
      assertNull(webLog0.getUsername());
  }

  @Test(timeout = 4000)
  public void test_setMethod_08()  throws Throwable  {
      //caseID:09bbd2da628c52784d940fcaafe4c96d
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_String: )
      
      WebLog webLog0 = new WebLog();
      
      //Call method: setMethod
      webLog0.setMethod(")");
      
      //Test Result Assert
      assertNull(webLog0.getBasePath());
  }

  @Test(timeout = 4000)
  public void test_setParameter_09()  throws Throwable  {
      //caseID:b37b7a885e32d52205e8875ec5bdea51
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_Object: object0
      
      WebLog webLog0 = new WebLog();
      Object object0 = new Object();
      
      //Call method: setParameter
      webLog0.setParameter(object0);
      
      //Test Result Assert
      assertNull(webLog0.getIp());
  }

  @Test(timeout = 4000)
  public void test_setResult_10()  throws Throwable  {
      //caseID:69811b289daa9c02a493220844644624
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_Object: 0
      
      WebLog webLog0 = new WebLog();
      Integer integer0 = new Integer(0);
      
      //Call method: setResult
      webLog0.setResult(integer0);
      
      //Test Result Assert
      assertNull(webLog0.getBasePath());
  }

  @Test(timeout = 4000)
  public void test_setSpendTime_11()  throws Throwable  {
      //caseID:f4de81932b8d5e0f2983fdc9093e2f58
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_Integer: 0
      
      WebLog webLog0 = new WebLog();
      Integer integer0 = new Integer(0);
      
      //Call method: setSpendTime
      webLog0.setSpendTime(integer0);
      
      //Test Result Assert
      assertEquals(0, (int)webLog0.getSpendTime());
  }

  @Test(timeout = 4000)
  public void test_setStartTime_12()  throws Throwable  {
      //caseID:7f51d678cabf90f5132ed60b30912f13
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_Long: 0L
      
      WebLog webLog0 = new WebLog();
      Long long0 = new Long(0L);
      
      //Call method: setStartTime
      webLog0.setStartTime(long0);
      
      //Test Result Assert
      assertNull(webLog0.getDescription());
  }

  @Test(timeout = 4000)
  public void test_setUri_13()  throws Throwable  {
      //caseID:310d83ee9d1b9e20c20382f09a7db7a6
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_String: )
      
      WebLog webLog0 = new WebLog();
      
      //Call method: setUri
      webLog0.setUri(")");
      
      //Test Result Assert
      assertNull(webLog0.getUrl());
  }

  @Test(timeout = 4000)
  public void test_setUrl_14()  throws Throwable  {
      //caseID:98e67ce7b6d4b65803c641f55112ec98
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_String: 
      
      WebLog webLog0 = new WebLog();
      
      //Call method: setUrl
      webLog0.setUrl("");
      
      //Test Result Assert
      assertNull(webLog0.getUsername());
  }

  @Test(timeout = 4000)
  public void test_setUsername_15()  throws Throwable  {
      //caseID:a27cd78b0fddeed269490eb10659c49f
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_String: 1
      
      WebLog webLog0 = new WebLog();
      
      //Call method: setUsername
      webLog0.setUsername("1");
      
      //Test Result Assert
      assertNull(webLog0.getMethod());
  }

  @Test(timeout = 4000)
  public void test_toString_16()  throws Throwable  {
      //caseID:23e6a586084c77354ccef26c3ed367a3
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 16, 21, 26, 31, 36, 41, 46, 51, 56, 61, 66]
      //Assert: assertEquals("WebLog(description=null, username=null, startTime=null, spendTime=null, basePath=null, uri=null, url=null, method=null, ip=null, parameter=null, result=null)", method_result);
      
      WebLog webLog0 = new WebLog();
      
      //Call method: toString
      String string0 = webLog0.toString();
      
      //Test Result Assert
      assertEquals("WebLog(description=null, username=null, startTime=null, spendTime=null, basePath=null, uri=null, url=null, method=null, ip=null, parameter=null, result=null)", string0);
  }
}
