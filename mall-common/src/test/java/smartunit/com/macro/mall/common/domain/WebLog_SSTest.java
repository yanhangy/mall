/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.common.domain;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.macro.mall.common.domain.WebLog;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class WebLog_SSTest extends WebLog_SSTest_scaffolding {
// allCoveredLines:[10, 11, 16, 21, 26, 31, 36, 41, 46, 51, 56, 61, 66]

  @Test(timeout = 4000)
  public void test_equals_00()  throws Throwable  {
      //caseID:da8d9d042e70a8913806e92bff063e5f
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11]
      //Input_0_Object: webLog0
      //Assert: assertTrue(method_result);
      
      WebLog webLog0 = new WebLog();
      
      //Call method: equals
      boolean boolean0 = webLog0.equals(webLog0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_01()  throws Throwable  {
      //caseID:5a20cb63c7a613e8c4d3423011280b11
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11]
      //Input_0_Object: 43
      //Assert: assertFalse(method_result);
      
      WebLog webLog0 = new WebLog();
      
      //Call method: equals
      boolean boolean0 = webLog0.equals("43");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_02()  throws Throwable  {
      //caseID:8745597f97d2e97be0645fca365f0931
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 16, 21, 26, 31, 36, 41, 46, 51, 56, 61, 66]
      //Input_0_Object: webLog1
      //Assert: assertTrue(method_result);
      
      WebLog webLog0 = new WebLog();
      WebLog webLog1 = new WebLog();
      
      //Call method: equals
      boolean boolean0 = webLog0.equals(webLog1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_hashCode_03()  throws Throwable  {
      //caseID:5d83b54113a8c6872f14de6818f28325
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 16, 21, 26, 31, 36, 41, 46, 51, 56, 61, 66]
      
      WebLog webLog0 = new WebLog();
      
      //Call method: hashCode
      webLog0.hashCode();
  }

  @Test(timeout = 4000)
  public void test_setBasePath_04()  throws Throwable  {
      //caseID:52dc4c45505f7081c943ea458b1eeafa
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_String: , username=
      
      WebLog webLog0 = new WebLog();
      
      //Call method: setBasePath
      webLog0.setBasePath(", username=");
      
      //Test Result Assert
      assertNull(webLog0.getSpendTime());
  }

  @Test(timeout = 4000)
  public void test_setDescription_05()  throws Throwable  {
      //caseID:4bffce277fe724549a8dcec055742c02
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_String: u
      
      WebLog webLog0 = new WebLog();
      
      //Call method: setDescription
      webLog0.setDescription("u");
      
      //Test Result Assert
      assertNull(webLog0.getSpendTime());
  }

  @Test(timeout = 4000)
  public void test_setIp_06()  throws Throwable  {
      //caseID:086bcb01f6f4a2c10f0d509e8f1544d9
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_String: 1.0
      
      WebLog webLog0 = new WebLog();
      
      //Call method: setIp
      webLog0.setIp("1.0");
      
      //Test Result Assert
      assertNull(webLog0.getSpendTime());
  }

  @Test(timeout = 4000)
  public void test_setMethod_07()  throws Throwable  {
      //caseID:4cd7cce84d85e5f1a5013419021a7d31
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_String: sR%x=$N;T>&B|47
      
      WebLog webLog0 = new WebLog();
      
      //Call method: setMethod
      webLog0.setMethod("sR%x=$N;T>&B|47");
      
      //Test Result Assert
      assertNull(webLog0.getUsername());
  }

  @Test(timeout = 4000)
  public void test_setParameter_08()  throws Throwable  {
      //caseID:808285debb38481d3d44fe302a0303bf
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_Object: webLog0
      
      WebLog webLog0 = new WebLog();
      
      //Call method: setParameter
      webLog0.setParameter(webLog0);
      
      //Test Result Assert
      assertNull(webLog0.getSpendTime());
  }

  @Test(timeout = 4000)
  public void test_setResult_09()  throws Throwable  {
      //caseID:cde59b3a840c9acbb7f8893fd66ede21
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_Object: 1
      
      WebLog webLog0 = new WebLog();
      
      //Call method: setResult
      webLog0.setResult("1");
      
      //Test Result Assert
      assertNull(webLog0.getStartTime());
  }

  @Test(timeout = 4000)
  public void test_setSpendTime_10()  throws Throwable  {
      //caseID:9811115d9c386c86ad2ef10a6a0c2a6d
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_Integer: 1747
      
      WebLog webLog0 = new WebLog();
      Integer integer0 = new Integer(1747);
      
      //Call method: setSpendTime
      webLog0.setSpendTime(integer0);
      
      //Test Result Assert
      assertNull(webLog0.getUsername());
  }

  @Test(timeout = 4000)
  public void test_setStartTime_11()  throws Throwable  {
      //caseID:b89bd9644444e4bf4f7fe65b149e0529
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_Long: 590L
      
      WebLog webLog0 = new WebLog();
      Long long0 = new Long(590L);
      
      //Call method: setStartTime
      webLog0.setStartTime(long0);
      
      //Test Result Assert
      assertNull(webLog0.getIp());
  }

  @Test(timeout = 4000)
  public void test_setUri_12()  throws Throwable  {
      //caseID:8e1c06afa061f55c11455446265d69fa
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_String: , parameter=
      
      WebLog webLog0 = new WebLog();
      
      //Call method: setUri
      webLog0.setUri(", parameter=");
      
      //Test Result Assert
      assertNull(webLog0.getSpendTime());
  }

  @Test(timeout = 4000)
  public void test_setUrl_13()  throws Throwable  {
      //caseID:659e6e62a768748e4251474ad9631b3f
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_String: 0
      
      WebLog webLog0 = new WebLog();
      
      //Call method: setUrl
      webLog0.setUrl("0");
      
      //Test Result Assert
      assertNull(webLog0.getSpendTime());
  }

  @Test(timeout = 4000)
  public void test_setUsername_14()  throws Throwable  {
      //caseID:8b36605e04b14869a1edd848918e5ea8
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_String: , parameter=
      
      WebLog webLog0 = new WebLog();
      
      //Call method: setUsername
      webLog0.setUsername(", parameter=");
      
      //Test Result Assert
      assertNull(webLog0.getIp());
  }

  @Test(timeout = 4000)
  public void test_toString_15()  throws Throwable  {
      //caseID:4ec72c4ea0a7a9be9c32eeeb57f52c5f
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 16, 21, 26, 31, 36, 41, 46, 51, 56, 61, 66]
      //Assert: assertEquals("WebLog(description=null, username=null, startTime=null, spendTime=null, basePath=null, uri=null, url=null, method=null, ip=null, parameter=null, result=null)", method_result);
      
      WebLog webLog0 = new WebLog();
      
      //Call method: toString
      String string0 = webLog0.toString();
      
      //Test Result Assert
      assertEquals("WebLog(description=null, username=null, startTime=null, spendTime=null, basePath=null, uri=null, url=null, method=null, ip=null, parameter=null, result=null)", string0);
  }
}
