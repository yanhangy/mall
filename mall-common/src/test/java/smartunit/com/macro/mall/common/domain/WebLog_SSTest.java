/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.common.domain;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.macro.mall.common.domain.WebLog;
import org.junit.runner.RunWith;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class WebLog_SSTest extends WebLog_SSTest_scaffolding {
// allCoveredLines:[10, 11, 16, 21, 26, 31, 36, 41, 46, 51, 56, 61, 66]

  @Test(timeout = 4000)
  public void test_equals_00()  throws Throwable  {
      //caseID:c3b240fd09c068971f7f4323a4ac226a
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11]
      //Input_0_Object: webLog0
      //Assert: assertTrue(method_result);
      
      WebLog webLog0 = new WebLog();
      
      //Call method: equals
      boolean boolean0 = webLog0.equals(webLog0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_01()  throws Throwable  {
      //caseID:df6b035768fc42946e1699d889a8d1ad
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 61]
      //Input_0_Object: ", uri="
      //Assert: assertFalse(method_result);
      
      WebLog webLog0 = new WebLog();
      webLog0.getParameter();
      
      //Call method: equals
      boolean boolean0 = webLog0.equals(", uri=");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_02()  throws Throwable  {
      //caseID:061d9e8e54de38aace4c53d921d8c285
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 16, 21, 26, 31, 36, 41, 46, 51, 56, 61, 66]
      //Input_0_Object: webLog1
      //Assert: assertTrue(method_result);
      
      WebLog webLog0 = new WebLog();
      WebLog webLog1 = new WebLog();
      
      //Call method: equals
      boolean boolean0 = webLog0.equals(webLog1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_03()  throws Throwable  {
      //caseID:6453704d8941443de1697428cc96592f
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 16, 61]
      //Input_0_Object: webLog0
      //Assert: assertFalse(method_result);
      
      WebLog webLog0 = new WebLog();
      webLog0.getParameter();
      PrivateAccess.setVariable((Class<?>) WebLog.class, webLog0, "description", (Object) "WebLog(description=");
      WebLog webLog1 = new WebLog();
      
      //Call method: equals
      boolean boolean0 = webLog1.equals(webLog0);
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_04()  throws Throwable  {
      //caseID:7f4b2dec715195ef03cb1d93840b14c5
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 16, 66]
      //Input_0_Object: webLog1
      //Assert: assertFalse(method_result);
      
      WebLog webLog0 = new WebLog();
      webLog0.getResult();
      PrivateAccess.setVariable((Class<?>) WebLog.class, webLog0, "description", (Object) ", startTime=");
      WebLog webLog1 = new WebLog();
      
      //Call method: equals
      boolean boolean0 = webLog0.equals(webLog1);
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_05()  throws Throwable  {
      //caseID:b322b4e57f40731a4d70f73200a1d72e
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 16, 21, 26, 31, 36, 41, 46, 51, 56, 61, 66]
      //Input_0_Object: webLog0
      //Assert: assertTrue(method_result);
      
      WebLog webLog0 = new WebLog();
      WebLog webLog1 = new WebLog();
      
      //Call method: equals
      boolean boolean0 = webLog1.equals(webLog0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_getBasePath_06()  throws Throwable  {
      //caseID:96e89d4bc01ebfcfe54ce76dccd5e5c1
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 16, 21, 26, 31, 36, 41, 46, 51, 56, 61, 66]
      
      WebLog webLog0 = new WebLog();
      String string0 = webLog0.toString();
      
      //Test Result Assert
      assertEquals("WebLog(description=null, username=null, startTime=null, spendTime=null, basePath=null, uri=null, url=null, method=null, ip=null, parameter=null, result=null)", string0);
  }

  @Test(timeout = 4000)
  public void test_hashCode_07()  throws Throwable  {
      //caseID:dd9c550ee35d66c3d7a7b3d0e4fbe7a2
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 16, 21, 26, 31, 36, 41, 46, 51, 56, 61, 66]
      
      WebLog webLog0 = new WebLog();
      
      //Call method: hashCode
      webLog0.hashCode();
  }

  @Test(timeout = 4000)
  public void test_setBasePath_08()  throws Throwable  {
      //caseID:f6e8e3065442f599750be577af39ddb6
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_String: ", method="
      
      WebLog webLog0 = new WebLog();
      
      //Call method: setBasePath
      webLog0.setBasePath(", method=");
      
      //Test Result Assert
      assertNull(webLog0.getUrl());
  }

  @Test(timeout = 4000)
  public void test_setDescription_09()  throws Throwable  {
      //caseID:0cf8a92cd1c67fb754368352a2ec293b
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 66]
      //Input_0_String: ", spendTime="
      
      WebLog webLog0 = new WebLog();
      webLog0.getResult();
      
      //Call method: setDescription
      webLog0.setDescription(", spendTime=");
      
      //Test Result Assert
      assertEquals(", spendTime=", webLog0.getDescription());
  }

  @Test(timeout = 4000)
  public void test_setIp_10()  throws Throwable  {
      //caseID:2d566462a06299be735302353948b6af
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_String: "1.0"
      
      WebLog webLog0 = new WebLog();
      
      //Call method: setIp
      webLog0.setIp("1.0");
      
      //Test Result Assert
      assertNull(webLog0.getSpendTime());
  }

  @Test(timeout = 4000)
  public void test_setMethod_11()  throws Throwable  {
      //caseID:ee8401901cd2330f7c48492ac687de9b
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_String: "rZCb6_bH4"
      
      WebLog webLog0 = new WebLog();
      
      //Call method: setMethod
      webLog0.setMethod("rZCb6_bH4");
      
      //Test Result Assert
      assertNull(webLog0.getSpendTime());
  }

  @Test(timeout = 4000)
  public void test_setParameter_12()  throws Throwable  {
      //caseID:bae2a1ee44c629191ad8ef5f4c73ffaa
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 61]
      //Input_0_Object: 2168L
      
      WebLog webLog0 = new WebLog();
      Long long0 = new Long(2168L);
      webLog0.getParameter();
      
      //Call method: setParameter
      webLog0.setParameter(long0);
      
      //Test Result Assert
      assertNull(webLog0.getDescription());
  }

  @Test(timeout = 4000)
  public void test_setResult_13()  throws Throwable  {
      //caseID:b930be5f0d16eec4fd7f9b730d443a32
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 66]
      //Input_0_Object: 449
      
      WebLog webLog0 = new WebLog();
      Integer integer0 = new Integer(449);
      webLog0.getResult();
      
      //Call method: setResult
      webLog0.setResult(integer0);
      
      //Test Result Assert
      assertNull(webLog0.getStartTime());
  }

  @Test(timeout = 4000)
  public void test_setSpendTime_14()  throws Throwable  {
      //caseID:35be4d153452a2130631da3ad65a1dc8
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 66]
      //Input_0_Integer: 0
      
      WebLog webLog0 = new WebLog();
      Integer integer0 = new Integer(0);
      webLog0.getResult();
      
      //Call method: setSpendTime
      webLog0.setSpendTime(integer0);
      
      //Test Result Assert
      assertNull(webLog0.getUri());
  }

  @Test(timeout = 4000)
  public void test_setStartTime_15()  throws Throwable  {
      //caseID:f9c0a6db54051083c6d6aad43f1680e3
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_Long: 0L
      
      WebLog webLog0 = new WebLog();
      Long long0 = new Long(0L);
      
      //Call method: setStartTime
      webLog0.setStartTime(long0);
      
      //Test Result Assert
      assertNull(webLog0.getMethod());
  }

  @Test(timeout = 4000)
  public void test_setUri_16()  throws Throwable  {
      //caseID:57bfbe83412ee177aedb63db5ddcd929
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_String: "yHOTgc<(a=$I.('"
      
      WebLog webLog0 = new WebLog();
      
      //Call method: setUri
      webLog0.setUri("yHOTgc<(a=$I.('");
      
      //Test Result Assert
      assertEquals("yHOTgc<(a=$I.('", webLog0.getUri());
  }

  @Test(timeout = 4000)
  public void test_setUrl_17()  throws Throwable  {
      //caseID:b9056c03166404dcb4895aa728ec8967
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_String: "1.0"
      
      WebLog webLog0 = new WebLog();
      
      //Call method: setUrl
      webLog0.setUrl("1.0");
      
      //Test Result Assert
      assertNull(webLog0.getSpendTime());
  }

  @Test(timeout = 4000)
  public void test_setUsername_18()  throws Throwable  {
      //caseID:2d22c395cc5529023272a7ef60b7b8be
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_String: "1.0"
      
      WebLog webLog0 = new WebLog();
      
      //Call method: setUsername
      webLog0.setUsername("1.0");
      
      //Test Result Assert
      assertNull(webLog0.getBasePath());
  }
}
