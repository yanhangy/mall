/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.portal.controller;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.macro.mall.common.api.CommonResult;
import com.macro.mall.portal.controller.OmsPortalOrderReturnApplyController;
import com.macro.mall.portal.domain.OmsOrderReturnApplyParam;
import com.macro.mall.portal.service.OmsPortalOrderReturnApplyService;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class OmsPortalOrderReturnApplyController_SSTest extends OmsPortalOrderReturnApplyController_SSTest_scaffolding {
// allCoveredLines:[22, 30, 31, 32, 34]

  @Test(timeout = 4000)
  public void test_create_0()  throws Throwable  {
      //caseID:77b5ac9331728615238c9324f614f056
      //CoveredLines: [22, 30, 31, 32]
      //Input_0_OmsOrderReturnApplyParam: {}
      //Assert: assertEquals(200L, method_result.getCode());
      
      OmsPortalOrderReturnApplyController omsPortalOrderReturnApplyController0 = new OmsPortalOrderReturnApplyController();
      //mock omsPortalOrderReturnApplyService0
      OmsPortalOrderReturnApplyService omsPortalOrderReturnApplyService0 = mock(OmsPortalOrderReturnApplyService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(4).when(omsPortalOrderReturnApplyService0).create(any(com.macro.mall.portal.domain.OmsOrderReturnApplyParam.class));
      PrivateAccess.setVariable((Class<?>) OmsPortalOrderReturnApplyController.class, omsPortalOrderReturnApplyController0, "returnApplyService", (Object) omsPortalOrderReturnApplyService0);
      //mock omsOrderReturnApplyParam0
      OmsOrderReturnApplyParam omsOrderReturnApplyParam0 = mock(OmsOrderReturnApplyParam.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: create
      CommonResult commonResult0 = omsPortalOrderReturnApplyController0.create(omsOrderReturnApplyParam0);
      
      //Test Result Assert
      assertEquals(200L, commonResult0.getCode());
  }

  @Test(timeout = 4000)
  public void test_create_1()  throws Throwable  {
      //caseID:67885807ca273a43fe6a8ce2fad4abc2
      //CoveredLines: [22, 30, 31, 34]
      //Input_0_OmsOrderReturnApplyParam: {}
      //Assert: assertEquals("\u64CD\u4F5C\u5931\u8D25", method_result.getMessage());
      
      OmsPortalOrderReturnApplyController omsPortalOrderReturnApplyController0 = new OmsPortalOrderReturnApplyController();
      //mock omsPortalOrderReturnApplyService0
      OmsPortalOrderReturnApplyService omsPortalOrderReturnApplyService0 = mock(OmsPortalOrderReturnApplyService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      PrivateAccess.setVariable((Class<?>) OmsPortalOrderReturnApplyController.class, omsPortalOrderReturnApplyController0, "returnApplyService", (Object) omsPortalOrderReturnApplyService0);
      //mock omsOrderReturnApplyParam0
      OmsOrderReturnApplyParam omsOrderReturnApplyParam0 = mock(OmsOrderReturnApplyParam.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: create
      CommonResult commonResult0 = omsPortalOrderReturnApplyController0.create(omsOrderReturnApplyParam0);
      
      //Test Result Assert
      assertEquals("\u64CD\u4F5C\u5931\u8D25", commonResult0.getMessage());
  }
}
