/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.portal.util;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.macro.mall.portal.util.DateUtil;
import java.util.Date;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class DateUtil_SSTest extends DateUtil_SSTest_scaffolding {
// allCoveredLines:[10, 16, 17, 18, 19, 20, 21, 28, 29, 30, 31, 32, 33]

  @Test(timeout = 4000)
  public void test_getDate_0()  throws Throwable  {
      //caseID:468b05916c040dcecbd896b03aca4274
      //CoveredLines: [16, 17, 18, 19, 20, 21]
      //Input_0_Date: {}
      //Assert: assertEquals("Thu Jan 01 00:00:00 GMT 1970", method_result.toString());
      
      //mock date0
      Date date0 = mock(Date.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: getDate
      Date date1 = DateUtil.getDate(date0);
      
      //Test Result Assert
      assertEquals("Thu Jan 01 00:00:00 GMT 1970", date1.toString());
  }

  @Test(timeout = 4000)
  public void test_getTime_1()  throws Throwable  {
      //caseID:f94a212b5c7acc0de754d9d5237cca8f
      //CoveredLines: [10, 28, 29, 30, 31, 32, 33]
      //Input_0_Date: {}
      //Assert: assertTrue(method_result.equals((Object)date0));
      
      DateUtil dateUtil0 = new DateUtil();
      //mock date0
      Date date0 = mock(Date.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: getTime
      Date date1 = DateUtil.getTime(date0);
      
      //Test Result Assert
      assertTrue(date1.equals((Object)date0));
  }
}
