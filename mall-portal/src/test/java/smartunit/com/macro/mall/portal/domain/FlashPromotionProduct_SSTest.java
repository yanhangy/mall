/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.portal.domain;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.macro.mall.portal.domain.FlashPromotionProduct;
import java.math.BigDecimal;
import org.junit.runner.RunWith;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class FlashPromotionProduct_SSTest extends FlashPromotionProduct_SSTest_scaffolding {
// allCoveredLines:[14, 15, 16, 17, 18]

  @Test(timeout = 4000)
  public void test_getFlashPromotionCount_0()  throws Throwable  {
      //caseID:99863b1210e7b744788a9058bec18338
      //CoveredLines: [15, 17]
      //Assert: assertNull(method_result);
      
      FlashPromotionProduct flashPromotionProduct0 = new FlashPromotionProduct();
      
      //Call method: getFlashPromotionCount
      Integer integer0 = flashPromotionProduct0.getFlashPromotionCount();
      
      //Test Result Assert
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test_getFlashPromotionLimit_1()  throws Throwable  {
      //caseID:cccea73659af6581178be3a54ad75040
      //CoveredLines: [15, 18]
      //Assert: assertNull(method_result);
      
      FlashPromotionProduct flashPromotionProduct0 = new FlashPromotionProduct();
      
      //Call method: getFlashPromotionLimit
      Integer integer0 = flashPromotionProduct0.getFlashPromotionLimit();
      
      //Test Result Assert
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test_getFlashPromotionPrice_2()  throws Throwable  {
      //caseID:2c08e99d8eaace2754d367c19a561fc5
      //CoveredLines: [15, 16]
      //Assert: assertSame(method_result, bigDecimal0);
      
      FlashPromotionProduct flashPromotionProduct0 = new FlashPromotionProduct();
      BigDecimal bigDecimal0 = new BigDecimal(1770);
      
      PrivateAccess.setVariable((Class<?>) FlashPromotionProduct.class, flashPromotionProduct0, "flashPromotionPrice", (Object) bigDecimal0);
      
      //Call method: getFlashPromotionPrice
      BigDecimal bigDecimal1 = flashPromotionProduct0.getFlashPromotionPrice();
      
      //Test Result Assert
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test_setFlashPromotionCount_3()  throws Throwable  {
      //caseID:23a526f96a668210b11160cfc223492c
      //CoveredLines: [14, 14, 14, 15]
      //Input_0_Integer: 1
      
      FlashPromotionProduct flashPromotionProduct0 = new FlashPromotionProduct();
      Integer integer0 = new Integer(1);
      
      //Call method: setFlashPromotionCount
      flashPromotionProduct0.setFlashPromotionCount(integer0);
      
      //Test Result Assert
      assertNull(flashPromotionProduct0.getProductAttributeCategoryId());
  }

  @Test(timeout = 4000)
  public void test_setFlashPromotionLimit_4()  throws Throwable  {
      //caseID:b5bbbc0b027521c93030ae0d3d30cd02
      //CoveredLines: [14, 14, 14, 15]
      //Input_0_Integer: 625
      
      FlashPromotionProduct flashPromotionProduct0 = new FlashPromotionProduct();
      Integer integer0 = new Integer(625);
      
      //Call method: setFlashPromotionLimit
      flashPromotionProduct0.setFlashPromotionLimit(integer0);
      
      //Test Result Assert
      assertNull(flashPromotionProduct0.getLowStock());
  }

  @Test(timeout = 4000)
  public void test_setFlashPromotionPrice_5()  throws Throwable  {
      //caseID:216395526a9aa05cd732a04c634387d2
      //CoveredLines: [14, 14, 14, 15]
      //Input_0_BigDecimal: (-2)
      
      FlashPromotionProduct flashPromotionProduct0 = new FlashPromotionProduct();
      BigDecimal bigDecimal0 = new BigDecimal((-2));
      
      //Call method: setFlashPromotionPrice
      flashPromotionProduct0.setFlashPromotionPrice(bigDecimal0);
      
      //Test Result Assert
      assertNull(flashPromotionProduct0.getSubTitle());
  }
}
