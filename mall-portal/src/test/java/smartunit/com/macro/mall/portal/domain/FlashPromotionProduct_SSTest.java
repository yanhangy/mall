/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.portal.domain;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.macro.mall.portal.domain.FlashPromotionProduct;
import java.math.BigDecimal;
import org.junit.runner.RunWith;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class FlashPromotionProduct_SSTest extends FlashPromotionProduct_SSTest_scaffolding {
// allCoveredLines:[14, 15, 16, 17, 18]

  @Test(timeout = 4000)
  public void test_getFlashPromotionCount_0()  throws Throwable  {
      //caseID:d4b86a6091ebf70107e8b110afca514b
      //CoveredLines: [15, 17]
      //Assert: assertNull(method_result);
      
      FlashPromotionProduct flashPromotionProduct0 = new FlashPromotionProduct();
      
      //Call method: getFlashPromotionCount
      Integer integer0 = flashPromotionProduct0.getFlashPromotionCount();
      
      //Test Result Assert
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test_getFlashPromotionLimit_1()  throws Throwable  {
      //caseID:5ba93d2851051755ee5f4f7781b959f8
      //CoveredLines: [15, 18]
      //Assert: assertNull(method_result);
      
      FlashPromotionProduct flashPromotionProduct0 = new FlashPromotionProduct();
      
      //Call method: getFlashPromotionLimit
      Integer integer0 = flashPromotionProduct0.getFlashPromotionLimit();
      
      //Test Result Assert
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test_getFlashPromotionPrice_2()  throws Throwable  {
      //caseID:615fd40b9c3697d69b95302d3c8789f7
      //CoveredLines: [15, 16]
      //Assert: assertEquals((byte)0, method_result.byteValue());
      
      FlashPromotionProduct flashPromotionProduct0 = new FlashPromotionProduct();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      
      PrivateAccess.setVariable((Class<?>) FlashPromotionProduct.class, flashPromotionProduct0, "flashPromotionPrice", (Object) bigDecimal0);
      
      //Call method: getFlashPromotionPrice
      BigDecimal bigDecimal1 = flashPromotionProduct0.getFlashPromotionPrice();
      
      //Test Result Assert
      assertEquals((byte)0, bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test_setFlashPromotionCount_3()  throws Throwable  {
      //caseID:cb6485ac7d180feab3db810624f02760
      //CoveredLines: [14, 14, 14, 15]
      //Input_0_Integer: 476
      
      FlashPromotionProduct flashPromotionProduct0 = new FlashPromotionProduct();
      Integer integer0 = new Integer(476);
      
      //Call method: setFlashPromotionCount
      flashPromotionProduct0.setFlashPromotionCount(integer0);
      
      //Test Result Assert
      assertNull(flashPromotionProduct0.getName());
  }

  @Test(timeout = 4000)
  public void test_setFlashPromotionLimit_4()  throws Throwable  {
      //caseID:fd7485cd5c816952ff65db6686fd1885
      //CoveredLines: [14, 14, 14, 15]
      //Input_0_Integer: 0
      
      FlashPromotionProduct flashPromotionProduct0 = new FlashPromotionProduct();
      Integer integer0 = new Integer(0);
      
      //Call method: setFlashPromotionLimit
      flashPromotionProduct0.setFlashPromotionLimit(integer0);
      
      //Test Result Assert
      assertNull(flashPromotionProduct0.getPic());
  }

  @Test(timeout = 4000)
  public void test_setFlashPromotionPrice_5()  throws Throwable  {
      //caseID:3b7ccd6a61b74d4eb5e52532fdaf43e4
      //CoveredLines: [14, 14, 14, 15]
      //Input_0_BigDecimal: BigDecimal.TEN
      
      FlashPromotionProduct flashPromotionProduct0 = new FlashPromotionProduct();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      
      //Call method: setFlashPromotionPrice
      flashPromotionProduct0.setFlashPromotionPrice(bigDecimal0);
      
      //Test Result Assert
      assertNull(flashPromotionProduct0.getProductAttributeCategoryId());
  }
}
