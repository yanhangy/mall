/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.portal.domain;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.macro.mall.model.PmsProductAttribute;
import com.macro.mall.model.PmsSkuStock;
import com.macro.mall.portal.domain.CartProduct;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import org.junit.runner.RunWith;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class CartProduct_SSTest extends CartProduct_SSTest_scaffolding {
// allCoveredLines:[13, 18, 22, 23, 26, 30, 31]

  @Test(timeout = 4000)
  public void test_getProductAttributeList_0()  throws Throwable  {
      //caseID:8edf6eb782904faab13383c0b4182c65
      //CoveredLines: [13, 18]
      //Assert: assertEquals(0, method_result.size());
      
      CartProduct cartProduct0 = new CartProduct();
      Stack<PmsProductAttribute> stack0 = new Stack<PmsProductAttribute>();
      
      PrivateAccess.setVariable((Class<?>) CartProduct.class, cartProduct0, "productAttributeList", (Object) stack0);
      
      //Call method: getProductAttributeList
      List<PmsProductAttribute> list0 = cartProduct0.getProductAttributeList();
      
      //Test Result Assert
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test_getSkuStockList_1()  throws Throwable  {
      //caseID:09a15d146ce848af8b37771fa7a1938f
      //CoveredLines: [13, 26]
      //Assert: assertEquals(0, method_result.size());
      
      CartProduct cartProduct0 = new CartProduct();
      Vector<PmsSkuStock> vector0 = new Vector<PmsSkuStock>();
      
      PrivateAccess.setVariable((Class<?>) CartProduct.class, cartProduct0, "skuStockList", (Object) vector0);
      
      //Call method: getSkuStockList
      List<PmsSkuStock> list0 = cartProduct0.getSkuStockList();
      
      //Test Result Assert
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test_setProductAttributeList_2()  throws Throwable  {
      //caseID:c97edf4867ac9c6f2f8aaf12f89943a6
      //CoveredLines: [13, 22, 23]
      //Input_0_List<PmsProductAttribute>: linkedList0
      
      CartProduct cartProduct0 = new CartProduct();
      LinkedList<PmsProductAttribute> linkedList0 = new LinkedList<PmsProductAttribute>();
      
      //Call method: setProductAttributeList
      cartProduct0.setProductAttributeList(linkedList0);
      
      //Test Result Assert
      assertNull(cartProduct0.getDetailDesc());
  }

  @Test(timeout = 4000)
  public void test_setSkuStockList_3()  throws Throwable  {
      //caseID:640e66d2379924e5f4bfef41bae92e83
      //CoveredLines: [13, 30, 31]
      //Input_0_List<PmsSkuStock>: stack0
      
      CartProduct cartProduct0 = new CartProduct();
      Stack<PmsSkuStock> stack0 = new Stack<PmsSkuStock>();
      
      //Call method: setSkuStockList
      cartProduct0.setSkuStockList(stack0);
      
      //Test Result Assert
      assertNull(cartProduct0.getDetailHtml());
  }
}
