/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.portal.domain;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.macro.mall.model.PmsProductAttribute;
import com.macro.mall.model.PmsSkuStock;
import com.macro.mall.portal.domain.CartProduct;
import java.util.ArrayList;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import org.junit.runner.RunWith;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class CartProduct_SSTest extends CartProduct_SSTest_scaffolding {
// allCoveredLines:[13, 18, 22, 23, 26, 30, 31]

  @Test(timeout = 4000)
  public void test_getProductAttributeList_0()  throws Throwable  {
      //caseID:7ed19e4a2b2c6e4c6982b59cf90b2496
      //CoveredLines: [13, 18]
      //Assert: assertTrue(method_result.isEmpty());
      
      CartProduct cartProduct0 = new CartProduct();
      ArrayList<PmsProductAttribute> arrayList0 = new ArrayList<PmsProductAttribute>();
      
      PrivateAccess.setVariable((Class<?>) CartProduct.class, cartProduct0, "productAttributeList", (Object) arrayList0);
      
      //Call method: getProductAttributeList
      List<PmsProductAttribute> list0 = cartProduct0.getProductAttributeList();
      
      //Test Result Assert
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test_getSkuStockList_1()  throws Throwable  {
      //caseID:4c0a50c619f67219280c61f1499fe7c3
      //CoveredLines: [13, 26]
      //Assert: assertTrue(method_result.isEmpty());
      
      CartProduct cartProduct0 = new CartProduct();
      ArrayList<PmsSkuStock> arrayList0 = new ArrayList<PmsSkuStock>();
      
      PrivateAccess.setVariable((Class<?>) CartProduct.class, cartProduct0, "skuStockList", (Object) arrayList0);
      
      //Call method: getSkuStockList
      List<PmsSkuStock> list0 = cartProduct0.getSkuStockList();
      
      //Test Result Assert
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test_setProductAttributeList_2()  throws Throwable  {
      //caseID:6fd02c19034233bf8c46501ec7333863
      //CoveredLines: [13, 22, 23]
      //Input_0_List<PmsProductAttribute>: vector0
      
      CartProduct cartProduct0 = new CartProduct();
      Vector<PmsProductAttribute> vector0 = new Vector<PmsProductAttribute>();
      
      //Call method: setProductAttributeList
      cartProduct0.setProductAttributeList(vector0);
      
      //Test Result Assert
      assertEquals(0, vector0.size());
  }

  @Test(timeout = 4000)
  public void test_setSkuStockList_3()  throws Throwable  {
      //caseID:a24909f7972e30d7544e1be44834c364
      //CoveredLines: [13, 30, 31]
      //Input_0_List<PmsSkuStock>: stack0
      
      CartProduct cartProduct0 = new CartProduct();
      Stack<PmsSkuStock> stack0 = new Stack<PmsSkuStock>();
      
      //Call method: setSkuStockList
      cartProduct0.setSkuStockList(stack0);
      
      //Test Result Assert
      assertNull(cartProduct0.getUsePointLimit());
  }
}
