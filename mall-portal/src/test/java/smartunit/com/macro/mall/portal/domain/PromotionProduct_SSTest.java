/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.portal.domain;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.macro.mall.model.PmsProductFullReduction;
import com.macro.mall.model.PmsProductLadder;
import com.macro.mall.model.PmsSkuStock;
import com.macro.mall.portal.domain.PromotionProduct;
import java.util.ArrayList;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import org.junit.runner.RunWith;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class PromotionProduct_SSTest extends PromotionProduct_SSTest_scaffolding {
// allCoveredLines:[14, 23, 27, 28, 31, 35, 36, 39, 43, 44]

  @Test(timeout = 4000)
  public void test_getProductFullReductionList_0()  throws Throwable  {
      //caseID:da9df25a3748c2d1fa7a42ea58f0825d
      //CoveredLines: [14, 39]
      //Assert: assertTrue(method_result.isEmpty());
      
      PromotionProduct promotionProduct0 = new PromotionProduct();
      ArrayList<PmsProductFullReduction> arrayList0 = new ArrayList<PmsProductFullReduction>();
      PrivateAccess.setVariable((Class<?>) PromotionProduct.class, promotionProduct0, "productFullReductionList", (Object) arrayList0);
      
      //Call method: getProductFullReductionList
      List<PmsProductFullReduction> list0 = promotionProduct0.getProductFullReductionList();
      
      //Test Result Assert
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test_getProductLadderList_1()  throws Throwable  {
      //caseID:2db6f3d9aeca1241288b4bd929df1c1a
      //CoveredLines: [14, 31]
      //Assert: assertEquals(0, method_result.size());
      
      PromotionProduct promotionProduct0 = new PromotionProduct();
      Stack<PmsProductLadder> stack0 = new Stack<PmsProductLadder>();
      PrivateAccess.setVariable((Class<?>) PromotionProduct.class, promotionProduct0, "productLadderList", (Object) stack0);
      
      //Call method: getProductLadderList
      List<PmsProductLadder> list0 = promotionProduct0.getProductLadderList();
      
      //Test Result Assert
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test_getSkuStockList_2()  throws Throwable  {
      //caseID:606399af2ad7b8f8a030542f2494f6c7
      //CoveredLines: [14, 23]
      //Assert: assertEquals(0, method_result.size());
      
      PromotionProduct promotionProduct0 = new PromotionProduct();
      Vector<PmsSkuStock> vector0 = new Vector<PmsSkuStock>();
      PrivateAccess.setVariable((Class<?>) PromotionProduct.class, promotionProduct0, "skuStockList", (Object) vector0);
      
      //Call method: getSkuStockList
      List<PmsSkuStock> list0 = promotionProduct0.getSkuStockList();
      
      //Test Result Assert
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test_setProductFullReductionList_3()  throws Throwable  {
      //caseID:4d3219547f909edafd6a603697a93fe9
      //CoveredLines: [14, 43, 44]
      //Input_0_PmsProductFullReduction>: stack0
      
      PromotionProduct promotionProduct0 = new PromotionProduct();
      Stack<PmsProductFullReduction> stack0 = new Stack<PmsProductFullReduction>();
      
      //Call method: setProductFullReductionList
      promotionProduct0.setProductFullReductionList(stack0);
      
      //Test Result Assert
      assertNull(promotionProduct0.getUsePointLimit());
  }

  @Test(timeout = 4000)
  public void test_setProductLadderList_4()  throws Throwable  {
      //caseID:6ff18545e8e072c95a1858f67a3d7897
      //CoveredLines: [14, 35, 36]
      //Input_0_PmsProductLadder>: stack0
      
      PromotionProduct promotionProduct0 = new PromotionProduct();
      Stack<PmsProductLadder> stack0 = new Stack<PmsProductLadder>();
      
      //Call method: setProductLadderList
      promotionProduct0.setProductLadderList(stack0);
      
      //Test Result Assert
      assertNull(promotionProduct0.getPromotionPerLimit());
  }

  @Test(timeout = 4000)
  public void test_setSkuStockList_5()  throws Throwable  {
      //caseID:04f207e02c8292ccb2a13fe054fa8cc3
      //CoveredLines: [14, 27, 28]
      //Input_0_PmsSkuStock>: stack0
      
      PromotionProduct promotionProduct0 = new PromotionProduct();
      Stack<PmsSkuStock> stack0 = new Stack<PmsSkuStock>();
      
      //Call method: setSkuStockList
      promotionProduct0.setSkuStockList(stack0);
      
      //Test Result Assert
      assertNull(promotionProduct0.getName());
  }
}
