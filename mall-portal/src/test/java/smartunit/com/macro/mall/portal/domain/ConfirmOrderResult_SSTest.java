/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.portal.domain;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.macro.mall.model.UmsIntegrationConsumeSetting;
import com.macro.mall.model.UmsMemberReceiveAddress;
import com.macro.mall.portal.domain.CartPromotionItem;
import com.macro.mall.portal.domain.ConfirmOrderResult;
import com.macro.mall.portal.domain.SmsCouponHistoryDetail;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Vector;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class ConfirmOrderResult_SSTest extends ConfirmOrderResult_SSTest_scaffolding {
// allCoveredLines:[13, 28, 32, 33, 36, 40, 41, 44, 48, 49, 52, 56, 57, 60, 64, 65, 68, 72, 73]

  @Test(timeout = 4000)
  public void test_getCalcAmount_00()  throws Throwable  {
      //caseID:6774fad079eca1ee8bd8745006ed692a
      //CoveredLines: [13, 68]
      //Assert: assertNull(method_result);
      
      ConfirmOrderResult confirmOrderResult0 = new ConfirmOrderResult();
      
      //Call method: getCalcAmount
      ConfirmOrderResult.CalcAmount confirmOrderResult_CalcAmount0 = confirmOrderResult0.getCalcAmount();
      
      //Test Result Assert
      assertNull(confirmOrderResult_CalcAmount0);
  }

  @Test(timeout = 4000)
  public void test_getCartPromotionItemList_01()  throws Throwable  {
      //caseID:9588fcaa6482743a1e0d8f4d72b867a1
      //CoveredLines: [13, 28]
      //Assert: assertEquals(0, method_result.size());
      
      ConfirmOrderResult confirmOrderResult0 = new ConfirmOrderResult();
      ArrayList<CartPromotionItem> arrayList0 = new ArrayList<CartPromotionItem>();
      
      PrivateAccess.setVariable((Class<?>) ConfirmOrderResult.class, confirmOrderResult0, "cartPromotionItemList", (Object) arrayList0);
      
      //Call method: getCartPromotionItemList
      List<CartPromotionItem> list0 = confirmOrderResult0.getCartPromotionItemList();
      
      //Test Result Assert
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test_getCouponHistoryDetailList_02()  throws Throwable  {
      //caseID:8f35571e7d0d83735a44f8ac1e88fffa
      //CoveredLines: [13, 44]
      //Assert: assertNull(method_result);
      
      ConfirmOrderResult confirmOrderResult0 = new ConfirmOrderResult();
      
      //Call method: getCouponHistoryDetailList
      List<SmsCouponHistoryDetail> list0 = confirmOrderResult0.getCouponHistoryDetailList();
      
      //Test Result Assert
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test_getIntegrationConsumeSetting_03()  throws Throwable  {
      //caseID:52886c2c8421b8e300200b42242371ac
      //CoveredLines: [13, 52]
      //Assert: assertNull(method_result);
      
      ConfirmOrderResult confirmOrderResult0 = new ConfirmOrderResult();
      
      //Call method: getIntegrationConsumeSetting
      UmsIntegrationConsumeSetting umsIntegrationConsumeSetting0 = confirmOrderResult0.getIntegrationConsumeSetting();
      
      //Test Result Assert
      assertNull(umsIntegrationConsumeSetting0);
  }

  @Test(timeout = 4000)
  public void test_getMemberIntegration_04()  throws Throwable  {
      //caseID:e2d2812b90a14be3b4a021d351a1e624
      //CoveredLines: [13, 60]
      //Assert: assertNull(method_result);
      
      ConfirmOrderResult confirmOrderResult0 = new ConfirmOrderResult();
      
      //Call method: getMemberIntegration
      Integer integer0 = confirmOrderResult0.getMemberIntegration();
      
      //Test Result Assert
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test_getMemberReceiveAddressList_05()  throws Throwable  {
      //caseID:9aceac5823ceff46058ba5fe5e129576
      //CoveredLines: [13, 36]
      //Assert: assertTrue(method_result.isEmpty());
      
      ConfirmOrderResult confirmOrderResult0 = new ConfirmOrderResult();
      Vector<UmsMemberReceiveAddress> vector0 = new Vector<UmsMemberReceiveAddress>();
      
      PrivateAccess.setVariable((Class<?>) ConfirmOrderResult.class, confirmOrderResult0, "memberReceiveAddressList", (Object) vector0);
      
      //Call method: getMemberReceiveAddressList
      List<UmsMemberReceiveAddress> list0 = confirmOrderResult0.getMemberReceiveAddressList();
      
      //Test Result Assert
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test_setCalcAmount_06()  throws Throwable  {
      //caseID:e555afcad8835f214635f28c5df671cf
      //CoveredLines: [13, 72, 73]
      //Input_0_ConfirmOrderResult.CalcAmount: {}
      
      ConfirmOrderResult confirmOrderResult0 = new ConfirmOrderResult();
      //mock confirmOrderResult_CalcAmount0
      ConfirmOrderResult.CalcAmount confirmOrderResult_CalcAmount0 = mock(ConfirmOrderResult.CalcAmount.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: setCalcAmount
      confirmOrderResult0.setCalcAmount(confirmOrderResult_CalcAmount0);
      
      //Test Result Assert
      assertNull(confirmOrderResult0.getMemberIntegration());
  }

  @Test(timeout = 4000)
  public void test_setCartPromotionItemList_07()  throws Throwable  {
      //caseID:db8deb49e84d280e97eb847f2d031987
      //CoveredLines: [13, 32, 33]
      //Input_0_List<CartPromotionItem>: vector0
      
      ConfirmOrderResult confirmOrderResult0 = new ConfirmOrderResult();
      Vector<CartPromotionItem> vector0 = new Vector<CartPromotionItem>();
      
      //Call method: setCartPromotionItemList
      confirmOrderResult0.setCartPromotionItemList(vector0);
      
      //Test Result Assert
      assertEquals(0, vector0.size());
  }

  @Test(timeout = 4000)
  public void test_setCouponHistoryDetailList_08()  throws Throwable  {
      //caseID:fa2783c6d35b0041e4d5f692ee5f77e6
      //CoveredLines: [13, 48, 49]
      //Input_0_List<SmsCouponHistoryDetail>: linkedList0
      
      ConfirmOrderResult confirmOrderResult0 = new ConfirmOrderResult();
      LinkedList<SmsCouponHistoryDetail> linkedList0 = new LinkedList<SmsCouponHistoryDetail>();
      
      //Call method: setCouponHistoryDetailList
      confirmOrderResult0.setCouponHistoryDetailList(linkedList0);
      
      //Test Result Assert
      assertNull(confirmOrderResult0.getMemberIntegration());
  }

  @Test(timeout = 4000)
  public void test_setIntegrationConsumeSetting_09()  throws Throwable  {
      //caseID:47cd7ff6bab7315054791f809fd7d79f
      //CoveredLines: [13, 56, 57]
      //Input_0_UmsIntegrationConsumeSetting: {}
      
      ConfirmOrderResult confirmOrderResult0 = new ConfirmOrderResult();
      //mock umsIntegrationConsumeSetting0
      UmsIntegrationConsumeSetting umsIntegrationConsumeSetting0 = mock(UmsIntegrationConsumeSetting.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: setIntegrationConsumeSetting
      confirmOrderResult0.setIntegrationConsumeSetting(umsIntegrationConsumeSetting0);
      
      //Test Result Assert
      assertNull(confirmOrderResult0.getMemberIntegration());
  }

  @Test(timeout = 4000)
  public void test_setMemberIntegration_10()  throws Throwable  {
      //caseID:5b6e2e491ee0901de3a376aa51c5c165
      //CoveredLines: [13, 64, 65]
      //Input_0_Integer: 793
      
      ConfirmOrderResult confirmOrderResult0 = new ConfirmOrderResult();
      Integer integer0 = new Integer(793);
      
      //Call method: setMemberIntegration
      confirmOrderResult0.setMemberIntegration(integer0);
      
      //Test Result Assert
      assertEquals(793, (int)confirmOrderResult0.getMemberIntegration());
  }

  @Test(timeout = 4000)
  public void test_setMemberReceiveAddressList_11()  throws Throwable  {
      //caseID:17057f578b945cbbcefecb0510f11217
      //CoveredLines: [13, 40, 41]
      //Input_0_List<UmsMemberReceiveAddress>: linkedList0
      
      ConfirmOrderResult confirmOrderResult0 = new ConfirmOrderResult();
      LinkedList<UmsMemberReceiveAddress> linkedList0 = new LinkedList<UmsMemberReceiveAddress>();
      
      //Call method: setMemberReceiveAddressList
      confirmOrderResult0.setMemberReceiveAddressList(linkedList0);
      
      //Test Result Assert
      assertEquals(0, linkedList0.size());
  }
}
