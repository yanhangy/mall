/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.portal.domain;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.macro.mall.model.SmsCoupon;
import com.macro.mall.model.SmsCouponProductCategoryRelation;
import com.macro.mall.model.SmsCouponProductRelation;
import com.macro.mall.portal.domain.SmsCouponHistoryDetail;
import java.util.ArrayList;
import java.util.List;
import java.util.Stack;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class SmsCouponHistoryDetail_SSTest extends SmsCouponHistoryDetail_SSTest_scaffolding {
// allCoveredLines:[14, 23, 27, 28, 31, 35, 36, 39, 43, 44]

  @Test(timeout = 4000)
  public void test_getCategoryRelationList_0()  throws Throwable  {
      //caseID:a9f9a69d55e29f6309a1f4bc564897a4
      //CoveredLines: [14, 39]
      //Assert: assertNull(method_result);
      
      SmsCouponHistoryDetail smsCouponHistoryDetail0 = new SmsCouponHistoryDetail();
      
      //Call method: getCategoryRelationList
      List<SmsCouponProductCategoryRelation> list0 = smsCouponHistoryDetail0.getCategoryRelationList();
      
      //Test Result Assert
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test_getCoupon_1()  throws Throwable  {
      //caseID:a9645fcc616d7015e7d35b8bb0af580e
      //CoveredLines: [14, 23]
      //Assert: assertNull(method_result);
      
      SmsCouponHistoryDetail smsCouponHistoryDetail0 = new SmsCouponHistoryDetail();
      
      //Call method: getCoupon
      SmsCoupon smsCoupon0 = smsCouponHistoryDetail0.getCoupon();
      
      //Test Result Assert
      assertNull(smsCoupon0);
  }

  @Test(timeout = 4000)
  public void test_getProductRelationList_2()  throws Throwable  {
      //caseID:0e21e7dda5c96ce3f1a4ec3904627302
      //CoveredLines: [14, 31]
      //Assert: assertEquals(0, method_result.size());
      
      SmsCouponHistoryDetail smsCouponHistoryDetail0 = new SmsCouponHistoryDetail();
      ArrayList<SmsCouponProductRelation> arrayList0 = new ArrayList<SmsCouponProductRelation>();
      
      PrivateAccess.setVariable((Class<?>) SmsCouponHistoryDetail.class, smsCouponHistoryDetail0, "productRelationList", (Object) arrayList0);
      
      //Call method: getProductRelationList
      List<SmsCouponProductRelation> list0 = smsCouponHistoryDetail0.getProductRelationList();
      
      //Test Result Assert
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test_setCategoryRelationList_3()  throws Throwable  {
      //caseID:c799281f1ea13b0c9f11911904002bed
      //CoveredLines: [14, 43, 44]
      //Input_0_List<SmsCouponProductCategoryRelation>: stack0
      
      SmsCouponHistoryDetail smsCouponHistoryDetail0 = new SmsCouponHistoryDetail();
      Stack<SmsCouponProductCategoryRelation> stack0 = new Stack<SmsCouponProductCategoryRelation>();
      
      //Call method: setCategoryRelationList
      smsCouponHistoryDetail0.setCategoryRelationList(stack0);
      
      //Test Result Assert
      assertNull(smsCouponHistoryDetail0.getMemberId());
  }

  @Test(timeout = 4000)
  public void test_setCoupon_4()  throws Throwable  {
      //caseID:ec6ab2f47a9fb4e617ed036e970e0fb7
      //CoveredLines: [14, 27, 28]
      //Input_0_SmsCoupon: {}
      
      SmsCouponHistoryDetail smsCouponHistoryDetail0 = new SmsCouponHistoryDetail();
      //mock smsCoupon0
      SmsCoupon smsCoupon0 = mock(SmsCoupon.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: setCoupon
      smsCouponHistoryDetail0.setCoupon(smsCoupon0);
      
      //Test Result Assert
      assertNull(smsCouponHistoryDetail0.getUseStatus());
  }

  @Test(timeout = 4000)
  public void test_setProductRelationList_5()  throws Throwable  {
      //caseID:e9d0274a9c2873a71e91ba1d53098ab7
      //CoveredLines: [14, 35, 36]
      //Input_0_List<SmsCouponProductRelation>: stack0
      
      SmsCouponHistoryDetail smsCouponHistoryDetail0 = new SmsCouponHistoryDetail();
      Stack<SmsCouponProductRelation> stack0 = new Stack<SmsCouponProductRelation>();
      
      //Call method: setProductRelationList
      smsCouponHistoryDetail0.setProductRelationList(stack0);
      
      //Test Result Assert
      assertEquals("[]", stack0.toString());
  }
}
