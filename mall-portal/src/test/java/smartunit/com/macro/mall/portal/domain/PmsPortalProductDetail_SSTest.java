/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.portal.domain;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.macro.mall.model.PmsBrand;
import com.macro.mall.model.PmsProduct;
import com.macro.mall.model.PmsProductAttribute;
import com.macro.mall.model.PmsProductAttributeValue;
import com.macro.mall.model.PmsProductFullReduction;
import com.macro.mall.model.PmsProductLadder;
import com.macro.mall.model.PmsSkuStock;
import com.macro.mall.model.SmsCoupon;
import com.macro.mall.portal.domain.PmsPortalProductDetail;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class PmsPortalProductDetail_SSTest extends PmsPortalProductDetail_SSTest_scaffolding {
// allCoveredLines:[15, 16, 18, 20, 22, 24, 26, 28, 30, 32]

  @Test(timeout = 4000)
  public void test_getBrand_00()  throws Throwable  {
      //caseID:1c1bb667d9ee88022672dd7a1898f1d5
      //CoveredLines: [16, 20]
      //Assert: assertNull(method_result);
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      
      //Call method: getBrand
      PmsBrand pmsBrand0 = pmsPortalProductDetail0.getBrand();
      
      //Test Result Assert
      assertNull(pmsBrand0);
  }

  @Test(timeout = 4000)
  public void test_getCouponList_01()  throws Throwable  {
      //caseID:1521119d1a98d55f9f293f943834b734
      //CoveredLines: [16, 32]
      //Assert: assertEquals(0, method_result.size());
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      ArrayList<SmsCoupon> arrayList0 = new ArrayList<SmsCoupon>();
      
      PrivateAccess.setVariable((Class<?>) PmsPortalProductDetail.class, pmsPortalProductDetail0, "couponList", (Object) arrayList0);
      
      //Call method: getCouponList
      List<SmsCoupon> list0 = pmsPortalProductDetail0.getCouponList();
      
      //Test Result Assert
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test_getProduct_02()  throws Throwable  {
      //caseID:22d1e46e0e551aa8c117ad831445aa0b
      //CoveredLines: [16, 18]
      //Assert: assertNull(method_result);
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      
      //Call method: getProduct
      PmsProduct pmsProduct0 = pmsPortalProductDetail0.getProduct();
      
      //Test Result Assert
      assertNull(pmsProduct0);
  }

  @Test(timeout = 4000)
  public void test_getProductAttributeList_03()  throws Throwable  {
      //caseID:e06fa1d04d377ff01fa2a28a17801fbd
      //CoveredLines: [16, 22]
      //Assert: assertNull(method_result);
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      
      //Call method: getProductAttributeList
      List<PmsProductAttribute> list0 = pmsPortalProductDetail0.getProductAttributeList();
      
      //Test Result Assert
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test_getProductAttributeValueList_04()  throws Throwable  {
      //caseID:c7149551a31a8e5232a6327ac949b73b
      //CoveredLines: [16, 24]
      //Assert: assertEquals(0, method_result.size());
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      ArrayList<PmsProductAttributeValue> arrayList0 = new ArrayList<PmsProductAttributeValue>();
      
      PrivateAccess.setVariable((Class<?>) PmsPortalProductDetail.class, pmsPortalProductDetail0, "productAttributeValueList", (Object) arrayList0);
      
      //Call method: getProductAttributeValueList
      List<PmsProductAttributeValue> list0 = pmsPortalProductDetail0.getProductAttributeValueList();
      
      //Test Result Assert
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test_getProductFullReductionList_05()  throws Throwable  {
      //caseID:20200467ff0687efb02e7612a9dfce7c
      //CoveredLines: [16, 30]
      //Assert: assertTrue(method_result.isEmpty());
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      Vector<PmsProductFullReduction> vector0 = new Vector<PmsProductFullReduction>();
      
      PrivateAccess.setVariable((Class<?>) PmsPortalProductDetail.class, pmsPortalProductDetail0, "productFullReductionList", (Object) vector0);
      
      //Call method: getProductFullReductionList
      List<PmsProductFullReduction> list0 = pmsPortalProductDetail0.getProductFullReductionList();
      
      //Test Result Assert
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test_getProductLadderList_06()  throws Throwable  {
      //caseID:92536e0f1f4123497583a085b1371d6d
      //CoveredLines: [16, 28]
      //Assert: assertEquals(0, method_result.size());
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      Stack<PmsProductLadder> stack0 = new Stack<PmsProductLadder>();
      
      PrivateAccess.setVariable((Class<?>) PmsPortalProductDetail.class, pmsPortalProductDetail0, "productLadderList", (Object) stack0);
      
      //Call method: getProductLadderList
      List<PmsProductLadder> list0 = pmsPortalProductDetail0.getProductLadderList();
      
      //Test Result Assert
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test_getSkuStockList_07()  throws Throwable  {
      //caseID:defc9e57cf527ac219d282fb9f00ccea
      //CoveredLines: [16, 26]
      //Assert: assertEquals(0, method_result.size());
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      Vector<PmsSkuStock> vector0 = new Vector<PmsSkuStock>();
      
      PrivateAccess.setVariable((Class<?>) PmsPortalProductDetail.class, pmsPortalProductDetail0, "skuStockList", (Object) vector0);
      
      //Call method: getSkuStockList
      List<PmsSkuStock> list0 = pmsPortalProductDetail0.getSkuStockList();
      
      //Test Result Assert
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test_setBrand_08()  throws Throwable  {
      //caseID:bf0d17227a4558210046597cc8f431e8
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 15, 16]
      //Input_0_PmsBrand: {}
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      //mock pmsBrand0
      PmsBrand pmsBrand0 = mock(PmsBrand.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: setBrand
      pmsPortalProductDetail0.setBrand(pmsBrand0);
  }

  @Test(timeout = 4000)
  public void test_setCouponList_09()  throws Throwable  {
      //caseID:2183b288d1b43733c624b65d6998f9ec
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 15, 16]
      //Input_0_List<SmsCoupon>: stack0
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      Stack<SmsCoupon> stack0 = new Stack<SmsCoupon>();
      
      //Call method: setCouponList
      pmsPortalProductDetail0.setCouponList(stack0);
      
      //Test Result Assert
      assertEquals(10, stack0.capacity());
  }

  @Test(timeout = 4000)
  public void test_setProduct_10()  throws Throwable  {
      //caseID:3c1c49acd12d2ac1f5e6f7f11997b847
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 15, 16]
      //Input_0_PmsProduct: {}
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      //mock pmsProduct0
      PmsProduct pmsProduct0 = mock(PmsProduct.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: setProduct
      pmsPortalProductDetail0.setProduct(pmsProduct0);
  }

  @Test(timeout = 4000)
  public void test_setProductAttributeList_11()  throws Throwable  {
      //caseID:a23b9f20a3d3c8ddd0e7fb4fc9240a82
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 15, 16]
      //Input_0_List<PmsProductAttribute>: linkedList0
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      LinkedList<PmsProductAttribute> linkedList0 = new LinkedList<PmsProductAttribute>();
      
      //Call method: setProductAttributeList
      pmsPortalProductDetail0.setProductAttributeList(linkedList0);
      
      //Test Result Assert
      assertEquals(0, linkedList0.size());
  }

  @Test(timeout = 4000)
  public void test_setProductAttributeValueList_12()  throws Throwable  {
      //caseID:260fa45283478b622a1628af0b42767d
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 15, 16]
      //Input_0_List<PmsProductAttributeValue>: stack0
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      Stack<PmsProductAttributeValue> stack0 = new Stack<PmsProductAttributeValue>();
      
      //Call method: setProductAttributeValueList
      pmsPortalProductDetail0.setProductAttributeValueList(stack0);
      
      //Test Result Assert
      assertEquals("[]", stack0.toString());
  }

  @Test(timeout = 4000)
  public void test_setProductFullReductionList_13()  throws Throwable  {
      //caseID:d7f525ad43e2e4c59da5abc662e51d18
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 15, 16]
      //Input_0_List<PmsProductFullReduction>: linkedList0
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      LinkedList<PmsProductFullReduction> linkedList0 = new LinkedList<PmsProductFullReduction>();
      
      //Call method: setProductFullReductionList
      pmsPortalProductDetail0.setProductFullReductionList(linkedList0);
      
      //Test Result Assert
      assertEquals(0, linkedList0.size());
  }

  @Test(timeout = 4000)
  public void test_setProductLadderList_14()  throws Throwable  {
      //caseID:a92309c4753bfb3e3f5de9c1a797e163
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 15, 16]
      //Input_0_List<PmsProductLadder>: arrayList0
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      ArrayList<PmsProductLadder> arrayList0 = new ArrayList<PmsProductLadder>();
      
      //Call method: setProductLadderList
      pmsPortalProductDetail0.setProductLadderList(arrayList0);
      
      //Test Result Assert
      assertEquals(0, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test_setSkuStockList_15()  throws Throwable  {
      //caseID:c52982a33286fec4a524ec6a21b61ba4
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 15, 16]
      //Input_0_List<PmsSkuStock>: arrayList0
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      ArrayList<PmsSkuStock> arrayList0 = new ArrayList<PmsSkuStock>();
      
      //Call method: setSkuStockList
      pmsPortalProductDetail0.setSkuStockList(arrayList0);
      
      //Test Result Assert
      assertTrue(arrayList0.isEmpty());
  }
}
