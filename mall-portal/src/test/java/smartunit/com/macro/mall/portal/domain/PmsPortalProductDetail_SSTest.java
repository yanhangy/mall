/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.portal.domain;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.macro.mall.model.PmsBrand;
import com.macro.mall.model.PmsProduct;
import com.macro.mall.model.PmsProductAttribute;
import com.macro.mall.model.PmsProductAttributeValue;
import com.macro.mall.model.PmsProductFullReduction;
import com.macro.mall.model.PmsProductLadder;
import com.macro.mall.model.PmsSkuStock;
import com.macro.mall.model.SmsCoupon;
import com.macro.mall.portal.domain.PmsPortalProductDetail;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class PmsPortalProductDetail_SSTest extends PmsPortalProductDetail_SSTest_scaffolding {
// allCoveredLines:[15, 16, 18, 20, 22, 24, 26, 28, 30, 32]

  @Test(timeout = 4000)
  public void test_getBrand_00()  throws Throwable  {
      //caseID:8621c85de4551233de33b5493f1862e9
      //CoveredLines: [16, 20]
      //Assert: assertNull(method_result);
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      
      //Call method: getBrand
      PmsBrand pmsBrand0 = pmsPortalProductDetail0.getBrand();
      
      //Test Result Assert
      assertNull(pmsBrand0);
  }

  @Test(timeout = 4000)
  public void test_getCouponList_01()  throws Throwable  {
      //caseID:6f777ca4cb018eb4a1c0ea7e10b99cfc
      //CoveredLines: [16, 32]
      //Assert: assertNull(method_result);
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      
      //Call method: getCouponList
      List<SmsCoupon> list0 = pmsPortalProductDetail0.getCouponList();
      
      //Test Result Assert
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test_getProduct_02()  throws Throwable  {
      //caseID:6399f644a298ad649282d9ac8a7fc7e3
      //CoveredLines: [16, 18]
      //Assert: assertNull(method_result);
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      
      //Call method: getProduct
      PmsProduct pmsProduct0 = pmsPortalProductDetail0.getProduct();
      
      //Test Result Assert
      assertNull(pmsProduct0);
  }

  @Test(timeout = 4000)
  public void test_getProductAttributeList_03()  throws Throwable  {
      //caseID:f5f380b6579e6b4d9b3e025448299152
      //CoveredLines: [16, 22]
      //Assert: assertNull(method_result);
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      
      //Call method: getProductAttributeList
      List<PmsProductAttribute> list0 = pmsPortalProductDetail0.getProductAttributeList();
      
      //Test Result Assert
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test_getProductAttributeValueList_04()  throws Throwable  {
      //caseID:39fd59698b2cc9a7fe5dc92cface50d2
      //CoveredLines: [16, 24]
      //Assert: assertEquals(0, method_result.size());
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      Stack<PmsProductAttributeValue> stack0 = new Stack<PmsProductAttributeValue>();
      
      PrivateAccess.setVariable((Class<?>) PmsPortalProductDetail.class, pmsPortalProductDetail0, "productAttributeValueList", (Object) stack0);
      
      //Call method: getProductAttributeValueList
      List<PmsProductAttributeValue> list0 = pmsPortalProductDetail0.getProductAttributeValueList();
      
      //Test Result Assert
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test_getProductFullReductionList_05()  throws Throwable  {
      //caseID:6a26ecb1f79419ba2f642e0a01f41509
      //CoveredLines: [16, 30]
      //Assert: assertEquals(0, method_result.size());
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      ArrayList<PmsProductFullReduction> arrayList0 = new ArrayList<PmsProductFullReduction>();
      
      PrivateAccess.setVariable((Class<?>) PmsPortalProductDetail.class, pmsPortalProductDetail0, "productFullReductionList", (Object) arrayList0);
      
      //Call method: getProductFullReductionList
      List<PmsProductFullReduction> list0 = pmsPortalProductDetail0.getProductFullReductionList();
      
      //Test Result Assert
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test_getProductLadderList_06()  throws Throwable  {
      //caseID:09022738d71f96be3f2919fdb2496f68
      //CoveredLines: [16, 28]
      //Assert: assertEquals(0, method_result.size());
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      ArrayList<PmsProductLadder> arrayList0 = new ArrayList<PmsProductLadder>();
      
      PrivateAccess.setVariable((Class<?>) PmsPortalProductDetail.class, pmsPortalProductDetail0, "productLadderList", (Object) arrayList0);
      
      //Call method: getProductLadderList
      List<PmsProductLadder> list0 = pmsPortalProductDetail0.getProductLadderList();
      
      //Test Result Assert
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test_getSkuStockList_07()  throws Throwable  {
      //caseID:3b27fecc0183d910aea059432698f024
      //CoveredLines: [16, 26]
      //Assert: assertTrue(method_result.isEmpty());
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      ArrayList<PmsSkuStock> arrayList0 = new ArrayList<PmsSkuStock>();
      
      PrivateAccess.setVariable((Class<?>) PmsPortalProductDetail.class, pmsPortalProductDetail0, "skuStockList", (Object) arrayList0);
      
      //Call method: getSkuStockList
      List<PmsSkuStock> list0 = pmsPortalProductDetail0.getSkuStockList();
      
      //Test Result Assert
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test_setBrand_08()  throws Throwable  {
      //caseID:1bafe8cdcd7d2eac235eec299d67276f
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 15, 16]
      //Input_0_PmsBrand: {}
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      //mock pmsBrand0
      PmsBrand pmsBrand0 = mock(PmsBrand.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: setBrand
      pmsPortalProductDetail0.setBrand(pmsBrand0);
  }

  @Test(timeout = 4000)
  public void test_setCouponList_09()  throws Throwable  {
      //caseID:92c2b65daefb5e7f0ec6976293765b6e
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 15, 16]
      //Input_0_List<SmsCoupon>: arrayList0
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      ArrayList<SmsCoupon> arrayList0 = new ArrayList<SmsCoupon>();
      
      //Call method: setCouponList
      pmsPortalProductDetail0.setCouponList(arrayList0);
      
      //Test Result Assert
      assertTrue(arrayList0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test_setProduct_10()  throws Throwable  {
      //caseID:5cf9feec3ee40e921e796c6055ec1393
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 15, 16]
      //Input_0_PmsProduct: {}
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      //mock pmsProduct0
      PmsProduct pmsProduct0 = mock(PmsProduct.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: setProduct
      pmsPortalProductDetail0.setProduct(pmsProduct0);
  }

  @Test(timeout = 4000)
  public void test_setProductAttributeList_11()  throws Throwable  {
      //caseID:638cf35209763531ab500201e1424791
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 15, 16]
      //Input_0_List<PmsProductAttribute>: linkedList0
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      LinkedList<PmsProductAttribute> linkedList0 = new LinkedList<PmsProductAttribute>();
      
      //Call method: setProductAttributeList
      pmsPortalProductDetail0.setProductAttributeList(linkedList0);
      
      //Test Result Assert
      assertEquals(0, linkedList0.size());
  }

  @Test(timeout = 4000)
  public void test_setProductAttributeValueList_12()  throws Throwable  {
      //caseID:37dcae20f1ec0d1b2b05593d4aa83ffa
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 15, 16]
      //Input_0_List<PmsProductAttributeValue>: arrayList0
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      ArrayList<PmsProductAttributeValue> arrayList0 = new ArrayList<PmsProductAttributeValue>();
      
      //Call method: setProductAttributeValueList
      pmsPortalProductDetail0.setProductAttributeValueList(arrayList0);
      
      //Test Result Assert
      assertEquals(0, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test_setProductFullReductionList_13()  throws Throwable  {
      //caseID:4743a6495fdb2e8bd5f68157b8d6d4e2
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 15, 16]
      //Input_0_List<PmsProductFullReduction>: arrayList0
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      ArrayList<PmsProductFullReduction> arrayList0 = new ArrayList<PmsProductFullReduction>();
      
      //Call method: setProductFullReductionList
      pmsPortalProductDetail0.setProductFullReductionList(arrayList0);
      
      //Test Result Assert
      assertTrue(arrayList0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test_setProductLadderList_14()  throws Throwable  {
      //caseID:cf4b9be72123cfd657dedfe13d8c8a7e
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 15, 16]
      //Input_0_List<PmsProductLadder>: arrayList0
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      ArrayList<PmsProductLadder> arrayList0 = new ArrayList<PmsProductLadder>();
      
      //Call method: setProductLadderList
      pmsPortalProductDetail0.setProductLadderList(arrayList0);
      
      //Test Result Assert
      assertEquals(0, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test_setSkuStockList_15()  throws Throwable  {
      //caseID:f65ec9b9f5fd20627a827b8d3eafe913
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 15, 16]
      //Input_0_List<PmsSkuStock>: stack0
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      Stack<PmsSkuStock> stack0 = new Stack<PmsSkuStock>();
      
      //Call method: setSkuStockList
      pmsPortalProductDetail0.setSkuStockList(stack0);
      
      //Test Result Assert
      assertEquals(0, stack0.size());
  }
}
