/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.portal.domain;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.macro.mall.model.PmsBrand;
import com.macro.mall.model.PmsProduct;
import com.macro.mall.model.PmsProductAttribute;
import com.macro.mall.model.PmsProductAttributeValue;
import com.macro.mall.model.PmsProductFullReduction;
import com.macro.mall.model.PmsProductLadder;
import com.macro.mall.model.PmsSkuStock;
import com.macro.mall.model.SmsCoupon;
import com.macro.mall.portal.domain.PmsPortalProductDetail;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class PmsPortalProductDetail_SSTest extends PmsPortalProductDetail_SSTest_scaffolding {
// allCoveredLines:[15, 16, 18, 20, 22, 24, 26, 28, 30, 32]

  @Test(timeout = 4000)
  public void test_getBrand_00()  throws Throwable  {
      //caseID:c9c694f9362cf7e7db63077ca5d8b784
      //CoveredLines: [16, 20]
      //Assert: assertNull(method_result);
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      
      //Call method: getBrand
      PmsBrand pmsBrand0 = pmsPortalProductDetail0.getBrand();
      
      //Test Result Assert
      assertNull(pmsBrand0);
  }

  @Test(timeout = 4000)
  public void test_getCouponList_01()  throws Throwable  {
      //caseID:b7bc41e620291d945d31b12636fb2739
      //CoveredLines: [16, 32]
      //Assert: assertTrue(method_result.isEmpty());
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      Stack<SmsCoupon> stack0 = new Stack<SmsCoupon>();
      
      PrivateAccess.setVariable((Class<?>) PmsPortalProductDetail.class, pmsPortalProductDetail0, "couponList", (Object) stack0);
      
      //Call method: getCouponList
      List<SmsCoupon> list0 = pmsPortalProductDetail0.getCouponList();
      
      //Test Result Assert
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test_getProduct_02()  throws Throwable  {
      //caseID:c345cb5921597568b8b3db34c117f06a
      //CoveredLines: [16, 18]
      //Assert: assertNull(method_result);
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      
      //Call method: getProduct
      PmsProduct pmsProduct0 = pmsPortalProductDetail0.getProduct();
      
      //Test Result Assert
      assertNull(pmsProduct0);
  }

  @Test(timeout = 4000)
  public void test_getProductAttributeList_03()  throws Throwable  {
      //caseID:3c545b6ccf29ec493970137e38306132
      //CoveredLines: [16, 22]
      //Assert: assertEquals(0, method_result.size());
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      ArrayList<PmsProductAttribute> arrayList0 = new ArrayList<PmsProductAttribute>();
      
      PrivateAccess.setVariable((Class<?>) PmsPortalProductDetail.class, pmsPortalProductDetail0, "productAttributeList", (Object) arrayList0);
      
      //Call method: getProductAttributeList
      List<PmsProductAttribute> list0 = pmsPortalProductDetail0.getProductAttributeList();
      
      //Test Result Assert
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test_getProductAttributeValueList_04()  throws Throwable  {
      //caseID:cf96685a60b805aa77df8f1873353951
      //CoveredLines: [16, 24]
      //Assert: assertNull(method_result);
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      
      //Call method: getProductAttributeValueList
      List<PmsProductAttributeValue> list0 = pmsPortalProductDetail0.getProductAttributeValueList();
      
      //Test Result Assert
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test_getProductFullReductionList_05()  throws Throwable  {
      //caseID:817b11d7a680ac4b1c21c5351696b5e1
      //CoveredLines: [16, 30]
      //Assert: assertTrue(method_result.isEmpty());
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      ArrayList<PmsProductFullReduction> arrayList0 = new ArrayList<PmsProductFullReduction>();
      
      PrivateAccess.setVariable((Class<?>) PmsPortalProductDetail.class, pmsPortalProductDetail0, "productFullReductionList", (Object) arrayList0);
      
      //Call method: getProductFullReductionList
      List<PmsProductFullReduction> list0 = pmsPortalProductDetail0.getProductFullReductionList();
      
      //Test Result Assert
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test_getProductLadderList_06()  throws Throwable  {
      //caseID:7d99a73af2fd9ac6639b69601986083d
      //CoveredLines: [16, 28]
      //Assert: assertEquals(0, method_result.size());
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      ArrayList<PmsProductLadder> arrayList0 = new ArrayList<PmsProductLadder>();
      
      PrivateAccess.setVariable((Class<?>) PmsPortalProductDetail.class, pmsPortalProductDetail0, "productLadderList", (Object) arrayList0);
      
      //Call method: getProductLadderList
      List<PmsProductLadder> list0 = pmsPortalProductDetail0.getProductLadderList();
      
      //Test Result Assert
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test_getSkuStockList_07()  throws Throwable  {
      //caseID:3532088c4884f4eac72a3d1b9677baf2
      //CoveredLines: [16, 26]
      //Assert: assertNull(method_result);
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      
      //Call method: getSkuStockList
      List<PmsSkuStock> list0 = pmsPortalProductDetail0.getSkuStockList();
      
      //Test Result Assert
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test_setBrand_08()  throws Throwable  {
      //caseID:8be84a34b1a71a0b45f8bd252adabcdf
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 15, 16]
      //Input_0_PmsBrand: {}
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      //mock pmsBrand0
      PmsBrand pmsBrand0 = mock(PmsBrand.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: setBrand
      pmsPortalProductDetail0.setBrand(pmsBrand0);
  }

  @Test(timeout = 4000)
  public void test_setCouponList_09()  throws Throwable  {
      //caseID:1b057c3b343d3e770399862c8a8c1f0f
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 15, 16]
      //Input_0_List<SmsCoupon>: linkedList0
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      LinkedList<SmsCoupon> linkedList0 = new LinkedList<SmsCoupon>();
      
      //Call method: setCouponList
      pmsPortalProductDetail0.setCouponList(linkedList0);
      
      //Test Result Assert
      assertEquals(0, linkedList0.size());
  }

  @Test(timeout = 4000)
  public void test_setProduct_10()  throws Throwable  {
      //caseID:569fe2667d333e88a39e767eb7c2ea67
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 15, 16]
      //Input_0_PmsProduct: {}
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      //mock pmsProduct0
      PmsProduct pmsProduct0 = mock(PmsProduct.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: setProduct
      pmsPortalProductDetail0.setProduct(pmsProduct0);
  }

  @Test(timeout = 4000)
  public void test_setProductAttributeList_11()  throws Throwable  {
      //caseID:6ba26ed4864517a3c8d537ca72b09201
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 15, 16]
      //Input_0_List<PmsProductAttribute>: vector0
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      Vector<PmsProductAttribute> vector0 = new Vector<PmsProductAttribute>();
      
      //Call method: setProductAttributeList
      pmsPortalProductDetail0.setProductAttributeList(vector0);
      
      //Test Result Assert
      assertEquals(10, vector0.capacity());
  }

  @Test(timeout = 4000)
  public void test_setProductAttributeValueList_12()  throws Throwable  {
      //caseID:5613ead5430d57a58e259e19d20f8d0a
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 15, 16]
      //Input_0_List<PmsProductAttributeValue>: arrayList0
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      ArrayList<PmsProductAttributeValue> arrayList0 = new ArrayList<PmsProductAttributeValue>();
      
      //Call method: setProductAttributeValueList
      pmsPortalProductDetail0.setProductAttributeValueList(arrayList0);
      
      //Test Result Assert
      assertTrue(arrayList0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test_setProductFullReductionList_13()  throws Throwable  {
      //caseID:b448d3149f491ef21b6a1d4249be0ffb
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 15, 16]
      //Input_0_List<PmsProductFullReduction>: stack0
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      Stack<PmsProductFullReduction> stack0 = new Stack<PmsProductFullReduction>();
      
      //Call method: setProductFullReductionList
      pmsPortalProductDetail0.setProductFullReductionList(stack0);
      
      //Test Result Assert
      assertTrue(stack0.empty());
  }

  @Test(timeout = 4000)
  public void test_setProductLadderList_14()  throws Throwable  {
      //caseID:23e0bf09ee51fe6fb20ff6715ddfeb36
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 15, 16]
      //Input_0_List<PmsProductLadder>: linkedList0
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      LinkedList<PmsProductLadder> linkedList0 = new LinkedList<PmsProductLadder>();
      
      //Call method: setProductLadderList
      pmsPortalProductDetail0.setProductLadderList(linkedList0);
      
      //Test Result Assert
      assertEquals(0, linkedList0.size());
  }

  @Test(timeout = 4000)
  public void test_setSkuStockList_15()  throws Throwable  {
      //caseID:6b4453a3d598afd2380f02d1929732c4
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 15, 16]
      //Input_0_List<PmsSkuStock>: arrayList0
      
      PmsPortalProductDetail pmsPortalProductDetail0 = new PmsPortalProductDetail();
      ArrayList<PmsSkuStock> arrayList0 = new ArrayList<PmsSkuStock>();
      
      //Call method: setSkuStockList
      pmsPortalProductDetail0.setSkuStockList(arrayList0);
      
      //Test Result Assert
      assertTrue(arrayList0.isEmpty());
  }
}
