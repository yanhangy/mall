/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.portal.controller;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.macro.mall.common.api.CommonPage;
import com.macro.mall.common.api.CommonResult;
import com.macro.mall.model.PmsProduct;
import com.macro.mall.portal.controller.PmsPortalProductController;
import com.macro.mall.portal.domain.PmsPortalProductDetail;
import com.macro.mall.portal.domain.PmsProductCategoryNode;
import com.macro.mall.portal.service.PmsPortalProductService;
import java.util.LinkedList;
import java.util.List;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class PmsPortalProductController_SSTest extends PmsPortalProductController_SSTest_scaffolding {
// allCoveredLines:[25, 41, 42, 49, 50, 57, 58]

  @Test(timeout = 4000)
  public void test_categoryTreeList_0()  throws Throwable  {
      //caseID:125e88d8d3a74c45acd6c00adbcb2e76
      //CoveredLines: [25, 49, 50]
      //Assert: assertEquals("\u64CD\u4F5C\u6210\u529F", method_result.getMessage());
      
      PmsPortalProductController pmsPortalProductController0 = new PmsPortalProductController();
      //mock pmsPortalProductService0
      PmsPortalProductService pmsPortalProductService0 = mock(PmsPortalProductService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      PrivateAccess.setVariable((Class<?>) PmsPortalProductController.class, pmsPortalProductController0, "portalProductService", (Object) pmsPortalProductService0);
      
      //Call method: categoryTreeList
      CommonResult<List<PmsProductCategoryNode>> commonResult0 = pmsPortalProductController0.categoryTreeList();
      
      //Test Result Assert
      assertEquals("\u64CD\u4F5C\u6210\u529F", commonResult0.getMessage());
  }

  @Test(timeout = 4000)
  public void test_detail_1()  throws Throwable  {
      //caseID:120393fb99ad9dc327b92aa15c503c34
      //CoveredLines: [25, 57, 58]
      //Input_0_Long: (-1L)
      //Assert: assertEquals("\u64CD\u4F5C\u6210\u529F", method_result.getMessage());
      
      PmsPortalProductController pmsPortalProductController0 = new PmsPortalProductController();
      //mock pmsPortalProductService0
      PmsPortalProductService pmsPortalProductService0 = mock(PmsPortalProductService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      PrivateAccess.setVariable((Class<?>) PmsPortalProductController.class, pmsPortalProductController0, "portalProductService", (Object) pmsPortalProductService0);
      Long long0 = new Long((-1L));
      
      //Call method: detail
      CommonResult<PmsPortalProductDetail> commonResult0 = pmsPortalProductController0.detail(long0);
      
      //Test Result Assert
      assertEquals("\u64CD\u4F5C\u6210\u529F", commonResult0.getMessage());
  }

  @Test(timeout = 4000)
  public void test_search_2()  throws Throwable  {
      //caseID:46206fdaade01922d9d8a8c997f9cf9c
      //CoveredLines: [25, 41, 42]
      //Input_0_String: 1.0
      //Input_1_Long: 1068L
      //Input_2_Long: 1068L
      //Input_3_Integer: 0
      //Input_4_Integer: 0
      //Input_5_Integer: 0
      //Assert: assertEquals("\u64CD\u4F5C\u6210\u529F", method_result.getMessage());
      
      PmsPortalProductController pmsPortalProductController0 = new PmsPortalProductController();
      LinkedList<PmsProduct> linkedList0 = new LinkedList<PmsProduct>();
      //mock pmsPortalProductService0
      PmsPortalProductService pmsPortalProductService0 = mock(PmsPortalProductService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(linkedList0).when(pmsPortalProductService0).search(anyString() , anyLong() , anyLong() , anyInt() , anyInt() , anyInt());
      
      PrivateAccess.setVariable((Class<?>) PmsPortalProductController.class, pmsPortalProductController0, "portalProductService", (Object) pmsPortalProductService0);
      Long long0 = new Long(1068L);
      Integer integer0 = new Integer(0);
      
      //Call method: search
      CommonResult<CommonPage<PmsProduct>> commonResult0 = pmsPortalProductController0.search("1.0", long0, long0, integer0, integer0, integer0);
      
      //Test Result Assert
      assertEquals("\u64CD\u4F5C\u6210\u529F", commonResult0.getMessage());
  }
}
