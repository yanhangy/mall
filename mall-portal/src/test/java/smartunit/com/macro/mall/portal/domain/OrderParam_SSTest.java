/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.portal.domain;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.macro.mall.portal.domain.OrderParam;
import java.util.ArrayList;
import java.util.List;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class OrderParam_SSTest extends OrderParam_SSTest_scaffolding {
// allCoveredLines:[13, 14, 17, 19, 21, 23, 25]

  @Test(timeout = 4000)
  public void test_equals_00()  throws Throwable  {
      //caseID:647c9c47e2afa1c9c4fe46b69bb00279
      //CoveredLines: [13, 13, 13, 13, 13, 13, 13, 14, 14, 14]
      //Input_0_Object: null
      //Assert: assertFalse(method_result);
      
      OrderParam orderParam0 = new OrderParam();
      
      //Call method: equals
      boolean boolean0 = orderParam0.equals(null);
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_01()  throws Throwable  {
      //caseID:8e4fa0eec30d4d470e6c11fc12ed04fa
      //CoveredLines: [13, 13, 13, 13, 13, 13, 13, 14, 14, 14]
      //Input_0_Object: orderParam0
      //Assert: assertTrue(method_result);
      
      OrderParam orderParam0 = new OrderParam();
      
      //Call method: equals
      boolean boolean0 = orderParam0.equals(orderParam0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_02()  throws Throwable  {
      //caseID:2fdc2a9a0c6b3e6258ce07f6a6e7ec43
      //CoveredLines: [13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 17, 19, 21, 23, 25]
      //Input_0_Object: orderParam0
      //Assert: assertTrue(method_result);
      
      OrderParam orderParam0 = new OrderParam();
      OrderParam orderParam1 = new OrderParam();
      
      //Call method: equals
      boolean boolean0 = orderParam1.equals(orderParam0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_03()  throws Throwable  {
      //caseID:541c7d6f89d4263de047af42ccac362b
      //CoveredLines: [13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 17, 19, 21, 23, 25]
      //Input_0_Object: orderParam1
      //Assert: assertTrue(method_result);
      
      OrderParam orderParam0 = new OrderParam();
      OrderParam orderParam1 = new OrderParam();
      
      //Call method: equals
      boolean boolean0 = orderParam0.equals(orderParam1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_hashCode_04()  throws Throwable  {
      //caseID:62f7540e65a9dcf689c2866f9fd5ee28
      //CoveredLines: [13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 17, 19, 21, 23, 25]
      
      OrderParam orderParam0 = new OrderParam();
      
      //Call method: hashCode
      orderParam0.hashCode();
  }

  @Test(timeout = 4000)
  public void test_setCartIds_05()  throws Throwable  {
      //caseID:14813a26b8d76adba36deb28d05fa418
      //CoveredLines: [13, 13, 13, 13, 13, 13, 13]
      //Input_0_List<Long>: arrayList0
      
      OrderParam orderParam0 = new OrderParam();
      ArrayList<Long> arrayList0 = new ArrayList<Long>();
      
      //Call method: setCartIds
      orderParam0.setCartIds(arrayList0);
      
      //Test Result Assert
      assertNull(orderParam0.getUseIntegration());
  }

  @Test(timeout = 4000)
  public void test_setCouponId_06()  throws Throwable  {
      //caseID:88242e0f83b036fe81529e3f6cd9d705
      //CoveredLines: [13, 13, 13, 13, 13, 13, 13]
      //Input_0_Long: 1L
      
      OrderParam orderParam0 = new OrderParam();
      Long long0 = new Long(1L);
      
      //Call method: setCouponId
      orderParam0.setCouponId(long0);
      
      //Test Result Assert
      assertNull(orderParam0.getMemberReceiveAddressId());
  }

  @Test(timeout = 4000)
  public void test_setMemberReceiveAddressId_07()  throws Throwable  {
      //caseID:a62509cdc7b980b0e89ef255f18c1e17
      //CoveredLines: [13, 13, 13, 13, 13, 13, 13]
      //Input_0_Long: 0L
      
      OrderParam orderParam0 = new OrderParam();
      Long long0 = new Long(0L);
      
      //Call method: setMemberReceiveAddressId
      orderParam0.setMemberReceiveAddressId(long0);
      
      //Test Result Assert
      assertNull(orderParam0.getUseIntegration());
  }

  @Test(timeout = 4000)
  public void test_setPayType_08()  throws Throwable  {
      //caseID:c8b57f793fd5237e13d70069fe3acecb
      //CoveredLines: [13, 13, 13, 13, 13, 13, 13]
      //Input_0_Integer: 308
      
      OrderParam orderParam0 = new OrderParam();
      Integer integer0 = new Integer(308);
      
      //Call method: setPayType
      orderParam0.setPayType(integer0);
      
      //Test Result Assert
      assertNull(orderParam0.getMemberReceiveAddressId());
  }

  @Test(timeout = 4000)
  public void test_setUseIntegration_09()  throws Throwable  {
      //caseID:231aeb85f1e473583173c18a5d5f2727
      //CoveredLines: [13, 13, 13, 13, 13, 13, 13]
      //Input_0_Integer: 43
      
      OrderParam orderParam0 = new OrderParam();
      Integer integer0 = new Integer(43);
      
      //Call method: setUseIntegration
      orderParam0.setUseIntegration(integer0);
      
      //Test Result Assert
      assertNull(orderParam0.getPayType());
  }

  @Test(timeout = 4000)
  public void test_toString_10()  throws Throwable  {
      //caseID:c7ac9420c09f6975ea646d023f641755
      //CoveredLines: [13, 13, 13, 13, 13, 13, 13, 17, 19, 21, 23, 25]
      //Assert: assertEquals("OrderParam(memberReceiveAddressId=null, couponId=null, useIntegration=null, payType=null, cartIds=null)", method_result);
      
      OrderParam orderParam0 = new OrderParam();
      
      //Call method: toString
      String string0 = orderParam0.toString();
      
      //Test Result Assert
      assertEquals("OrderParam(memberReceiveAddressId=null, couponId=null, useIntegration=null, payType=null, cartIds=null)", string0);
  }
}
