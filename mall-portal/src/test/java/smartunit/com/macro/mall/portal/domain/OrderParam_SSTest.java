/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.portal.domain;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.macro.mall.portal.domain.OrderParam;
import java.util.List;
import java.util.Vector;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class OrderParam_SSTest extends OrderParam_SSTest_scaffolding {
// allCoveredLines:[13, 14, 17, 19, 21, 23, 25]

  @Test(timeout = 4000)
  public void test_equals_00()  throws Throwable  {
      //caseID:3d3b47a3a750e2328201527d62206c57
      //CoveredLines: [13, 13, 13, 13, 13, 13, 13, 14, 14, 14]
      //Input_0_Object: orderParam0
      //Assert: assertTrue(method_result);
      
      OrderParam orderParam0 = new OrderParam();
      
      //Call method: equals
      boolean boolean0 = orderParam0.equals(orderParam0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_01()  throws Throwable  {
      //caseID:fb6a72498d94781bdfd64ccf822eb159
      //CoveredLines: [13, 13, 13, 13, 13, 13, 13, 14, 14, 14]
      //Input_0_Object: (-1)
      //Assert: assertFalse(method_result);
      
      OrderParam orderParam0 = new OrderParam();
      Long long0 = new Long((-1));
      
      //Call method: equals
      boolean boolean0 = orderParam0.equals(long0);
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_02()  throws Throwable  {
      //caseID:1b5b93c74ada2456e5bc1b01b9b6beb9
      //CoveredLines: [13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 17, 19, 21, 23, 25]
      //Input_0_Object: orderParam1
      //Assert: assertTrue(method_result);
      
      OrderParam orderParam0 = new OrderParam();
      OrderParam orderParam1 = new OrderParam();
      
      //Call method: equals
      boolean boolean0 = orderParam0.equals(orderParam1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_03()  throws Throwable  {
      //caseID:8179c5a030703885623bbf10c5c611b7
      //CoveredLines: [13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 17, 19, 21, 23, 25]
      //Input_0_Object: orderParam0
      //Assert: assertTrue(method_result);
      
      OrderParam orderParam0 = new OrderParam();
      OrderParam orderParam1 = new OrderParam();
      
      //Call method: equals
      boolean boolean0 = orderParam1.equals(orderParam0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_hashCode_04()  throws Throwable  {
      //caseID:9233a9edc1ab874b2343f477a0f23db1
      //CoveredLines: [13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 17, 19, 21, 23, 25]
      
      OrderParam orderParam0 = new OrderParam();
      
      //Call method: hashCode
      orderParam0.hashCode();
  }

  @Test(timeout = 4000)
  public void test_setCartIds_05()  throws Throwable  {
      //caseID:75c5996657ad0486bc2fa3a7e66c4554
      //CoveredLines: [13, 13, 13, 13, 13, 13, 13]
      //Input_0_List<Long>: vector0
      
      OrderParam orderParam0 = new OrderParam();
      Vector<Long> vector0 = new Vector<Long>();
      
      //Call method: setCartIds
      orderParam0.setCartIds(vector0);
      
      //Test Result Assert
      assertNull(orderParam0.getMemberReceiveAddressId());
  }

  @Test(timeout = 4000)
  public void test_setCouponId_06()  throws Throwable  {
      //caseID:0fb39e5b7cfc8da429185fd1c41bcb1f
      //CoveredLines: [13, 13, 13, 13, 13, 13, 13]
      //Input_0_Long: 1L
      
      OrderParam orderParam0 = new OrderParam();
      Long long0 = new Long(1L);
      
      //Call method: setCouponId
      orderParam0.setCouponId(long0);
      
      //Test Result Assert
      assertNull(orderParam0.getUseIntegration());
  }

  @Test(timeout = 4000)
  public void test_setMemberReceiveAddressId_07()  throws Throwable  {
      //caseID:3095f433f262cc1f8ef4d06c24474873
      //CoveredLines: [13, 13, 13, 13, 13, 13, 13]
      //Input_0_Long: 0L
      
      OrderParam orderParam0 = new OrderParam();
      Long long0 = new Long(0L);
      
      //Call method: setMemberReceiveAddressId
      orderParam0.setMemberReceiveAddressId(long0);
      
      //Test Result Assert
      assertNull(orderParam0.getUseIntegration());
  }

  @Test(timeout = 4000)
  public void test_setPayType_08()  throws Throwable  {
      //caseID:ee42672fac5bd6c8b121292b556041d9
      //CoveredLines: [13, 13, 13, 13, 13, 13, 13]
      //Input_0_Integer: 0
      
      OrderParam orderParam0 = new OrderParam();
      Integer integer0 = new Integer(0);
      
      //Call method: setPayType
      orderParam0.setPayType(integer0);
      
      //Test Result Assert
      assertNull(orderParam0.getCouponId());
  }

  @Test(timeout = 4000)
  public void test_setUseIntegration_09()  throws Throwable  {
      //caseID:1bd81907fe787eb7504707dfe6c24268
      //CoveredLines: [13, 13, 13, 13, 13, 13, 13]
      //Input_0_Integer: 2631
      
      OrderParam orderParam0 = new OrderParam();
      Integer integer0 = new Integer(2631);
      
      //Call method: setUseIntegration
      orderParam0.setUseIntegration(integer0);
      
      //Test Result Assert
      assertNull(orderParam0.getMemberReceiveAddressId());
  }

  @Test(timeout = 4000)
  public void test_toString_10()  throws Throwable  {
      //caseID:97e386644972cba3dc0259ec03c0c7fa
      //CoveredLines: [13, 13, 13, 13, 13, 13, 13, 17, 19, 21, 23, 25]
      //Assert: assertEquals("OrderParam(memberReceiveAddressId=null, couponId=null, useIntegration=null, payType=null, cartIds=null)", method_result);
      
      OrderParam orderParam0 = new OrderParam();
      
      //Call method: toString
      String string0 = orderParam0.toString();
      
      //Test Result Assert
      assertEquals("OrderParam(memberReceiveAddressId=null, couponId=null, useIntegration=null, payType=null, cartIds=null)", string0);
  }
}
