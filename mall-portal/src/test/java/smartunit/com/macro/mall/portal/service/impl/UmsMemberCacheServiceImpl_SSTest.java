/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.portal.service.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.macro.mall.common.service.RedisService;
import com.macro.mall.mapper.UmsMemberMapper;
import com.macro.mall.model.UmsMember;
import com.macro.mall.portal.service.impl.UmsMemberCacheServiceImpl;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class UmsMemberCacheServiceImpl_SSTest extends UmsMemberCacheServiceImpl_SSTest_scaffolding {
// allCoveredLines:[17, 35, 36, 37, 38, 40, 44, 45, 50, 51, 52, 57, 58, 59, 64, 65]

  @Test(timeout = 4000)
  public void test_delMember_0()  throws Throwable  {
      //caseID:7aae90cf4029b3a3126b88bd0dcfb325
      //CoveredLines: [17, 35, 36, 40]
      //Input_0_Long: 1262L
      
      UmsMemberCacheServiceImpl umsMemberCacheServiceImpl0 = new UmsMemberCacheServiceImpl();
      //mock umsMemberMapper0
      UmsMemberMapper umsMemberMapper0 = mock(UmsMemberMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      Long long0 = new Long(1262L);
      PrivateAccess.setVariable((Class<?>) UmsMemberCacheServiceImpl.class, umsMemberCacheServiceImpl0, "memberMapper", (Object) umsMemberMapper0);
      
      //Call method: delMember
      umsMemberCacheServiceImpl0.delMember(long0);
  }

  @Test(timeout = 4000)
  public void test_delMember_1()  throws Throwable  {
      //caseID:d00118d2c0824092d4390450b93bc39a
      //CoveredLines: [17, 35, 36, 37, 38, 40]
      //Input_0_Long: 1262L
      
      UmsMemberCacheServiceImpl umsMemberCacheServiceImpl0 = new UmsMemberCacheServiceImpl();
      //mock redisService0
      RedisService redisService0 = mock(RedisService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      //mock umsMember0
      UmsMember umsMember0 = mock(UmsMember.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      //mock umsMemberMapper0
      UmsMemberMapper umsMemberMapper0 = mock(UmsMemberMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(umsMember0).when(umsMemberMapper0).selectByPrimaryKey(anyLong());
      Long long0 = new Long(1262L);
      PrivateAccess.setVariable((Class<?>) UmsMemberCacheServiceImpl.class, umsMemberCacheServiceImpl0, "memberMapper", (Object) umsMemberMapper0);
      PrivateAccess.setVariable((Class<?>) UmsMemberCacheServiceImpl.class, umsMemberCacheServiceImpl0, "redisService", (Object) redisService0);
      
      //Call method: delMember
      umsMemberCacheServiceImpl0.delMember(long0);
  }

  @Test(timeout = 4000)
  public void test_getAuthCode_2()  throws Throwable  {
      //caseID:15df53d5c4ac2841da7b51c39df999e4
      //CoveredLines: [17, 64, 65]
      //Input_0_String: "com.macro.mall.portal.service.impl.UmsMemberCacheServiceImpl"
      //Assert: assertNull(method_result);
      
      UmsMemberCacheServiceImpl umsMemberCacheServiceImpl0 = new UmsMemberCacheServiceImpl();
      //mock redisService0
      RedisService redisService0 = mock(RedisService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      PrivateAccess.setVariable((Class<?>) UmsMemberCacheServiceImpl.class, umsMemberCacheServiceImpl0, "redisService", (Object) redisService0);
      
      //Call method: getAuthCode
      String string0 = umsMemberCacheServiceImpl0.getAuthCode("com.macro.mall.portal.service.impl.UmsMemberCacheServiceImpl");
      
      //Test Result Assert
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test_getMember_3()  throws Throwable  {
      //caseID:fe739dacad37aa646359fbf5568ba54e
      //CoveredLines: [17, 44, 45]
      //Input_0_String: "1.0"
      //Assert: assertNull(method_result);
      
      UmsMemberCacheServiceImpl umsMemberCacheServiceImpl0 = new UmsMemberCacheServiceImpl();
      //mock redisService0
      RedisService redisService0 = mock(RedisService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      PrivateAccess.setVariable((Class<?>) UmsMemberCacheServiceImpl.class, umsMemberCacheServiceImpl0, "redisService", (Object) redisService0);
      
      //Call method: getMember
      UmsMember umsMember0 = umsMemberCacheServiceImpl0.getMember("1.0");
      
      //Test Result Assert
      assertNull(umsMember0);
  }

  @Test(timeout = 4000)
  public void test_setAuthCode_4()  throws Throwable  {
      //caseID:036a6e2cf98bad8994c788bad3ff179c
      //CoveredLines: [17, 57, 58, 59]
      //Input_0_String: "releaseIndex"
      //Input_1_String: "releaseIndex"
      
      UmsMemberCacheServiceImpl umsMemberCacheServiceImpl0 = new UmsMemberCacheServiceImpl();
      //mock redisService0
      RedisService redisService0 = mock(RedisService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      Long long0 = new Long(3040L);
      PrivateAccess.setVariable((Class<?>) UmsMemberCacheServiceImpl.class, umsMemberCacheServiceImpl0, "REDIS_EXPIRE_AUTH_CODE", (Object) long0);
      PrivateAccess.setVariable((Class<?>) UmsMemberCacheServiceImpl.class, umsMemberCacheServiceImpl0, "redisService", (Object) redisService0);
      
      //Call method: setAuthCode
      umsMemberCacheServiceImpl0.setAuthCode("releaseIndex", "releaseIndex");
  }

  @Test(timeout = 4000)
  public void test_setMember_5()  throws Throwable  {
      //caseID:49261745461a739b8d241de4a3a12071
      //CoveredLines: [17, 50, 51, 52]
      //Input_0_UmsMember: {}
      
      UmsMemberCacheServiceImpl umsMemberCacheServiceImpl0 = new UmsMemberCacheServiceImpl();
      //mock redisService0
      RedisService redisService0 = mock(RedisService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      Long long0 = new Long(0L);
      PrivateAccess.setVariable((Class<?>) UmsMemberCacheServiceImpl.class, umsMemberCacheServiceImpl0, "REDIS_EXPIRE", (Object) long0);
      PrivateAccess.setVariable((Class<?>) UmsMemberCacheServiceImpl.class, umsMemberCacheServiceImpl0, "redisService", (Object) redisService0);
      //mock umsMember0
      UmsMember umsMember0 = mock(UmsMember.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: setMember
      umsMemberCacheServiceImpl0.setMember(umsMember0);
  }
}
