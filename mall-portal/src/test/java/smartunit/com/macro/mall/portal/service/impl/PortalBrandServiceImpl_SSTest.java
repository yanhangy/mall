/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.portal.service.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.macro.mall.common.api.CommonPage;
import com.macro.mall.mapper.PmsBrandMapper;
import com.macro.mall.mapper.PmsProductMapper;
import com.macro.mall.model.PmsBrand;
import com.macro.mall.model.PmsProduct;
import com.macro.mall.portal.dao.HomeDao;
import com.macro.mall.portal.service.impl.PortalBrandServiceImpl;
import java.util.List;
import java.util.Vector;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class PortalBrandServiceImpl_SSTest extends PortalBrandServiceImpl_SSTest_scaffolding {
// allCoveredLines:[22, 32, 33, 38, 43, 44, 45, 46, 47, 48]

  @Test(timeout = 4000)
  public void test_detail_0()  throws Throwable  {
      //caseID:3b397db6a05e0eb77b6e717f2c6717de
      //CoveredLines: [22, 38]
      //Input_0_Long: 0L
      //Assert: assertNull(method_result);
      
      PortalBrandServiceImpl portalBrandServiceImpl0 = new PortalBrandServiceImpl();
      //mock pmsBrandMapper0
      PmsBrandMapper pmsBrandMapper0 = mock(PmsBrandMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      PrivateAccess.setVariable((Class<?>) PortalBrandServiceImpl.class, portalBrandServiceImpl0, "brandMapper", (Object) pmsBrandMapper0);
      Long long0 = new Long(0L);
      
      //Call method: detail
      PmsBrand pmsBrand0 = portalBrandServiceImpl0.detail(long0);
      
      //Test Result Assert
      assertNull(pmsBrand0);
  }

  @Test(timeout = 4000)
  public void test_productList_1()  throws Throwable  {
      //caseID:04aa5fcc0c4e36307daf2f1b943d3049
      //CoveredLines: [22, 43, 44, 45, 46, 47, 48]
      //Input_0_Long: 1906L
      //Input_1_Integer: 1
      //Input_2_Integer: 1
      //Assert: assertEquals(0, (int)method_result.getPageSize());
      
      PortalBrandServiceImpl portalBrandServiceImpl0 = new PortalBrandServiceImpl();
      Vector<PmsProduct> vector0 = new Vector<PmsProduct>();
      //mock pmsProductMapper0
      PmsProductMapper pmsProductMapper0 = mock(PmsProductMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(vector0).when(pmsProductMapper0).selectByExample(any(com.macro.mall.model.PmsProductExample.class));
      PrivateAccess.setVariable((Class<?>) PortalBrandServiceImpl.class, portalBrandServiceImpl0, "productMapper", (Object) pmsProductMapper0);
      Long long0 = new Long(1906L);
      Integer integer0 = new Integer(1);
      
      //Call method: productList
      CommonPage<PmsProduct> commonPage0 = portalBrandServiceImpl0.productList(long0, integer0, integer0);
      
      //Test Result Assert
      assertEquals(0, (int)commonPage0.getPageSize());
  }

  @Test(timeout = 4000)
  public void test_recommendList_2()  throws Throwable  {
      //caseID:3b574913cc20070d3fda5e23b99c43dc
      //CoveredLines: [22, 32, 33]
      //Input_0_Integer: 49
      //Input_1_Integer: 49
      //Assert: assertNull(method_result);
      
      PortalBrandServiceImpl portalBrandServiceImpl0 = new PortalBrandServiceImpl();
      //mock homeDao0
      HomeDao homeDao0 = mock(HomeDao.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      PrivateAccess.setVariable((Class<?>) PortalBrandServiceImpl.class, portalBrandServiceImpl0, "homeDao", (Object) homeDao0);
      Integer integer0 = new Integer(49);
      
      //Call method: recommendList
      List<PmsBrand> list0 = portalBrandServiceImpl0.recommendList(integer0, integer0);
      
      //Test Result Assert
      assertNull(list0);
  }
}
